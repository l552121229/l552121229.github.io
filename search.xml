<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CentOS 7安装TCP BBR拥塞算法</title>
    <url>/posts/907e528c/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="认识BBR拥塞算法"><a href="#认识BBR拥塞算法" class="headerlink" title="认识BBR拥塞算法"></a>认识BBR拥塞算法</h4><p>从 4.9 开始，Linux 内核已经用上了该算法。根据以往的传统，Google 总是先在自家的生产环境上线运用后，才会将代码开源，此次也不例外。<br>根据实地测试，在部署了最新版内核并开启了 TCP BBR 的机器上，网速甚至可以提升好几个数量级。<br><a id="more"></a><br><code>TCP BBR拥塞算法</code>致力于解决两个问题:</p><ol><li>在有一定丢包率的网络链路上充分利用带宽。</li><li>降低网络链路上的 buffer 占用率，从而降低延迟。</li></ol><p>在标准<code>TCP</code>通讯的情况下，为了充分利用带宽所采用的方案是：不断增加发送窗口，直到开始丢包，然后较快地减小发送窗口。<br>这种做法在一般情况下没什么问题，但是在存在传输错误导致的丢包地情况下就没那么好使了。<br>在有一定的丢包率的延迟高、宽带大的链路上标准的<code>TCP拥塞控制</code>就会把发送窗口收敛到很小。<br>同时在网络中也有很多缓存空间用来吸收网络中的流量波动。由于标准的<code>TCP拥塞控制</code>是通过灌满带宽的方式来估算需要的发送窗口的，在连接的开始阶段，网络中的缓存空间就倾向于被占满。后续缓存空间会被逐渐释放，但并不会消失。客户端估计的水管容积总是略大于网络中除去缓存空间的实际容量。这个问题又被称之为<code>缓存区膨胀</code>。<br><code>缓存区膨胀</code>主要带来了两个问题：</p><ol><li>增加网络延迟。</li><li>在连接数较多时容易导致缓存区被填满导致丢包。</li></ol><p><code>TCP BBR</code>是用以下方法解决这两个问题的：</p><ol><li>既然分不清拥塞丢包和错误丢包那就不考虑丢包问题。</li><li>既然管满水管会导致缓存区膨胀那就估计带宽和延迟，不直接估计水管体积。</li></ol><p>带宽和延迟本身是没法同时测量的，测量最大带宽就需要把缓存区填满，测量最低延迟就需要把缓存区清空。<code>TCP BBR</code>所采用的方案是交替测量，用一段时间内的最大带宽和另一段时间内的最低延迟作为估计值。<br>在连接刚开始建立时，它采用了和标准<code>TCP</code>类似的慢启动，指数增长发送速率。而标准的<code>TCP拥塞控制</code>会在遇到任何一个丢包就立刻开始减速，开始拥塞避免。这时，标准<code>TCP拥塞控制</code>本意是达到带宽的最大值开始进行网络控制，但是在有一定的丢包率的情况下也有可能是单纯的网络丢包，这时网络并没有达到带宽的最大值；如果网络中存在缓存区，它也会一直到把缓存区填满才会放弃。<br><code>TCP BBR</code>则是根据收到的确认包，发现有效带宽不再增长时开始拥塞避免。这时，只要链路的丢包率不算特别高，对<code>BBR</code>就几乎没什么影响；当发送速率增长到开始占用缓存区时（这时可以通过延迟的增加判断出来），<code>BBR</code>就及时的放弃了（这时占用的是3倍带宽，相当于有2倍在占用缓存区，但<code>BBR</code>本身还有一个排空阶段，在排空阶段下它会指数降低发送速率），这样就不会把缓存区占满。<br>排空阶段过后就是稳定运行状态，交替探测带宽和延迟，以此来作为基准进行发包。<br></p><h4 id="安装TCP-BBR拥塞算法"><a href="#安装TCP-BBR拥塞算法" class="headerlink" title="安装TCP BBR拥塞算法"></a>安装TCP BBR拥塞算法</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat /etc/redhat-release #查看系统版本，输出的release数值大于7.3即可。</span><br></pre></td></tr></table></figure><ol><li><p>自动安装，使用一键安装脚本</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh</span><br></pre></td></tr></table></figure></li><li><p>手动安装</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用下面命令安装elrepo并升级内核</span></span><br><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span><br><span class="line">yum --enablerepo=elrepo-kernel install kernel-ml -y</span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新grub文件并重启（reboot后，ssh会断开，稍等一会儿重新连接）</span></span><br><span class="line">egrep ^menuentry /etc/grub2.cfg | cut -f 2 -d \'</span><br><span class="line">grub2-set-default 0</span><br><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line">reboot</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开机后查看内核是否已经升级</span></span><br><span class="line">uname -r</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动BBR</span></span><br><span class="line">echo "net.core.default_qdisc = fq" &gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo "net.ipv4.tcp_congestion_control = bbr" &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure></li></ol><p>验证bbr是否已经开启<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control #验证当前TCP控制算法的命令</span><br><span class="line">sysctl net.ipv4.tcp_congestion_control #验证BBR是否已经启动</span><br><span class="line">lsmod | grep bbr #返回值有 tcp_bbr 模块即说明 bbr 已启动。</span><br></pre></td></tr></table></figure><p></p>]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>CentOS</tag>
        <tag>TCP</tag>
        <tag>BBR</tag>
        <tag>拥塞算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker学习笔记</title>
    <url>/posts/6b8adabf/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="了解-Docker"><a href="#了解-Docker" class="headerlink" title="了解 Docker"></a>了解 Docker</h3><blockquote><p><code>Docker</code> 最初是 <code>dotCloud</code> 公司创始人 <code>Solomon Hykes</code> 在法国期间发起的一个公司内部项目，它是基于 <code>dotCloud</code> 公司多年云服务技术的一次革新，并于 2013 年 3 月以 Apache 2.0 授权协议开源，主要项目代码在 <code>GitHub</code> 上进行维护。<code>Docker</code> 项目后来还加入了 <code>Linux基金会</code>，并成立推动 开放容器联盟（OCI）。<br><a id="more"></a><br><code>Docker</code> 自开源后受到广泛的关注和讨论，至今其 <code>GitHub</code> 项目 已经超过 5 万 2 千个星标和一万多个 <code>fork</code>。甚至由于 <code>Docker</code> 项目的火爆，在 2013 年底，<code>dotCloud</code> 公司决定改名为 <code>Docker</code>。<code>Docker</code> 最初是在 <code>Ubuntu 12.04</code> 上开发实现的；<code>Red Hat</code> 则从 <code>RHEL 6.5</code> 开始对 <code>Docker</code> 进行支持；<code>Google</code> 也在其 <code>PaaS</code> 产品中广泛应用 <code>Docker</code>。<br><code>Docker</code> 使用 <code>Google</code> 公司推出的 <code>Go</code> 语言 进行开发实现，基于 <code>Linux</code> 内核的 <code>cgroup</code>，<code>namespace</code>，以及 <code>AUFS</code> 类的 <code>Union FS</code> 等技术，对进程进行封装隔离，属于 操作系统层面的虚拟化技术。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。最初实现是基于 <code>LXC</code>，从 <code>0.7</code> 版本以后开始去除 <code>LXC</code>，转而使用自行开发的 <code>libcontainer</code>，从 <code>1.11</code> 开始，则进一步演进为使用 <code>runC</code> 和 <code>containerd</code>。</p><footer><strong>Docker — 从入门到实践</strong><cite><a href="https://yeasy.gitbooks.io/docker_practice/introduction/what.html" target="_blank" rel="noopener">什么是 Docker</a></cite></footer></blockquote><img src="images/84118f50.png"><h3 id="Docker-生命周期"><a href="#Docker-生命周期" class="headerlink" title="Docker 生命周期"></a>Docker 生命周期</h3><p>Docker 包括三个基本概念</p><ul><li>镜像（Image）</li><li>容器（Container）</li><li>仓库（Repository）</li></ul><p>容器是由镜像实例化而来的，可以理解成容器是镜像的基础备份，当Docker实例化一个容器时，相当于把这个镜像备份一份，然后在这个备份的基础上启动，开始各种操作。<br>我们可以把镜像想象成类,把容器想象成类经过实例化后的对象。</p><h4 id="Docker-镜像"><a href="#Docker-镜像" class="headerlink" title="Docker 镜像"></a>Docker 镜像</h4><p><code>Docker</code>的镜像概念类似于虚拟机里的镜像，是一个只读的模板，一个独立的文件系统，包括运行容器所需的数据，可以用来创建新的容器。<br>例如：一个镜像可以包含一个完整的 ubuntu 操作系统环境，里面仅安装了Mysql或用户需要的其它应用程序。<br><code>Docker</code>的镜像实际上由一层一层的文件系统组成，这种层级的文件系统被称为UnionFS。镜像可以基于<code>Dockerfile</code>构建，<code>Dockerfile</code>是一个描述文件，里面包含若干条命令，每条命令都会对基础文件系统创建新的层次结构。<br><code>Docker</code>提供了一个很简单的机制来创建镜像或者更新现有的镜像，用户甚至可以直接从其他人那里下载一个已经做好的镜像来直接使用。<br></p><div class="note info"><p>注：镜像是只读的，可以理解为静态文件。</p></div><br>镜像是一堆<code>只读层（read-only layer）</code>的统一视角，那些<code>只读层</code>重叠在一起。除了最下面一层，其它层都会有一个指针指向下一层。这些层是<code>Docker</code>内部的实现细节，并且能够在主机（运行<code>Docker</code>的机器）的文件系统上访问到。<code>统一文件系统（union file system）</code>技术能够将不同的层整合成一个文件系统，为这些层提供了一个统一的视角，这样就隐藏了多层的存在，在用户的角度看来，只存在一个文件系统。<br><div class="note info"><p>注：<code>Docker</code>在linux上共享内核，无需虚拟化，完全支持native功能。<br><code>Docker</code>在windows上，启用<code>Hyper-V</code>或者<code>虚拟化技术</code>，通过虚拟机来实现，不共享windows内核。<br><code>Docker</code>在macOS上，同样用虚拟化技术<code>xhyve</code>或者<code>virtualbox</code>来实现，不共享macOS内核。<br>所以，在macOS和Windows下是无法直接访问到镜像的文件的。</p></div><p></p><h4 id="Docker-容器"><a href="#Docker-容器" class="headerlink" title="Docker 容器"></a>Docker 容器</h4><p><code>Docker</code>利用容器来运行应用。<br><code>容器（container）</code>和<code>镜像（image）</code>的几乎一样，区别就是<code>容器</code>的最上面一层是可读写的<br></p><div class="note info"><p>注：相对于镜像来说容器是动态的，容器在启动的时候创建一层可写层作为最上层。<br>容器的定义并没有提及容器是否在运行。</p></div><p></p><h5 id="Running-Container-Definition"><a href="#Running-Container-Definition" class="headerlink" title="Running Container Definition"></a>Running Container Definition</h5><p>一个<code>运行态容器（running container）</code>被定义为一个可读写的统一文件系统加上隔离的进程空间和包含其中的进程。<br><img src="images/1ccc2aa9e11e25e5ed2efd18cf1052c4.png"><br>一个容器中的进程对着个容器里的文件进行增加，删除，修改操作都将作用于容器中最上面的那一层可读写层。<br><img src="images/a20b70e3e4ca61faa2c3436e1bb2d93a.png"></p><h5 id="Image-Layer-Definition"><a href="#Image-Layer-Definition" class="headerlink" title="Image Layer Definition"></a>Image Layer Definition</h5><p><code>镜像层（image layer）</code>表示一层中的各种零零星星的数据，它并不仅仅包含文件系统的改变，还能包含了其他重要信息。<br><img src="images/39fb0f8e630b338bcca7a29da3acabb7.png"><br><code>元数据（metadata）</code>就是关于这个层的额外信息，它不仅能够让<code>Docker</code>获取运行和构建时的信息，还包括父层的层次信息。需要注意，只读层和读写层都包含元数据。<br><img src="images/f3218a8fcdd1fd8bcd5a719ca3c64f59.png"><br>除此之外，每一层都包括了一个指向父层的指针。如果一个层没有这个指针，说明它处于最底层。<br><img src="images/53e377deeeb5f30bf939ed0836f851c9.png"></p><h4 id="Docker-仓库"><a href="#Docker-仓库" class="headerlink" title="Docker 仓库"></a>Docker 仓库</h4><p>如果你使用过git和github就很容易理解Docker的仓库概念。Docker 仓库的概念跟Git 类似，注册服务器可以理解为 GitHub 这样的托管服务。<br>Docker 仓库是用来包含镜像的位置，Docker提供一个注册服务器（Register）来保存多个仓库，每个仓库又可以包含多个具备不同tag的镜像。Docker运行中使用的默认仓库是 Docker Hub 公共仓库。<br>仓库支持的操作类似git，当用户创建了自己的镜像之后就可以使用 push 命令将它上传到公有或者私有仓库，这样下次在另外一台机器上使用这个镜像时候，只需要从仓库上 pull 下来就可以了。</p><h4 id="全局理解（Tying-It-All-Together）"><a href="#全局理解（Tying-It-All-Together）" class="headerlink" title="全局理解（Tying It All Together）"></a>全局理解（Tying It All Together）</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker create &lt;image-id&gt;</span><br></pre></td></tr></table></figure><img src="images/062e7af0929dd205b2ac6efdd937d6f4.png"><p><code>docker create</code>命令为指定的<code>镜像（image）</code>创建了一个可读可写层，构成了一个新的容器。注意，这个容器并没有运行。<br><img src="images/162f02c6f9dce4ccdaa0c6c676da2196.png"><br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker start &lt;container-id&gt;</span><br></pre></td></tr></table></figure><p></p><img src="images/1c38d4735e9760bdca025ff50a1b5386.png"><p><code>Docker start</code>命令为容器文件系统创建了一个进程隔离空间。注意，每一个容器只能够有一个进程隔离空间。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run &lt;image-id&gt;</span><br></pre></td></tr></table></figure><p></p><img src="images/01aedf55bd21abbe607b3864d76f0ec0.png"><p><code>docker start</code>和<code>docker run</code>命令的区别。<br><img src="images/275cc486d4ce7ecbdecf0ecc1de0a34b.png"><br>从图片可以看出，<code>docker run</code>命令先是利用镜像创建了一个容器，然后运行这个容器。这个命令非常的方便，并且隐藏了两个命令的细节，但从另一方面来看，这容易让用户产生误解。<br></p><div class="note info"><p>注：<code>docker run</code>相当于<code>docker create</code>和<code>docker start</code>两个命令的组合。</p></div><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p></p><img src="images/f05a2a8dfc6641d8237306ff575aa283.png"><p><code>docker ps</code>命令会列出所有运行中的容器。这隐藏了非运行态容器的存在。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker ps –a</span><br></pre></td></tr></table></figure><p></p><img src="images/d7f7b0ada7fc1c641c90745a959f9c05.png"><p><code>docker ps –a</code>命令会列出所有的容器，不管是运行的，还是停止的。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p></p><img src="images/d5b0b3e2e7acdcf35e7577d7670a46f7.png"><p><code>docker images</code>命令会列出了所有<code>顶层（top-level）镜像</code>。实际上，在这里我们没有办法区分一个镜像和一个只读层，所以我们提出了<code>top-level镜像</code>。只有创建容器时使用的镜像或者是直接pull下来的镜像能被称为<code>顶层（top-level）镜像</code>，并且每一个顶层镜像下面都隐藏了多个镜像层。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker images –a</span><br></pre></td></tr></table></figure><p></p><img src="images/ce083575e95a0e46b105c3596c12ca71.png"><p><code>docker images –a</code>命令列出了所有的镜像，也可以说是列出了所有的可读层。如果你想要查看某一个<code>image-id</code>下的所有层，可以使用<code>docker history</code>来查看。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker stop &lt;container-id&gt;</span><br></pre></td></tr></table></figure><p></p><img src="images/a41de8fe542efe25e3620691ad9238df.png"><p><code>docker stop</code>命令会向运行中的容器发送一个<code>SIGTERM</code>的信号，然后停止所有的进程。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker kill &lt;container-id&gt;</span><br></pre></td></tr></table></figure><p></p><img src="images/ac1cbc31d4f191e26e05fb1a11f04d26.png"><p><code>docker kill</code>命令向所有运行在容器中的进程发送了一个不友好的<code>SIGKILL</code>信号。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pause &lt;container-id&gt;</span><br></pre></td></tr></table></figure><p></p><img src="images/b701a3c51e7d1915da3bea0bc43efcd1.png"><p><code>docker stop</code>和<code>docker kill</code>命令会发送UNIX的信号给运行中的进程，<code>docker pause</code>命令则不一样，它利用了<code>cgroups</code>的特性将运行中的进程空间暂停。但是这种方式的不足之处在于发送一个<code>SIGTSTP</code>信号对于进程来说不够简单易懂，以至于不能够让所有进程暂停。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker rm &lt;container-id&gt;</span><br></pre></td></tr></table></figure><p></p><img src="images/8fa2d6e19c29f18548624efd64eb6dfa.png"><p><code>docker rm</code>命令会移除构成容器的可读写层。注意，这个命令只能对非运行态容器执行。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker rmi &lt;image-id&gt;</span><br></pre></td></tr></table></figure><p></p><img src="images/32a7f413a5f8ff936dd0f4a31d25fdcc.png"><p><code>docker rmi</code>命令会移除构成镜像的一个只读层。你只能够使用<code>docker rmi</code>来移除<code>最顶层（top level layer）</code>（也可以说是镜像），你也可以使用<code>-f</code>参数来强制删除中间的只读层。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker commit &lt;container-id&gt;</span><br></pre></td></tr></table></figure><p></p><img src="images/3c02ccf4e7a2a353af065d93b26ae89e.png"><p><code>docker commit</code>命令将容器的可读写层转换为一个只读层，这样就把一个容器转换成了不可变的镜像。<br><img src="images/28059b3a499faba896263c0ff077fe3a.png"><br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker build</span><br></pre></td></tr></table></figure><p></p><img src="images/b22cd304f28c715ae3ae6812476b222d.png"><p><code>docker build</code>命令会反复的执行多个命令。<br><img src="images/100712263ecf4544dd11602adc39ee3e.png"><br><code>build</code>命令根据<code>Dockerfile</code>文件中的<code>FROM</code>指令获取到镜像，然后重复地</p><ol><li><code>run（create和start）</code></li><li>修改</li><li>commit</li></ol><p>在循环中的每一步都会生成一个新的层，因此许多新的层会被创建。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec &lt;running-container-id&gt;</span><br></pre></td></tr></table></figure><p></p><img src="images/db64b3b38aff136d42e9ffeb81675bda.png"><p><code>docker exec</code>命令会在运行中的容器执行一个新进程<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker inspect &lt;container-id&gt; or &lt;image-id&gt;</span><br></pre></td></tr></table></figure><p></p><img src="images/184f9d55770ca036cb5b1e6d96ce4a12.png"><p><code>docker inspect</code>命令会提取出容器或者镜像最顶层的元数据。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker save &lt;image-id&gt;</span><br></pre></td></tr></table></figure><p></p><img src="images/70cdbaf975c88bc83423d88be85476b5.png"><p><code>docker save</code>命令会创建一个镜像的压缩文件，这个文件能够在另外一个主机的<code>Docker</code>上使用。和<code>export</code>命令不同，这个命令为每一个层都保存了它们的元数据。这个命令只能对镜像生效。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker export &lt;container-id&gt;</span><br></pre></td></tr></table></figure><p></p><img src="images/1714c3dd524c807bf9c9b4d0fbe4d056.png"><p><code>docker export</code>命令创建一个tar文件，并且移除了元数据和不必要的层，将多个层整合成了一个层，只保存了当前统一视角看到的内容。<br></p><div class="note info"><p>注：<code>expoxt</code>后的容器再<code>import</code>到<code>Docker</code>中，通过<code>docker images –tree</code>命令只能看到一个镜像；而<code>save</code>后的镜像则不同，它能够看到这个镜像的历史镜像。</p></div><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker history &lt;image-id&gt;</span><br></pre></td></tr></table></figure><p></p><img src="images/b513dd5467f23fdd23523f60242d5dcb.png"><p><code>docker history</code>命令递归地输出指定镜像的历史镜像。<br></p><div class="note info"><p>参考链接：</p><ul><li><a href="https://merrigrove.blogspot.com/2015/10/visualizing-docker-containers-and-images.html" title="Visualizing Docker Containers and Images" target="_blank" rel="noopener">Visualizing Docker Containers and Images</a></li><li><a href="http://dockone.io/article/783" title="10张图带你深入理解Docker容器和镜像" target="_blank" rel="noopener">10张图带你深入理解Docker容器和镜像</a></li></ul></div><p></p><h3 id="Docker-命令"><a href="#Docker-命令" class="headerlink" title="Docker 命令"></a>Docker 命令</h3><a href="https://www.runoob.com/docker/docker-command-manual.html" title="Docker 命令大全" target="_blank" rel="noopener">参考链接</a><h4 id="Docker-run"><a href="#Docker-run" class="headerlink" title="Docker run"></a>Docker run</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</span><br></pre></td></tr></table></figure><p>OPTIONS说明：</p><ul><li>-a stdin: 指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项；</li><li>-d: 后台运行容器，并返回容器ID；</li><li>-i: 以交互模式运行容器，通常与 -t 同时使用；</li><li>-P: 随机端口映射，容器内部端口随机映射到主机的高端口</li><li>-p: 指定端口映射，格式为：主机(宿主)端口:容器端口</li><li>-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；</li><li>–name=”nginx-lb”: 为容器指定一个名称；</li><li>–dns 8.8.8.8: 指定容器使用的DNS服务器，默认和宿主一致；</li><li>–dns-search example.com: 指定容器DNS搜索域名，默认和宿主一致；</li><li>-h “mars”: 指定容器的hostname；</li><li>-e username=”ritchie”: 设置环境变量；</li><li>–env-file=[]: 从指定文件读入环境变量；</li><li>–cpuset=”0-2” or –cpuset=”0,1,2”: 绑定容器到指定CPU运行；</li><li>-m :设置容器使用内存最大值；</li><li>–net=”bridge”: 指定容器的网络连接类型，支持 bridge/host/none/container: 四种类型；</li><li>–link=[]: 添加链接到另一个容器；</li><li>–expose=[]: 开放一个端口或一组端口；</li><li>–volume , -v: 绑定一个卷</li></ul><p>实例：<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用docker镜像nginx:latest以后台模式启动一个容器,并将容器命名为mynginx。</span></span><br><span class="line">docker run --name mynginx -d nginx:latest</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用镜像nginx:latest以后台模式启动一个容器,并将容器的80端口映射到主机随机端口。</span></span><br><span class="line">docker run -P -d nginx:latest</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用镜像 nginx:latest，以后台模式启动一个容器,将容器的 80 端口映射到主机的 80 端口,主机的目录 /data 映射到容器的 /data。</span></span><br><span class="line">docker run -p 80:80 -v /data:/data -d nginx:latest</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 绑定容器的 8080 端口，并将其映射到本地主机 127.0.0.1 的 80 端口上。</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker run -p 127.0.0.1:80:8080/tcp ubuntu bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用镜像nginx:latest以交互模式启动一个容器,在容器内执行/bin/bash命令。</span></span><br><span class="line">runoob@runoob:~$ docker run -it nginx:latest /bin/bash</span><br><span class="line">root@b85456f75:/#</span><br></pre></td></tr></table></figure><p></p><h4 id="Docker-start-stop-restart-命令"><a href="#Docker-start-stop-restart-命令" class="headerlink" title="Docker start/stop/restart 命令"></a>Docker start/stop/restart 命令</h4><p><code>docker start</code> :启动一个或多个已经被停止的容器<br><code>docker stop</code> :停止一个运行中的容器<br><code>docker restart</code> :重启容器<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker start [OPTIONS] CONTAINER [CONTAINER...]</span><br><span class="line">docker stop [OPTIONS] CONTAINER [CONTAINER...]</span><br><span class="line">docker restart [OPTIONS] CONTAINER [CONTAINER...]</span><br></pre></td></tr></table></figure><p></p><p>实例：<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动已被停止的容器myrunoob</span></span><br><span class="line">docker start myrunoob</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止运行中的容器myrunoob</span></span><br><span class="line">docker stop myrunoob</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启容器myrunoob</span></span><br><span class="line">docker restart myrunoob</span><br></pre></td></tr></table></figure><p></p><h4 id="Docker-attach-命令"><a href="#Docker-attach-命令" class="headerlink" title="Docker attach 命令"></a>Docker attach 命令</h4><p><code>docker attach</code>:连接到正在运行中的容器。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker attach [OPTIONS] CONTAINER</span><br></pre></td></tr></table></figure><p></p><p>要attach上去的容器必须正在运行，可以同时连接上同一个container来共享屏幕（与screen命令的attach类似）。<br>官方文档中说attach后可以通过CTRL-C来detach，但实际上经过我的测试，如果container当前在运行bash，CTRL-C自然是当前行的输入，没有退出；如果container当前正在前台运行进程，如输出nginx的access.log日志，CTRL-C不仅会导致退出容器，而且还stop了。这不是我们想要的，detach的意思按理应该是脱离容器终端，但容器依然运行。好在attach是可以带上–sig-proxy=false来确保CTRL-D或CTRL-C不会关闭容器。</p><h4 id="Docker-create-命令"><a href="#Docker-create-命令" class="headerlink" title="Docker create 命令"></a>Docker create 命令</h4><p>创建一个新的容器<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker create [OPTIONS] IMAGE [COMMAND] [ARG...]</span><br></pre></td></tr></table></figure><p></p><h5 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h5><table><thead><tr><th>Name,shorthand</th><th style="text-align:center">Default</th><th>Description</th></tr></thead><tbody><tr><td>–add-host</td><td style="text-align:center"></td><td>Add a custom host-to-IP mapping (host:ip)</td></tr><tr><td>–attach , -a</td><td style="text-align:center"></td><td>Attach to STDIN, STDOUT or STDERR</td></tr><tr><td>–blkio-weight</td><td style="text-align:center"></td><td>Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)</td></tr><tr><td>–blkio-weight-device</td><td style="text-align:center"></td><td>Block IO weight (relative device weight)</td></tr><tr><td>–cap-add</td><td style="text-align:center"></td><td>Add Linux capabilities</td></tr><tr><td>–cap-drop</td><td style="text-align:center"></td><td>Drop Linux capabilities</td></tr><tr><td>–cgroup-parent</td><td style="text-align:center"></td><td>Optional parent cgroup for the container</td></tr><tr><td>–cidfile</td><td style="text-align:center"></td><td>Write the container ID to the file</td></tr><tr><td>–cpu-count</td><td style="text-align:center"></td><td>CPU count (Windows only)</td></tr><tr><td>–cpu-percent</td><td style="text-align:center"></td><td>CPU percent (Windows only)</td></tr><tr><td>–cpu-period</td><td style="text-align:center"></td><td>Limit CPU CFS (Completely Fair Scheduler) period</td></tr><tr><td>–cpu-quota</td><td style="text-align:center"></td><td>Limit CPU CFS (Completely Fair Scheduler) quota</td></tr><tr><td>–cpu-rt-period</td><td style="text-align:center"></td><td><code>API 1.25+</code><br>Limit CPU real-time period in microseconds</td></tr><tr><td>–cpu-rt-runtime</td><td style="text-align:center"></td><td><code>API 1.25+</code><br>Limit CPU real-time runtime in microseconds</td></tr><tr><td>–cpu-shares , -c</td><td style="text-align:center"></td><td>CPU shares (relative weight)</td></tr><tr><td>–cpus</td><td style="text-align:center"></td><td><code>API 1.25+</code><br>Number of CPUs</td></tr><tr><td>–cpuset-cpus</td><td style="text-align:center"></td><td>CPUs in which to allow execution (0-3, 0,1)</td></tr><tr><td>–cpuset-mems</td><td style="text-align:center"></td><td>MEMs in which to allow execution (0-3, 0,1)</td></tr><tr><td>–device</td><td style="text-align:center"></td><td>Add a host device to the container</td></tr><tr><td>–device-cgroup-rule</td><td style="text-align:center"></td><td>Add a rule to the cgroup allowed devices list</td></tr><tr><td>–device-read-bps</td><td style="text-align:center"></td><td>Limit read rate (bytes per second) from a device</td></tr><tr><td>–device-read-iops</td><td style="text-align:center"></td><td>Limit read rate (IO per second) from a device</td></tr><tr><td>–device-write-bps</td><td style="text-align:center"></td><td>Limit write rate (bytes per second) to a device</td></tr><tr><td>–device-write-iops</td><td style="text-align:center"></td><td>Limit write rate (IO per second) to a device</td></tr><tr><td>–disable-content-trust</td><td style="text-align:center">true</td><td>Skip image verification</td></tr><tr><td>–dns</td><td style="text-align:center"></td><td>Set custom DNS servers</td></tr><tr><td>–dns-opt</td><td style="text-align:center"></td><td>Set DNS options</td></tr><tr><td>–dns-option</td><td style="text-align:center"></td><td>Set DNS options</td></tr><tr><td>–dns-search</td><td style="text-align:center"></td><td>Set custom DNS search domains</td></tr><tr><td>–domainname</td><td style="text-align:center"></td><td>Container NIS domain name</td></tr><tr><td>–entrypoint</td><td style="text-align:center"></td><td>Overwrite the default ENTRYPOINT of the image</td></tr><tr><td>–env , -e</td><td style="text-align:center"></td><td>Set environment variables</td></tr><tr><td>–env-file</td><td style="text-align:center"></td><td>Read in a file of environment variables</td></tr><tr><td>–expose</td><td style="text-align:center"></td><td>Expose a port or a range of ports</td></tr><tr><td>–gpus</td><td style="text-align:center"></td><td><code>API 1.40+</code><br>GPU devices to add to the container (‘all’ to pass all GPUs)</td></tr><tr><td>–group-add</td><td style="text-align:center"></td><td>Add additional groups to join</td></tr><tr><td>–health-cmd</td><td style="text-align:center"></td><td>Command to run to check health</td></tr><tr><td>–health-interval</td><td style="text-align:center"></td><td>Time between running the check (ms丨s丨m丨h) (default 0s)</td></tr><tr><td>–health-retries</td><td style="text-align:center"></td><td>Consecutive failures needed to report unhealthy</td></tr><tr><td>–health-start-period</td><td style="text-align:center"></td><td><code>API 1.29+</code><br>Start period for the container to initialize before starting health-retries countdown (ms丨s&amp;丨m丨h) (default 0s)</td></tr><tr><td>–health-timeout</td><td style="text-align:center"></td><td>Maximum time to allow one check to run (ms丨s丨m丨h) (default 0s)</td></tr><tr><td>–help</td><td style="text-align:center"></td><td>Print usage</td></tr><tr><td>–hostname , -h</td><td style="text-align:center"></td><td>Container host name</td></tr><tr><td>–init</td><td style="text-align:center"></td><td><code>API 1.25+</code><br>Run an init inside the container that forwards signals and reaps processes</td></tr><tr><td>–interactive , -i</td><td style="text-align:center"></td><td>Keep STDIN open even if not attached</td></tr><tr><td>–io-maxbandwidth</td><td style="text-align:center"></td><td>Maximum IO bandwidth limit for the system drive (Windows only)</td></tr><tr><td>–io-maxiops</td><td style="text-align:center"></td><td>Maximum IOps limit for the system drive (Windows only)</td></tr><tr><td>–ip</td><td style="text-align:center"></td><td>IPv4 address (e.g., 172.30.100.104)</td></tr><tr><td>–ip6</td><td style="text-align:center"></td><td>IPv6 address (e.g., 2001:db8::33)</td></tr><tr><td>–ipc</td><td style="text-align:center"></td><td>IPC mode to use</td></tr><tr><td>–isolation</td><td style="text-align:center"></td><td>Container isolation technology</td></tr><tr><td>–kernel-memory</td><td style="text-align:center"></td><td>Kernel memory limit</td></tr><tr><td>–label , -l</td><td style="text-align:center"></td><td>Set meta data on a container</td></tr><tr><td>–label-file</td><td style="text-align:center"></td><td>Read in a line delimited file of labels</td></tr><tr><td>–link</td><td style="text-align:center"></td><td>Add link to another container</td></tr><tr><td>–link-local-ip</td><td style="text-align:center"></td><td>Container IPv4/IPv6 link-local addresses</td></tr><tr><td>–log-driver</td><td style="text-align:center"></td><td>Logging driver for the container</td></tr><tr><td>–log-opt</td><td style="text-align:center"></td><td>Log driver options</td></tr><tr><td>–mac-address</td><td style="text-align:center"></td><td>Container MAC address (e.g., 92:d0:c6:0a:29:33)</td></tr><tr><td>–memory , -m</td><td style="text-align:center"></td><td>Memory limit</td></tr><tr><td>–memory-reservation</td><td style="text-align:center"></td><td>Memory soft limit</td></tr><tr><td>–memory-swap</td><td style="text-align:center"></td><td>Swap limit equal to memory plus swap: ‘-1’ to enable unlimited swap</td></tr><tr><td>–memory-swappiness</td><td style="text-align:center">-1</td><td>Tune container memory swappiness (0 to 100)</td></tr><tr><td>–mount</td><td style="text-align:center"></td><td>Attach a filesystem mount to the container</td></tr><tr><td>–name</td><td style="text-align:center"></td><td>Assign a name to the container</td></tr><tr><td>–net</td><td style="text-align:center"></td><td>Connect a container to a network</td></tr><tr><td>–net-alias</td><td style="text-align:center"></td><td>Add network-scoped alias for the container</td></tr><tr><td>–network</td><td style="text-align:center"></td><td>Connect a container to a network</td></tr><tr><td>–network-alias</td><td style="text-align:center"></td><td>Add network-scoped alias for the container</td></tr><tr><td>–no-healthcheck</td><td style="text-align:center"></td><td>Disable any container-specified HEALTHCHECK</td></tr><tr><td>–oom-kill-disable</td><td style="text-align:center"></td><td>Disable OOM Killer</td></tr><tr><td>–oom-score-adj</td><td style="text-align:center"></td><td>Tune host’s OOM preferences (-1000 to 1000)</td></tr><tr><td>–pid</td><td style="text-align:center"></td><td>PID namespace to use</td></tr><tr><td>–pids-limit</td><td style="text-align:center"></td><td>Tune container pids limit (set -1 for unlimited)</td></tr><tr><td>–platform</td><td style="text-align:center"></td><td><code>experimental (daemon)API 1.32+</code><br>Set platform if server is multi-platform capable</td></tr><tr><td>–privileged</td><td style="text-align:center"></td><td>Give extended privileges to this container</td></tr><tr><td>–publish , -p</td><td style="text-align:center"></td><td>Publish a container’s port(s) to the host</td></tr><tr><td>–publish-all , -P</td><td style="text-align:center"></td><td>Publish all exposed ports to random ports</td></tr><tr><td>–read-only</td><td style="text-align:center"></td><td>Mount the container’s root filesystem as read only</td></tr><tr><td>–restart</td><td style="text-align:center">no</td><td>Restart policy to apply when a container exits</td></tr><tr><td>–rm</td><td style="text-align:center"></td><td>Automatically remove the container when it exits</td></tr><tr><td>–runtime</td><td style="text-align:center"></td><td>Runtime to use for this container</td></tr><tr><td>–security-opt</td><td style="text-align:center"></td><td>Security Options</td></tr><tr><td>–shm-size</td><td style="text-align:center"></td><td>Size of /dev/shm</td></tr><tr><td>–stop-signal</td><td style="text-align:center">SIGTERM</td><td>Signal to stop a container</td></tr><tr><td>–stop-timeout</td><td style="text-align:center"></td><td><code>API 1.25+</code><br>Timeout (in seconds) to stop a container</td></tr><tr><td>–storage-opt</td><td style="text-align:center"></td><td>Storage driver options for the container</td></tr><tr><td>–sysctl</td><td style="text-align:center"></td><td>Sysctl options</td></tr><tr><td>–tmpfs</td><td style="text-align:center"></td><td>Mount a tmpfs directory</td></tr><tr><td>–tty , -t</td><td style="text-align:center"></td><td>Allocate a pseudo-TTY</td></tr><tr><td>–ulimit</td><td style="text-align:center"></td><td>Ulimit options</td></tr><tr><td>–user , -u</td><td style="text-align:center"></td><td>Username or UID (format: &lt;name丨uid&gt;[:&lt;group丨gid&gt;])</td></tr><tr><td>–userns</td><td style="text-align:center"></td><td>User namespace to use</td></tr><tr><td>–uts</td><td style="text-align:center"></td><td>UTS namespace to use</td></tr><tr><td>–volume , -v</td><td style="text-align:center"></td><td>Bind mount a volume</td></tr><tr><td>–volume-driver</td><td style="text-align:center"></td><td>Optional volume driver for the container</td></tr><tr><td>–volumes-from</td><td style="text-align:center"></td><td>Mount volumes from the specified container(s)</td></tr><tr><td>–workdir , -w</td><td style="text-align:center"></td><td>Working directory inside the container</td></tr></tbody></table>]]></content>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
        <tag>虚拟化</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 配置gitalk</title>
    <url>/posts/44125ab6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>我现在用的博客是静态网页，没有独立的后端服务器来支撑，为了实现评论功能，需要对接第三方的评论插件，经过各种考虑，决定使用<code>gitalk</code>。<br>这是一个基于<code>GitHub</code>的<code>issues</code>来实现的评论工具。<br><a id="more"></a><br>这个功能使用到了以下插件<br></p><div style="text-align:center"><div class="github-card" data-user="gitalk" data-repo="gitalk" data-height="200px" data-width="100%" data-theme="default" data-target="blank" data-client-id data-client-secret></div></div><script src="/github-card-lib/githubcard.js"></script><br><div style="text-align:center"><div class="github-card" data-user="blueimp" data-repo="JavaScript-MD5" data-height="200px" data-width="100%" data-theme="default" data-target="blank" data-client-id data-client-secret></div></div><script src="/github-card-lib/githubcard.js"></script><p></p><h4 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h4><p>首先得有一个<code>GitHub</code>账号，然后打开链接↙️<br><a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">New OAuth application</a><br>注册一个<code>OAuth App</code><br>具体填写参考如下：<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Application name //应用名称</span><br><span class="line">Homepage URL //填自己的博客地址就可以了</span><br><span class="line">Application description //应用描述</span><br><span class="line">Authorization callback URL //填写自己要用 gitalk 的博客地址</span><br></pre></td></tr></table></figure><p></p><p>在这里填写完成之后你就会得到<code>Client ID</code>和<code>Client Secret</code>。</p><h4 id="文件修改"><a href="#文件修改" class="headerlink" title="文件修改"></a>文件修改</h4><p>在主题目录下建立<code>/layout/_third-party/gitalk.swig</code>文件并添加以下代码<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125;</span><br><span class="line"></span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;&gt;</span><br><span class="line">  &lt;script src=&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">   &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        var gitalk = new Gitalk(&#123;</span><br><span class="line">          clientID: &apos;&#123;&#123; theme.gitalk.ClientID &#125;&#125;&apos;,</span><br><span class="line">          clientSecret: &apos;&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;&apos;,</span><br><span class="line">          repo: &apos;&#123;&#123; theme.gitalk.repo &#125;&#125;&apos;,</span><br><span class="line">          owner: &apos;&#123;&#123; theme.gitalk.owner &#125;&#125;&apos;,</span><br><span class="line">          admin: &apos;&#123;&#123; theme.gitalk.adminUser &#125;&#125;&apos;,</span><br><span class="line">          id: md5(&#123;&#123; theme.gitalk.ID &#125;&#125;),</span><br><span class="line">          labels: &#123;&#123; theme.gitalk.labels &#125;&#125;,</span><br><span class="line">          perPage: &#123;&#123; theme.gitalk.perPage &#125;&#125;,</span><br><span class="line">          pagerDirection: &apos;&#123;&#123; theme.gitalk.pagerDirection &#125;&#125;&apos;,</span><br><span class="line">          createIssueManually: &#123;&#123; theme.gitalk.createIssueManually &#125;&#125;,</span><br><span class="line">          distractionFreeMode: &#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        gitalk.render(&apos;gitalk-container&apos;)</span><br><span class="line">       &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p></p><p>在主题的<code>/layout/_scripts/commons.swig</code>中添加以下代码<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include &apos;../_third-party/comments/gitalk.swig&apos; %&#125;</span><br></pre></td></tr></table></figure><p></p><p>接着，在主题的<code>/layout/_partials/comments.swig</code>中找到<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% elseif theme.valine.appid and theme.valine.appkey %&#125;</span><br><span class="line">  &lt;div class=&quot;comments&quot; id=&quot;comments&quot;&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p></p><p>并添加以下代码<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.gitalk.enable %&#125;</span><br><span class="line">      &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p></p><h4 id="进行配置"><a href="#进行配置" class="headerlink" title="进行配置"></a>进行配置</h4><p>在主题的配置文件中，添加一下内容<br></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 是否启动</span></span><br><span class="line">  <span class="attr">ClientID:</span> <span class="string">xxxxxx</span> <span class="comment"># 之前的Client ID</span></span><br><span class="line">  <span class="attr">ClientSecret:</span> <span class="string">xxxxxxxxxxxx</span> <span class="comment"># 之前的Client Secret</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">gitalk</span> <span class="comment"># 留言板内容需要存放的仓库名称</span></span><br><span class="line">  <span class="attr">owner:</span> <span class="string">l552121229</span> <span class="comment"># 你 github 的帐号 eg: www.github.com/zhongxia245 ,帐号就是245</span></span><br><span class="line">  <span class="attr">adminUser:</span> <span class="string">['l552121229']</span> <span class="comment"># 管理员用户</span></span><br><span class="line">  <span class="attr">ID:</span> <span class="string">location.pathname</span></span><br><span class="line">  <span class="attr">labels:</span> <span class="string">'["gitalk"]'</span> <span class="comment"># issue 的标签</span></span><br><span class="line">  <span class="attr">perPage:</span> <span class="number">15</span> <span class="comment"># 每页展示条数</span></span><br><span class="line">  <span class="attr">pagerDirection:</span> <span class="string">last</span> <span class="comment"># 排序方式是从旧到新（first）还是从新到旧（last）</span></span><br><span class="line">  <span class="attr">createIssueManually:</span> <span class="literal">true</span> <span class="comment">#如果当前页面没有相应的 isssue ，且登录的用户属于 admin，则会自动创建 issue。如果设置为 true，则显示一个初始化页面，创建 issue 需要点击 init 按钮。</span></span><br><span class="line">  <span class="attr">distractionFreeMode:</span> <span class="literal">true</span> <span class="comment">#是否启用快捷键(cmd|ctrl + enter) 提交评论.</span></span><br></pre></td></tr></table></figure><p></p><ul><li>因为我们上面配置的<code>gitalk</code>是用<code>location.pathname</code>来作为项目标签区分的，如果这个文章名超过50个字就会报错，为了保险起见，我们通过引入<code>md5.min.js</code>来防止<code>lables</code>过长。</li></ul>]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>gitalk</tag>
        <tag>评论</tag>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 插件</title>
    <url>/posts/54690ca6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>搜集整理常用的<code>hexo</code>插件<br><a id="more"></a></p><h4 id="hexo-helper-live2d"><a href="#hexo-helper-live2d" class="headerlink" title="hexo-helper-live2d"></a>hexo-helper-live2d</h4><p>在hexo博客里增加纸片人<br></p><div style="text-align:center"><div class="github-card" data-user="EYHN" data-repo="hexo-helper-live2d" data-height="200px" data-width="100%" data-theme="default" data-target="blank" data-client-id data-client-secret></div></div><script src="/github-card-lib/githubcard.js"></script><p></p><h4 id="hexo-tag-aplayer"><a href="#hexo-tag-aplayer" class="headerlink" title="hexo-tag-aplayer"></a>hexo-tag-aplayer</h4><p><code>APlayer</code>播放器的<code>Hexo</code>标签插件<br></p><div style="text-align:center"><div class="github-card" data-user="MoePlayer" data-repo="hexo-tag-aplayer" data-height="200px" data-width="100%" data-theme="default" data-target="blank" data-client-id data-client-secret></div></div><script src="/github-card-lib/githubcard.js"></script><br>效果：<br><div id="aplayer-OpqtiUHo" class="aplayer aplayer-tag-marker" style="margin-bottom:20px"></div><script>var options={narrow:!1,autoplay:!1,showlrc:3,mode:"random",mutex:!0,theme:"#e6d0b2",preload:"metadata",listmaxheight:"100%",music:[{title:"トリカゴ",author:"XX:me",url:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/darling.mp3",pic:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/darling.jpg",lrc:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/darling.lrc"},{title:"前前前世",author:"RADWIMPS",url:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/yourname.mp3",pic:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/yourname.jpg",lrc:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/yourname.lrc"},{title:"光るなら",author:"Goose house",url:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.mp3",pic:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.jpg",lrc:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.lrc"}]};options.element=document.getElementById("aplayer-OpqtiUHo");var ap=new APlayer(options);window.aplayers||(window.aplayers=[]),window.aplayers.push(ap)</script><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#安装</span><br><span class="line">yarn add hexo-tag-aplayer</span><br><span class="line">#使用</span><br><span class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure><p></p><p>标签参数</p><ul><li><code>title</code> : 曲目标题</li><li><code>author</code>: 曲目作者</li><li><code>url</code>: 音乐文件 URL 地址</li><li><code>picture_url</code>: (可选) 音乐对应的图片地址</li><li><code>narrow</code>: （可选）播放器袖珍风格</li><li><code>autoplay</code>: (可选) 自动播放，移动端浏览器暂时不支持此功能</li><li><code>width</code>:xxx: (可选) 播放器宽度 (默认: 100%)</li><li><code>lrc</code>:xxx: （可选）歌词文件 URL 地址</li></ul><h4 id="hexo-github-card"><a href="#hexo-github-card" class="headerlink" title="hexo-github-card"></a>hexo-github-card</h4><div style="text-align:center"><div class="github-card" data-user="Gisonrg" data-repo="hexo-github-card" data-height="200px" data-width="100%" data-theme="default" data-target="blank" data-client-id data-client-secret></div></div><script src="/github-card-lib/githubcard.js"></script><p>使用这个插件可以像上面这样👆显示逼格较高的GitHub链接<br>使用时只需要插入下面👇这个🏷️就可以了<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;% githubCard user:your_user [repo:your_repo] [width:400] [height:200] [theme:default] [client_id:your_client_id] [client_secret:your_client_secret] [align:text-align_position] %&#125;</span><br><span class="line">//这是上面那个卡片🏷️</span><br><span class="line">&#123;% githubCard user:Gisonrg repo:hexo-github-card %&#125;</span><br></pre></td></tr></table></figure><p></p><p>这个插件的默认宽度感觉有点不够美观，每次使用都需要自定义宽度也有点费事，而且默认打开方式是在当前页面页打开很不人性化，受不了的话可以选择修改文件<br></p><figure class="highlight javascript"><figcaption><span>node_modules/hexo-github-card/index.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> user = argsObj.user,</span><br><span class="line">  repo = argsObj.repo,</span><br><span class="line">  width = argsObj.width || <span class="string">'100%'</span>,<span class="comment">//宽度自适应</span></span><br><span class="line">  height = argsObj.height || <span class="string">'200'</span>,</span><br><span class="line">  theme = argsObj.theme || <span class="string">'default'</span>,</span><br><span class="line">  client_id = argsObj.client_id || <span class="string">''</span>,</span><br><span class="line">  client_secret = argsObj.client_secret || <span class="string">''</span>,</span><br><span class="line">  align = argsObj.align || <span class="string">'center'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> payload = &#123;</span><br><span class="line">  user,</span><br><span class="line">  repo,</span><br><span class="line">  height,</span><br><span class="line">  width,</span><br><span class="line">  theme,</span><br><span class="line">  client_id,</span><br><span class="line">  client_secret,</span><br><span class="line">  style: <span class="string">`text-align: <span class="subst">$&#123;align&#125;</span>`</span>,</span><br><span class="line">  target: <span class="string">'blank'</span>,<span class="comment">//加上这个可以在其他标签页打开链接</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p></p><p>由于直接在原文件上修改，后面再进行<code>yarn</code>的一些相关操作时<code>yarn</code>总是会自动把代码还原回去，<code>yarn</code>还不支持<code>ignore</code>名单功能，我就在原来的插件基础上进行了小的修改，使它的默认值配置更加人性化一点，有需要的小伙伴可以直接看看这个👇<br></p><div style="text-align:center"><div class="github-card" data-user="l552121229" data-repo="hexo-github-card-customize" data-height="200px" data-width="100%" data-theme="default" data-target="blank" data-client-id data-client-secret></div></div><script src="/github-card-lib/githubcard.js"></script><br>这个修改过的插件可以配置默认设置<br><figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">github_card:</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">100</span><span class="string">%</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">200px</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">align:</span> <span class="string">center</span></span><br><span class="line">  <span class="attr">target:</span> <span class="string">blank</span></span><br></pre></td></tr></table></figure><p></p><h4 id="基于next的插件"><a href="#基于next的插件" class="headerlink" title="基于next的插件"></a>基于<code>next</code>的插件</h4><div class="note warning"><p>我现在使用的<code>next</code>是<code>7.4.0</code>版本的，下面的几个插件都是基于这个版本确认可用的，其他版本需要具体看相应的<code>GitHub</code>链接的说明</p></div><h5 id="theme-next-canvas-nest"><a href="#theme-next-canvas-nest" class="headerlink" title="theme-next-canvas-nest"></a>theme-next-canvas-nest</h5><div style="text-align:center"><div class="github-card" data-user="theme-next" data-repo="theme-next-canvas-nest" data-height="200px" data-width="100%" data-theme="default" data-target="blank" data-client-id data-client-secret></div></div><script src="/github-card-lib/githubcard.js"></script><p>进入主题目录并clone代码<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd themes/next</span><br><span class="line">git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest</span><br></pre></td></tr></table></figure><p></p><p>配置<br></p><figure class="highlight yaml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">onmobile:</span> <span class="literal">true</span> <span class="comment"># display on mobile or not</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">'0,0,255'</span> <span class="comment"># RGB values, use ',' to separate</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.5</span> <span class="comment"># the opacity of line: 0~1</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span> <span class="comment"># z-index property of the background</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">99</span> <span class="comment"># the number of lines</span></span><br></pre></td></tr></table></figure><p></p><p>更新<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd themes/next/source/lib/canvas-nest</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p></p><h5 id="theme-next-pjax"><a href="#theme-next-pjax" class="headerlink" title="theme-next-pjax"></a>theme-next-pjax</h5><p>在<code>hexo</code>上使用<code>pjax</code>，优化访问速度，这个插件基于主题<code>next</code>实现<br></p><div style="text-align:center"><div class="github-card" data-user="theme-next" data-repo="theme-next-pjax" data-height="200px" data-width="100%" data-theme="default" data-target="blank" data-client-id data-client-secret></div></div><script src="/github-card-lib/githubcard.js"></script><br>使用<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd themes/next</span><br><span class="line">git clone https://github.com/theme-next/theme-next-pjax source/lib/pjax</span><br></pre></td></tr></table></figure><p></p><p>修改文件<br></p><figure class="highlight yaml"><figcaption><span>themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">pjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="attr">pjax:</span> <span class="string">//cdn.jsdelivr.net/gh/theme-next/theme-next-pjax@0/pjax.min.js</span></span><br></pre></td></tr></table></figure><p></p><h4 id="比较有意思的git库"><a href="#比较有意思的git库" class="headerlink" title="比较有意思的git库"></a>比较有意思的git库</h4><h5 id="91porn-php"><a href="#91porn-php" class="headerlink" title="91porn_php"></a>91porn_php</h5><div style="text-align:center"><div class="github-card" data-user="zzjzz9266a" data-repo="91porn_php" data-height="200px" data-width="100%" data-theme="default" data-target="blank" data-client-id data-client-secret></div></div><script src="/github-card-lib/githubcard.js"></script>]]></content>
  </entry>
  <entry>
    <title>git本地仓库和裸仓库</title>
    <url>/posts/ac107f22/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="git-初始化"><a href="#git-初始化" class="headerlink" title="git 初始化"></a>git 初始化</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git init #git目录初始化</span><br><span class="line">git init &lt;repo&gt; #本地初始化，并且建立一个名为repo的空仓库</span><br><span class="line">git init --bare #git裸仓库初始化</span><br><span class="line">git init --bare &lt;repo&gt; #指定某个目录成为中心仓库（裸仓库）</span><br></pre></td></tr></table></figure><p><code>git init</code>这个命令执行后会在本地生成一个 .git 的文件夹，用来追踪仓库的所有变更。<br><code>--bare</code>: 使用 –bare 参数初始化的仓库，我们一般称之为裸仓库， 因为这样创建的仓库并不包含 工作区 ， 也就是说，我们并不能在这个目录下执行我们一般使用的 Git 命令。<br><a id="more"></a></p><h5 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h5><ul><li><p>直接 git init 创建的仓库:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[core]</span><br><span class="line">	repositoryformatversion = 0</span><br><span class="line">	filemode = true</span><br><span class="line">	bare = false</span><br><span class="line">	logallrefupdates = true</span><br><span class="line">	ignorecase = true</span><br><span class="line">	precomposeunicode = true</span><br></pre></td></tr></table></figure></li><li><p>加了<code>--bare</code>创建的裸仓库:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[core]</span><br><span class="line">	repositoryformatversion = 0</span><br><span class="line">	filemode = true</span><br><span class="line">	bare = true</span><br><span class="line">	ignorecase = true</span><br><span class="line">	precomposeunicode = true</span><br></pre></td></tr></table></figure></li></ul><p>可以看到最直观的差异在于<code>bare</code>配置项是否为<code>true</code>， 此外不加<code>--bare</code>创建的本地仓库配置中有一项<code>logallrefupdates = true</code>, 作用根据名字就可以看出来， 记录所有的<code>ref</code>(引用) 更新， 关于<code>ref</code>的部分之后有时间可以再写，这个配置可以理解为是 Git 的一道防线。</p><h4 id="功能差异"><a href="#功能差异" class="headerlink" title="功能差异"></a>功能差异</h4><p>我们可以使用最简单的例子演示一下。<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 直接创建本地仓库</span></span><br><span class="line">git ➤ git init repo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建裸仓库</span></span><br><span class="line">git ➤  git init --bare repo.git</span><br><span class="line"><span class="meta">#</span><span class="bash"> 分别 <span class="built_in">clone</span> 两个仓库</span></span><br><span class="line">git ➤ git clone repo test1</span><br><span class="line">正克隆到 'test1'...</span><br><span class="line">warning: 您似乎克隆了一个空版本库。</span><br><span class="line">完成。</span><br><span class="line">git ➤ git clone repo.git test2</span><br><span class="line">正克隆到 'test2'...</span><br><span class="line">warning: 您似乎克隆了一个空版本库。</span><br><span class="line">完成。</span><br><span class="line">git ➤</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入 test1 仓库</span></span><br><span class="line">git ➤ cd test1</span><br><span class="line">test1 ➤ touch test                                                                                                                                                                                   git:master</span><br><span class="line">test1 ➤ git add .                                                                                                                                                                                   git:master*</span><br><span class="line">test1 ➤ git commit -m '测试提交'                                                                                                                                                                    git:master*</span><br><span class="line">[master（根提交） 456cf23] 测试提交</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 test</span><br><span class="line">test1 ➤ git push origin master                                                                                                                                                                       git:master</span><br><span class="line">Counting objects: 3, done.</span><br><span class="line">Writing objects: 100% (3/3), 217 bytes | 0 bytes/s, done.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line">remote: error: refusing to update checked out branch: refs/heads/master</span><br><span class="line">remote: error: By default, updating the current branch in a non-bare repository</span><br><span class="line">remote: error: is denied, because it will make the index and work tree inconsistent</span><br><span class="line">remote: error: with what you pushed, and will require 'git reset --hard' to match</span><br><span class="line">remote: error: the work tree to HEAD.</span><br><span class="line">remote: error:</span><br><span class="line">remote: error: You can set 'receive.denyCurrentBranch' configuration variable to</span><br><span class="line">remote: error: 'ignore' or 'warn' in the remote repository to allow pushing into</span><br><span class="line">remote: error: its current branch; however, this is not recommended unless you</span><br><span class="line">remote: error: arranged to update its work tree to match what you pushed in some</span><br><span class="line">remote: error: other way.</span><br><span class="line">remote: error:</span><br><span class="line">remote: error: To squelch this message and still keep the default behaviour, set</span><br><span class="line">remote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.</span><br><span class="line">To /home/git/repo</span><br><span class="line"> ! [remote rejected] master -&gt; master (branch is currently checked out)</span><br><span class="line">error: 无法推送一些引用到 '/home/git/repo'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入 test2 仓库重复执行</span></span><br><span class="line">test1 ➤ cd ../test2                                                                                                                                                                                  git:master</span><br><span class="line">test2 ➤ touch test                                                                                                                                                                                   git:master</span><br><span class="line">test2 ➤ git add .                                                                                                                                                                                   git:master*</span><br><span class="line">test2 ➤ git commit -m '再次测试提交'                                                                                                                                                                git:master*</span><br><span class="line">[master（根提交） c56efe8] 再次测试提交</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 test</span><br><span class="line">test2 ➤ git push origin master                                                                                                                                                                       git:master</span><br><span class="line">Counting objects: 3, done.</span><br><span class="line">Writing objects: 100% (3/3), 223 bytes | 0 bytes/s, done.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line">To /home/git/repo.git</span><br><span class="line"> * [new branch]      master -&gt; master</span><br><span class="line">test2 ➤</span><br></pre></td></tr></table></figure><p></p><p>从裸仓库中<code>clone</code>下来的本地仓库可以正常的<code>push</code>操作，这也正是裸仓库的存在意义</p><p>原文链接：<br><a href="https://moelove.info/2016/12/04/Git-%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%92%8C%E8%A3%B8%E4%BB%93%E5%BA%93/" title="Git 本地仓库和裸仓库" target="_blank" rel="noopener">Git 本地仓库和裸仓库</a></p>]]></content>
  </entry>
  <entry>
    <title>git 操作</title>
    <url>/posts/150d1834/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>收集一些不怎么常用的<code>git</code>操作，以做记录<br><a id="more"></a></p><h3 id="git-合并操作"><a href="#git-合并操作" class="headerlink" title="git 合并操作"></a>git 合并操作</h3><p>通过<code>git log</code>查看提交记录及其commitId<br>再通过<code>git reset --soft commitId</code>来回退版本(–soft 和 –hard的区别就是 –soft是软回退，会将你这次commitId之后的提交全部回退到暂存区中，–hard会将你<br>这次commitId之后的提交全部清除掉)<br>此时你这次commitId之后的提交都会回到暂存区中<br>git commit -m 随便写注释</p><h3 id="git-忽略文件操作"><a href="#git-忽略文件操作" class="headerlink" title="git 忽略文件操作"></a>git 忽略文件操作</h3><p><code>git</code>忽略文件文件可以用<code>.gitignore</code>文件来实现，但如果一个文件已经被跟踪，再加入<code>.gitignore</code>文件就无效了。<br>这时可以<code>git rm --cached</code>，再更新<code>.gitignore</code>，忽略掉目标文件，最后再提交。<br>使用命令<code>git update-index --assume-unchanged 文件</code>来标记文件，使<code>git</code>停止关注这个需要被忽略的文件，这样也可以达成效果，但是这是一种不合理不规范的做法。<br>原因如下：<br>首先，<code>git update-index</code>的定义是：<br></p><div class="note primary"><p>Register file contents in the working tree to the index（把工作区下的文件内容注册到索引区）</p></div><br>也就是说<code>update-index</code>针对的是<code>git</code>数据库里被记录的文件，而不是那些需要忽略的文件。<br>接着看关于<code>--assume-unchanged</code>的描述：<br><div class="note primary"><p>When the “assume unchanged” bit is on, Git stops checking the working tree files for possible modifications, so you need to manually unset the bit to tell Git when you change the working tree file. This is sometimes helpful when working with a big project on a filesystem that has very slow lstat(2) system call (e.g. cifs).<br>应用了该标识之后，Git 停止查看工作区文件可能发生的改变，所以你必须 手动 重置该标识以便 Git 知道你想要恢复对文件改变的追踪。当你工作在一个大型项目中，这在文件系统的<code>lstat</code>系统调用非常迟钝的时候会很有用。</p></div><br>也就是说这个命令本身只是一种让<code>git</code>暂时忽略文件变动的操作。<br>主要是在修改一些大型文件时，防止<code>git</code>来回计算文件变化并更新工作区造成卡顿。<br><code>git update-index --assume-unchanged</code>的官方推荐用法是这样的：<p></p><ol><li>你正在修改一个巨大的文件，你先对其<code>git update-index --assume-unchanged</code>，这样<code>Git</code>暂时不会理睬你对文件做的修改；</li><li>当你的工作告一段落决定可以提交的时候，重置改标识：<code>git update-index --no-assume-unchanged</code>，于是<code>Git</code>只需要做一次更新，这是完全可以接受的了；</li><li>提交推送。</li></ol><p>另外，根据文档的进一步描述：<br></p><div class="note primary"><p>This option can be also used as a coarse file-level mechanism to ignore uncommitted changes in tracked files (akin to what .gitignore does for untracked files).</p></div><br>也就是说官方并不推荐这种做法，样的事情更应该用<code>.gitignore</code>文件来实现（针对未追踪的文件）。<br>随之而来的新问题是，为什么已经被跟踪的文件<code>.gitignore</code>会失去效果？<br>这是因为我们误解了<code>.gitignore</code>文件的用途，该文件只能作用于<code>Untracked Files</code>，也就是那些从来没有被<code>git</code>记录过的文件（自添加以后，从未 add 及 commit 过的文件）。<br>之所以你的规则不生效，是因为那些文件曾经被<code>git</code>记录过，因此<code>.gitignore</code>对它们完全无效。<br>因此，正确的做法应该先是<code>git rm --cached</code>，再更新<code>.gitignore</code>，忽略掉目标文件，最后再提交。<p></p><h3 id="git-撤回合并"><a href="#git-撤回合并" class="headerlink" title="git 撤回合并"></a>git 撤回合并</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git merge --abort</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>基于Redis的GeoHash在PHP上的应用</title>
    <url>/posts/3dd74411/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>GeoHash有着以下几个特点</p><ol><li>GeoHash用一个字符串表示经度和纬度两个坐标,便于加上索引.</li><li>GeoHash表示的并不是一个点，而是一个矩形区域.</li><li>编码的前缀可以表示更大的区域, 可以很方便的进行区域检索, 聚合等相关操作.</li></ol><p>综上所述, GeoHash比直接用经纬度的高效很多.</p><a id="more"></a><h3 id="GeoHash算法"><a href="#GeoHash算法" class="headerlink" title="GeoHash算法"></a>GeoHash算法</h3><p>编码</p><ul><li>GeoHash首先将精度范围设定为划分成两个区间(-180, 0), (0, 180), 如果经度坐标落到了前一个区间则标记为0, 反之则标记为1.</li><li>然后再将上一步获得到的区间划分成两个区间, 重复上一步.</li><li>重复前前两步直到得到自己所需要的精度</li><li><p>以此类推来得到纬度的HashBin (关于纬度的初始划分区间, 一般的共用算法里都是±90, 而redis里用的却是±85.05112878)<br>如 (23.17015353059966287, 113.46623629331588745) 通过区间划分可以得到:<br>(1101000010101111111001011110, 101000101101111011011100011)</p></li><li><p>接下来是对划分结果的合并, 按照<code>奇数位是纬度, 偶数位为经度</code>的原则来进行合并.<br>上面的例子合并可得:<br>1110011000000100110110011111111011111001011100101011110</p></li><li>之后再按照非标准的base32算法进行字符串的转化, 下面是对照表格</li></ul><table><thead><tr><th>十进制</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th><th>15</th></tr></thead><tbody><tr><td>二进制</td><td>00000</td><td>00001</td><td>00010</td><td>00011</td><td>00100</td><td>00101</td><td>00110</td><td>00111</td><td>01000</td><td>01001</td><td>01010</td><td>01011</td><td>01100</td><td>01101</td><td>01110</td><td>01111</td></tr><tr><td>base32</td><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td><td>b</td><td>c</td><td>d</td><td>e</td><td>f</td><td>g</td></tr><tr><td>十进制</td><td>16</td><td>17</td><td>18</td><td>19</td><td>20</td><td>21</td><td>22</td><td>23</td><td>24</td><td>25</td><td>26</td><td>27</td><td>28</td><td>29</td><td>30</td><td>31</td></tr><tr><td>二进制</td><td>10000</td><td>10001</td><td>10010</td><td>10011</td><td>10100</td><td>10101</td><td>10110</td><td>10111</td><td>11000</td><td>11001</td><td>11010</td><td>11011</td><td>11100</td><td>11101</td><td>11110</td><td>11111</td></tr><tr><td>base32</td><td>h</td><td>j</td><td>k</td><td>m</td><td>n</td><td>p</td><td>q</td><td>r</td><td>s</td><td>t</td><td>u</td><td>v</td><td>w</td><td>x</td><td>y</td><td>z</td></tr></tbody></table><p>最终(23.17015353059966287, 113.46623629331588745)被转化成’ws2emzrtfby’.</p><p>解码则和编码正好相反即可.</p><h3 id="PHP的实现"><a href="#PHP的实现" class="headerlink" title="PHP的实现"></a>PHP的实现</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Geohash</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> $coding    = <span class="string">'0123456789bcdefghjkmnpqrstuvwxyz'</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> $codingMap = [</span><br><span class="line">        <span class="string">'0'</span> =&gt; <span class="string">'00000'</span>, <span class="string">'1'</span> =&gt; <span class="string">'00001'</span>, <span class="string">'2'</span> =&gt; <span class="string">'00010'</span>,</span><br><span class="line">        <span class="string">'3'</span> =&gt; <span class="string">'00011'</span>, <span class="string">'4'</span> =&gt; <span class="string">'00100'</span>, <span class="string">'5'</span> =&gt; <span class="string">'00101'</span>,</span><br><span class="line">        <span class="string">'6'</span> =&gt; <span class="string">'00110'</span>, <span class="string">'7'</span> =&gt; <span class="string">'00111'</span>, <span class="string">'8'</span> =&gt; <span class="string">'01000'</span>,</span><br><span class="line">        <span class="string">'9'</span> =&gt; <span class="string">'01001'</span>, <span class="string">'b'</span> =&gt; <span class="string">'01010'</span>, <span class="string">'c'</span> =&gt; <span class="string">'01011'</span>,</span><br><span class="line">        <span class="string">'d'</span> =&gt; <span class="string">'01100'</span>, <span class="string">'e'</span> =&gt; <span class="string">'01101'</span>, <span class="string">'f'</span> =&gt; <span class="string">'01110'</span>,</span><br><span class="line">        <span class="string">'g'</span> =&gt; <span class="string">'01111'</span>, <span class="string">'h'</span> =&gt; <span class="string">'10000'</span>, <span class="string">'j'</span> =&gt; <span class="string">'10001'</span>,</span><br><span class="line">        <span class="string">'k'</span> =&gt; <span class="string">'10010'</span>, <span class="string">'m'</span> =&gt; <span class="string">'10011'</span>, <span class="string">'n'</span> =&gt; <span class="string">'10100'</span>,</span><br><span class="line">        <span class="string">'p'</span> =&gt; <span class="string">'10101'</span>, <span class="string">'q'</span> =&gt; <span class="string">'10110'</span>, <span class="string">'r'</span> =&gt; <span class="string">'10111'</span>,</span><br><span class="line">        <span class="string">'s'</span> =&gt; <span class="string">'11000'</span>, <span class="string">'t'</span> =&gt; <span class="string">'11001'</span>, <span class="string">'u'</span> =&gt; <span class="string">'11010'</span>,</span><br><span class="line">        <span class="string">'v'</span> =&gt; <span class="string">'11011'</span>, <span class="string">'w'</span> =&gt; <span class="string">'11100'</span>, <span class="string">'x'</span> =&gt; <span class="string">'11101'</span>,</span><br><span class="line">        <span class="string">'y'</span> =&gt; <span class="string">'11110'</span>, <span class="string">'z'</span> =&gt; <span class="string">'11111'</span></span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">decode</span><span class="params">(string $hash, $number = false)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($number) &#123;</span><br><span class="line">            $binary = base_convert($hash, <span class="number">10</span>, <span class="number">2</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $binary = <span class="string">''</span>;</span><br><span class="line">            $hl     = strlen($hash);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;$hl; $i++) &#123;</span><br><span class="line">                $binary .= <span class="keyword">self</span>::$codingMap[substr($hash,$i,<span class="number">1</span>)];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $bl    = strlen($binary);</span><br><span class="line">        $blat  = <span class="string">''</span>;</span><br><span class="line">        $blong = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//取出经纬度</span></span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;$bl; $i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ($i%<span class="number">2</span>)</span><br><span class="line">                $blat  = $blat.substr($binary,$i,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                $blong = $blong.substr($binary,$i,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//翻译经纬度</span></span><br><span class="line">        <span class="keyword">list</span>(</span><br><span class="line">            $lat,</span><br><span class="line">            $latErr</span><br><span class="line">            ) = <span class="keyword">self</span>::binDecode($blat,<span class="number">-85.05112878</span>,<span class="number">85.05112878</span>);</span><br><span class="line">        <span class="keyword">list</span>(</span><br><span class="line">            $long,</span><br><span class="line">            $longErr</span><br><span class="line">            ) = <span class="keyword">self</span>::binDecode($blong,<span class="number">-180</span>,<span class="number">180</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//精度处理</span></span><br><span class="line">        $latPlaces  = max(<span class="number">1</span>, -round(log10($latErr))) - <span class="number">1</span>;</span><br><span class="line">        $longPlaces = max(<span class="number">1</span>, -round(log10($longErr))) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        $lat        = round($lat, $latPlaces);</span><br><span class="line">        $long       = round($long, $longPlaces);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$lat, $long];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">hash2num</span><span class="params">(string $hash, $bin = false)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        $binary = <span class="string">''</span>;</span><br><span class="line">        $hl     = strlen($hash);</span><br><span class="line">        <span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;$hl; $i++)</span><br><span class="line">        &#123;</span><br><span class="line">            $binary .= <span class="keyword">self</span>::$codingMap[substr($hash,$i,<span class="number">1</span>)];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($bin)</span><br><span class="line">            <span class="keyword">return</span> $binary;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> base_convert(substr($binary, <span class="number">0</span>, <span class="number">52</span>), <span class="number">2</span>, <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 坐标转化</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $lat</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $long</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">encode</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        $lat, $long,</span></span></span><br><span class="line"><span class="function"><span class="params">        bool $number = false</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> :<span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="comment">//计算lat精度</span></span><br><span class="line">        $latbits = <span class="number">1</span>;</span><br><span class="line">        $err     = <span class="number">45</span>;</span><br><span class="line">        $plat    = <span class="keyword">self</span>::precision($lat);</span><br><span class="line">        <span class="comment">//计算计算次数</span></span><br><span class="line">        <span class="keyword">while</span>($err &gt; $plat)</span><br><span class="line">        &#123;</span><br><span class="line">            $err     /= <span class="number">2</span>;</span><br><span class="line">            $latbits ++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $longbits = <span class="number">1</span>;</span><br><span class="line">        $err      = <span class="number">90</span>;</span><br><span class="line">        $plong    = <span class="keyword">self</span>::precision($long);</span><br><span class="line">        <span class="keyword">while</span>($err &gt; $plong)</span><br><span class="line">        &#123;</span><br><span class="line">            $err      /= <span class="number">2</span>;</span><br><span class="line">            $longbits ++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $bits     = max($latbits, $longbits);</span><br><span class="line"></span><br><span class="line">        $longbits = $bits;</span><br><span class="line">        $latbits  = $bits;</span><br><span class="line">        $addlong  = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//为了可以进行合并填充数位 2^5 = 32</span></span><br><span class="line">        <span class="keyword">while</span> (($longbits+$latbits)%<span class="number">5</span> != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $longbits += $addlong;</span><br><span class="line">            $latbits  += !$addlong;</span><br><span class="line">            $addlong  = !$addlong;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $blat     = <span class="keyword">self</span>::binEncode($lat,<span class="number">90</span>, <span class="number">90</span>, $latbits);</span><br><span class="line">        $blong    = <span class="keyword">self</span>::binEncode($long, <span class="number">-180</span>, <span class="number">180</span>, $longbits);</span><br><span class="line"></span><br><span class="line">        $binary  = <span class="string">''</span>;</span><br><span class="line">        $uselong = <span class="number">1</span>;</span><br><span class="line">        $strlen  = strlen($blat) + strlen($blong);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//合并位数</span></span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i&lt;$strlen; $i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($uselong)</span><br><span class="line">            &#123;</span><br><span class="line">                $binary .= substr($blong,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">                $blong  = substr($blong,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                $binary .= substr($blat,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">                $blat   = substr($blat,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $uselong = !$uselong;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($number)</span><br><span class="line">            <span class="keyword">return</span> bindec(substr($binary, <span class="number">0</span>, <span class="number">52</span>));</span><br><span class="line"></span><br><span class="line">        $hash = <span class="string">''</span>;</span><br><span class="line">        $leng = strlen($binary);</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;$leng; $i+=<span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $n    = bindec(substr($binary,$i,<span class="number">5</span>));</span><br><span class="line">            $hash = $hash. <span class="keyword">self</span>::$coding[$n];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $hash;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算精度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> float $number</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float|int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">precision</span><span class="params">(float $number)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $precision = <span class="number">0</span>;</span><br><span class="line">        $pt        = strpos($number,<span class="string">'.'</span>);</span><br><span class="line">        <span class="keyword">if</span> ($pt !== <span class="keyword">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $precision = - (strlen($number) - $pt - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pow(<span class="number">10</span>, $precision) / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">binEncode</span><span class="params">($number, $min, $max, $bitcount)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($bitcount == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">        $mid = bcdiv(bcadd($min, $max, <span class="number">52</span>), <span class="number">2</span>, <span class="number">52</span>);</span><br><span class="line">        <span class="keyword">if</span> (bccomp($number, $mid, <span class="number">52</span>) == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'1'</span>. <span class="keyword">self</span>::binEncode(</span><br><span class="line">                $number, $mid,</span><br><span class="line">                $max,$bitcount<span class="number">-1</span></span><br><span class="line">            );</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">'0'</span>. <span class="keyword">self</span>::binEncode(</span><br><span class="line">                $number, $min,</span><br><span class="line">                $mid,$bitcount<span class="number">-1</span></span><br><span class="line">            );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">binDecode</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        $binary, $min,</span></span></span><br><span class="line"><span class="function"><span class="params">        $max</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>&#123;</span><br><span class="line">        $binlen = strlen($binary);</span><br><span class="line">        $err    = bcsub($max, $min, <span class="number">52</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $binlen; $i++) &#123;</span><br><span class="line">            $bit = substr($binary,$i,<span class="number">1</span>);</span><br><span class="line">            $mid = bcdiv(bcadd($min, $max, <span class="number">52</span>), <span class="number">2</span>, <span class="number">52</span>);</span><br><span class="line">            $err = bcdiv($err, <span class="number">2</span>, <span class="number">52</span>);</span><br><span class="line">            <span class="keyword">if</span> ($bit == <span class="number">1</span>) &#123;</span><br><span class="line">                $min = $mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $max = $mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$mid, $err];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Redis上的应用"><a href="#Redis上的应用" class="headerlink" title="Redis上的应用"></a>Redis上的应用</h3><p>Redis的GEO特性在<code>Redis 3.2</code>版本释出,这个功能可以将用户给定的地理位置信息储存起来,并对这些信息进行操作.</p><p><code>GEOADD</code><br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">GEOADD key longitude latitude name [longitude latitude name ...]</span><br></pre></td></tr></table></figure><p></p><p>GEOADD 命令每次可以添加一个或多个经纬度地理位置。 其中<code>key</code>为储存地理位置的集合， 而 <code>longitude</code> 、 <code>latitude</code> 和 <code>name</code> 则分别为地理位置的经度、纬度、名字.<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; GEOADD geo_test 113.46623629331588745 23.17015353059966287 test_1 113.46620947122573853 23.17010790561879929 test_2</span><br></pre></td></tr></table></figure><p></p><p><code>GEOPOS</code><br><code>GEOPOS</code> 命令可以获取Geo的坐标<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GEOPOS key name [name ...]</span><br></pre></td></tr></table></figure><p></p><p>如:<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; geopos geo_test test_2</span><br><span class="line">1) 1) &quot;113.46620947122573853&quot;</span><br><span class="line">   2) &quot;23.17010790561879929&quot;</span><br></pre></td></tr></table></figure><p></p><p><code>GEODIST</code><br>计算两个坐标点之间的距离<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GEODIST key location-x location-y [unit]</span><br></pre></td></tr></table></figure><p></p><p>其中<code>unit</code>表示单位 默认为 <code>m</code></p><ul><li><code>m</code> 表示单位为米。</li><li><code>km</code> 表示单位为千米。</li><li><code>mi</code> 表示单位为英里。</li><li><code>ft</code> 表示单位为英尺。</li></ul><p><code>GEORADIUS</code> 和 <code>GEORADIUSBYMEMBER</code><br>这两个命令都是获取一定范围内的坐标<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GEORADIUS key longitude latitude radius m|km|ft|mi[WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]</span><br><span class="line">GEORADIUSBYMEMBER key location radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]</span><br></pre></td></tr></table></figure><p></p><ul><li><code>WITHCOORD</code> 在返回匹配的位置时会将位置的经纬度一并返回.</li><li><code>WITHDIST</code> 指定中心返回项目的距离, 距离以与指定为命令的radius参数的单位相同的单位返回.</li><li><code>WITHHASH</code> 还以52位无符号整数的形式返回项的原始geohash编码的有序集分数</li><li><code>ASC|DESC</code> <code>ASC</code> 可以让查找结果根据距离从近到远排序， 而 <code>DESC</code> 则可以让查找结果根据从远到近排序</li><li><code>COUNT</code> 指定要返回的结果数量</li><li><code>STORE key</code> 结果存到新的有序集合中, 以<code>GeoHash</code>值做<code>score</code>, 该选项与<code>WITH[DIST|COORD|HASH]</code>选项冲突</li><li><code>STOREDIST key</code> 结果存到新的有序集合中, 以与指定位置的距离作<code>score</code>, 该选项与<code>WITH[DIST|COORD|HASH]</code>选项冲突<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; georadius key 113.46620947122573853 23.17010790561879929 100 km WITHCOORD WITHDIST</span><br><span class="line">1) 1) &quot;test_2&quot;</span><br><span class="line">   2) &quot;0.0000&quot;</span><br><span class="line">   3) 1) &quot;113.46620947122573853&quot;</span><br><span class="line">      2) &quot;23.17010790561879929&quot;</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure></li></ul><p><code>GEOHASH</code><br>将redis里的<code>Geo</code>转化为标准的<code>GeoHash</code>输出<br>注意:这里输出的是标准的<code>GeoHash</code>, 不是redis里面存储的<code>HashInt</code>转化出来的<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GEOHASH key member [member ...]</span><br></pre></td></tr></table></figure><p></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; geohash geo_test test_1 test_2</span><br><span class="line">1) &quot;7pkg3sdkv40&quot;</span><br><span class="line">2) &quot;ws0evczxdm0&quot;</span><br></pre></td></tr></table></figure><h4 id="存储原理"><a href="#存储原理" class="headerlink" title="存储原理"></a>存储原理</h4><p><code>Redis</code>里的<code>Geo</code>坐标在实际存储时是将<code>gps</code>坐标分别按照(-180, 180)和(-85.05112878, 85.05112878)来划分计算成<code>HashInt</code>作为<code>zset集合</code>进行存储的.<br>所以<code>Redis</code>的<code>Geo</code>操作中并没有删除命令, 可以直接使用<code>zrem</code>命令去删除<code>Geo</code>坐标.</p>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>redis</tag>
        <tag>GeoHash</tag>
        <tag>GPS</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx服务脚本</title>
    <url>/posts/5bc4c6e7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>nginx服务脚本</p><a id="more"></a><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> nginx - this script starts and stops the nginx daemin</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chkconfig:   - 85 15 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> description:  Nginx is an HTTP(S) server, HTTP(S) reverse \</span></span><br><span class="line"><span class="meta">#</span><span class="bash">               proxy and IMAP/POP3 proxy server</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> processname: nginx</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> config:      /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> pidfile:     /usr/<span class="built_in">local</span>/nginx/logs/nginx.pid</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Source <span class="keyword">function</span> library.</span></span><br><span class="line">. /etc/rc.d/init.d/functions</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Source networking configuration.</span></span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Check that networking is up.</span></span><br><span class="line">[ "$NETWORKING" = "no" ] &amp;&amp; exit 0</span><br><span class="line"></span><br><span class="line">nginx="/usr/local/sbin/nginx"</span><br><span class="line">prog=$(basename $nginx)</span><br><span class="line"></span><br><span class="line">NGINX_CONF_FILE="/usr/local/nginx/conf/nginx.conf"</span><br><span class="line"></span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line"></span><br><span class="line">start() &#123;</span><br><span class="line">    [ -x $nginx ] || exit 5</span><br><span class="line">    [ -f $NGINX_CONF_FILE ] || exit 6</span><br><span class="line">    echo -n $"Starting $prog: "</span><br><span class="line">    daemon $nginx -c $NGINX_CONF_FILE</span><br><span class="line">    retval=$?</span><br><span class="line">    echo</span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; touch $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop() &#123;</span><br><span class="line">    echo -n $"Stopping $prog: "</span><br><span class="line">    killproc $prog -QUIT</span><br><span class="line">    retval=$?</span><br><span class="line">    echo</span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">restart() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    stop</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">reload() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    echo -n $"Reloading $prog: "</span><br><span class="line">    killproc $nginx -HUP</span><br><span class="line">    RETVAL=$?</span><br><span class="line">    echo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">force_reload() &#123;</span><br><span class="line">    restart</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">configtest() &#123;</span><br><span class="line"><span class="meta">  $</span><span class="bash">nginx -t -c <span class="variable">$NGINX_CONF_FILE</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rh_status() &#123;</span><br><span class="line">    status $prog</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rh_status_q() &#123;</span><br><span class="line">    rh_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case "$1" in</span><br><span class="line">    start)</span><br><span class="line">        rh_status_q &amp;&amp; exit 0</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    restart|configtest)</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        rh_status_q || exit 7</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    force-reload)</span><br><span class="line">        force_reload</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        rh_status</span><br><span class="line">        ;;</span><br><span class="line">    condrestart|try-restart)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">            ;;</span><br><span class="line">    *)</span><br><span class="line">        echo $"Usage: $0 &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;"</span><br><span class="line">        exit 2</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>nginx</tag>
        <tag>server</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP动态gif验证码</title>
    <url>/posts/491b8778/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近感觉自己的项目上的验证码太low了,决定换一个有意思的动态gif验证码<br><a id="more"></a><br>效果<br><img src="https://blog.lilis.xin/wp-admin/Captcha.php" alt="Captcha" title="Captcha"><br>废话不多说,直接上源码</p><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><p>主函数:<br><a href="https://blog.lilis.xin/wp-admin/fonts/comic.ttf" title="comic.ttf" target="_blank" rel="noopener">comic.ttf</a><br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ImageCode</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        $string=<span class="string">''</span>, $frames = <span class="number">60</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        $time = <span class="number">1</span>,$width=<span class="number">75</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        $height=<span class="number">25</span>, $font = <span class="number">6</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        $loops = <span class="number">0</span></span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>&#123;</span><br><span class="line">        $authstr = $string?:((time()%<span class="number">2</span>==<span class="number">0</span>)?mt_rand(<span class="number">1000</span>,<span class="number">9999</span>):mt_rand(<span class="number">10000</span>,<span class="number">99999</span>));</span><br><span class="line">        $authlen = strlen($authstr);</span><br><span class="line">        $board_width=$width;</span><br><span class="line">        $board_height=$height;</span><br><span class="line">        $delay = $time*<span class="number">100</span>/$frames;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成一个n帧的GIF动画</span></span><br><span class="line">        <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$frames;$i++)&#123;</span><br><span class="line">            ob_start();</span><br><span class="line">            $image=imagecreate($board_width,$board_height);</span><br><span class="line">            imagecolorallocate($image,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设定文字颜色数组</span></span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">15</span>,<span class="number">73</span>,<span class="number">210</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">64</span>,<span class="number">0</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">0</span>,<span class="number">64</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">128</span>,<span class="number">128</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">27</span>,<span class="number">52</span>,<span class="number">47</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">51</span>,<span class="number">0</span>,<span class="number">102</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">0</span>,<span class="number">145</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">0</span>,<span class="number">113</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">51</span>,<span class="number">51</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">158</span>,<span class="number">180</span>,<span class="number">35</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">59</span>,<span class="number">59</span>,<span class="number">59</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">1</span>,<span class="number">128</span>,<span class="number">180</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">153</span>,<span class="number">51</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">60</span>,<span class="number">131</span>,<span class="number">1</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">            $gray=imagecolorallocate($image,<span class="number">245</span>,<span class="number">245</span>,<span class="number">245</span>);</span><br><span class="line">            imagefill($image,<span class="number">0</span>,<span class="number">0</span>,$gray);</span><br><span class="line">            $space=$font*<span class="number">0.65</span>;<span class="comment">// 字符间距</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>($k=<span class="number">0</span>;$k&lt;$authlen;$k++)&#123;</span><br><span class="line">                $colorRandom=mt_rand(<span class="number">0</span>,sizeof($colorList)<span class="number">-1</span>);</span><br><span class="line">                $float_top=rand(<span class="number">0</span>,<span class="number">4</span>);</span><br><span class="line">                $float_left=rand(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line">                imagettftext(</span><br><span class="line">                    $image, $font, <span class="number">0</span>,</span><br><span class="line">                    $space*$k+$float_left, $font+$float_top,</span><br><span class="line">                    $colorList[$colorRandom],</span><br><span class="line">                    <span class="string">'./fonts/comic.ttf'</span>,</span><br><span class="line">                    substr($authstr,$k,<span class="number">1</span>)</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>($k=<span class="number">0</span>;$k&lt;<span class="number">20</span>;$k++)&#123;</span><br><span class="line">                $colorRandom=mt_rand(<span class="number">0</span>,sizeof($colorList)<span class="number">-1</span>);</span><br><span class="line">                imagesetpixel($image,rand()%<span class="number">70</span>,rand()%<span class="number">15</span>,$colorList[$colorRandom]);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 添加干扰线</span></span><br><span class="line">            <span class="keyword">for</span>($k=<span class="number">0</span>;$k&lt;<span class="number">3</span>;$k++)&#123;</span><br><span class="line">                $colorRandom=mt_rand(<span class="number">0</span>,sizeof($colorList)<span class="number">-1</span>);</span><br><span class="line">                $toDrawLine=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>($toDrawLine)&#123;</span><br><span class="line">                    imageline($image,mt_rand(<span class="number">0</span>,$board_width),mt_rand(<span class="number">0</span>,$board_height),mt_rand(<span class="number">0</span>,$board_width),mt_rand(<span class="number">0</span>,$board_height),$colorList[$colorRandom]);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    $w=mt_rand(<span class="number">0</span>,$board_width);</span><br><span class="line">                    $h=mt_rand(<span class="number">0</span>,$board_width);</span><br><span class="line">                    imagearc($image,$board_width-floor($w / <span class="number">2</span>),floor($h / <span class="number">2</span>),$w,$h, rand(<span class="number">90</span>,<span class="number">180</span>),rand(<span class="number">180</span>,<span class="number">270</span>),$colorList[$colorRandom]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            imagegif($image);</span><br><span class="line">            imagedestroy($image);</span><br><span class="line">            $imagedata[]=ob_get_contents();</span><br><span class="line">            $delays[] = $delay;</span><br><span class="line">            ob_clean();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AnimatedGif($imagedata, $delays, $loops);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p></p><p>AnimatedGif:<br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *AnimatedGif类</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnimatedGif</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The built gif image</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> resource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> $image = <span class="string">''</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The array of images to stack</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> $buffer = <span class="keyword">Array</span>();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * How many times to loop? 0 = infinite</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> $number_of_loops = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> $DIS = <span class="number">2</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Which colour is transparent</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> $transparent_colour = <span class="number">-1</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Is this the first frame</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> $first_frame = <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Encode an animated gif</span></span><br><span class="line"><span class="comment">     * AnimatedGif constructor.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $source_images</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $image_delays</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $number_of_loops</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        array $source_images,</span></span></span><br><span class="line"><span class="function"><span class="params">        array $image_delays,</span></span></span><br><span class="line"><span class="function"><span class="params">        $number_of_loops</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * I have no idea what these even do, they appear to do nothing to the image so far</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        $transparent_colour_red = <span class="number">0</span>;</span><br><span class="line">        $transparent_colour_green = <span class="number">0</span>;</span><br><span class="line">        $transparent_colour_blue = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;number_of_loops = ( $number_of_loops &gt; <span class="number">-1</span> ) ? $number_of_loops : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;set_transparent_colour($transparent_colour_red, $transparent_colour_green, $transparent_colour_blue);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;buffer_images($source_images);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;addHeader();</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; count(<span class="keyword">$this</span>-&gt;buffer); $i++) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;addFrame($i, $image_delays [$i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Set the transparent colour</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $red</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $green</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $blue</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">set_transparent_colour</span><span class="params">($red, $green, $blue)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;transparent_colour = ( $red &gt; <span class="number">-1</span> &amp;&amp; $green &gt; <span class="number">-1</span> &amp;&amp; $blue &gt; <span class="number">-1</span> ) ?</span><br><span class="line">            ( $red | ( $green &lt;&lt; <span class="number">8</span> ) | ( $blue &lt;&lt; <span class="number">16</span> ) ) : <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Buffer the images and check to make sure they are vaild</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $source_images</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">buffer_images</span><span class="params">($source_images)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; count($source_images); $i++) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;buffer [] = $source_images [$i];</span><br><span class="line">            <span class="keyword">if</span> (substr(<span class="keyword">$this</span>-&gt;buffer [$i], <span class="number">0</span>, <span class="number">6</span>) != <span class="string">"GIF87a"</span> &amp;&amp; substr(<span class="keyword">$this</span>-&gt;buffer [$i], <span class="number">0</span>, <span class="number">6</span>) != <span class="string">"GIF89a"</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'Image at position '</span> . $i. <span class="string">' is not a gif'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> ($j = ( <span class="number">13</span> + <span class="number">3</span> * ( <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [$i] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> ) ) ), $k = <span class="keyword">TRUE</span>; $k; $j++) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (<span class="keyword">$this</span>-&gt;buffer [$i] &#123; $j &#125;) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"!"</span>:</span><br><span class="line">                        <span class="keyword">if</span> (( substr(<span class="keyword">$this</span>-&gt;buffer [$i], ( $j + <span class="number">3</span>), <span class="number">8</span>) ) == <span class="string">"NETSCAPE"</span>) &#123;</span><br><span class="line">                            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'You cannot make an animation from an animated gif.'</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">";"</span>:</span><br><span class="line">                        $k = <span class="keyword">FALSE</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add the gif header to the image</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">addHeader</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $cmap = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;image = <span class="string">'GIF89a'</span>;</span><br><span class="line">        <span class="keyword">if</span> (ord(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x80</span>) &#123;</span><br><span class="line">            $cmap = <span class="number">3</span> * ( <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> ) );</span><br><span class="line">            <span class="keyword">$this</span>-&gt;image .= substr(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>], <span class="number">6</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;image .= substr(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>], <span class="number">13</span>, $cmap);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;image .= <span class="string">"!\377\13NETSCAPE2.0\3\1"</span> . <span class="keyword">$this</span>-&gt;word(<span class="keyword">$this</span>-&gt;number_of_loops) . <span class="string">"\0"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add a frame to the animation</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $frame The frame to be added</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $delay The delay associated with the frame</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">addFrame</span><span class="params">($frame, $delay)</span> </span>&#123;</span><br><span class="line">        $Locals_str = <span class="number">13</span> + <span class="number">3</span> * ( <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> ) );</span><br><span class="line">        $Locals_end = strlen(<span class="keyword">$this</span>-&gt;buffer [$frame]) - $Locals_str - <span class="number">1</span>;</span><br><span class="line">        $Locals_tmp = substr(<span class="keyword">$this</span>-&gt;buffer [$frame], $Locals_str, $Locals_end);</span><br><span class="line">        $Global_len = <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> );</span><br><span class="line">        $Locals_len = <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> );</span><br><span class="line">        $Global_rgb = substr(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>], <span class="number">13</span>, <span class="number">3</span> * ( <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> ) ));</span><br><span class="line">        $Locals_rgb = substr(<span class="keyword">$this</span>-&gt;buffer [$frame], <span class="number">13</span>, <span class="number">3</span> * ( <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> ) ));</span><br><span class="line">        $Locals_ext = <span class="string">"!\xF9\x04"</span> . chr(( <span class="keyword">$this</span>-&gt;DIS &lt;&lt; <span class="number">2</span> ) + <span class="number">0</span>) .</span><br><span class="line">            chr(( $delay &gt;&gt; <span class="number">0</span> ) &amp; <span class="number">0xFF</span>) . chr(( $delay &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span>) . <span class="string">"\x0\x0"</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;transparent_colour &gt; <span class="number">-1</span> &amp;&amp; ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x80</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> ($j = <span class="number">0</span>; $j &lt; ( <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> ) ); $j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (</span><br><span class="line">                    ord($Locals_rgb &#123; <span class="number">3</span> * $j + <span class="number">0</span> &#125;) == ( ( <span class="keyword">$this</span>-&gt;transparent_colour &gt;&gt; <span class="number">16</span> ) &amp; <span class="number">0xFF</span> ) &amp;&amp;</span><br><span class="line">                    ord($Locals_rgb &#123; <span class="number">3</span> * $j + <span class="number">1</span> &#125;) == ( ( <span class="keyword">$this</span>-&gt;transparent_colour &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span> ) &amp;&amp;</span><br><span class="line">                    ord($Locals_rgb &#123; <span class="number">3</span> * $j + <span class="number">2</span> &#125;) == ( ( <span class="keyword">$this</span>-&gt;transparent_colour &gt;&gt; <span class="number">0</span> ) &amp; <span class="number">0xFF</span> )</span><br><span class="line">                ) &#123;</span><br><span class="line">                    $Locals_ext = <span class="string">"!\xF9\x04"</span> . chr(( <span class="keyword">$this</span>-&gt;DIS &lt;&lt; <span class="number">2</span> ) + <span class="number">1</span>) .</span><br><span class="line">                        chr(( $delay &gt;&gt; <span class="number">0</span> ) &amp; <span class="number">0xFF</span>) . chr(( $delay &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span>) . chr($j) . <span class="string">"\x0"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> ($Locals_tmp &#123; <span class="number">0</span> &#125;) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"!"</span>:</span><br><span class="line">                $Locals_img = substr($Locals_tmp, <span class="number">8</span>, <span class="number">10</span>);</span><br><span class="line">                $Locals_tmp = substr($Locals_tmp, <span class="number">18</span>, strlen($Locals_tmp) - <span class="number">18</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">","</span>:</span><br><span class="line">                $Locals_img = substr($Locals_tmp, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">                $Locals_tmp = substr($Locals_tmp, <span class="number">10</span>, strlen($Locals_tmp) - <span class="number">10</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x80</span> &amp;&amp; <span class="keyword">$this</span>-&gt;first_frame === <span class="keyword">FALSE</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($Global_len == $Locals_len) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;blockCompare($Global_rgb, $Locals_rgb, $Global_len)) &#123;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;image .= ( $Locals_ext . $Locals_img . $Locals_tmp );</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $byte = ord($Locals_img &#123; <span class="number">9</span> &#125;);</span><br><span class="line">                    $byte |= <span class="number">0x80</span>;</span><br><span class="line">                    $byte &amp;= <span class="number">0xF8</span>;</span><br><span class="line">                    $byte |= ( ord(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> );</span><br><span class="line">                    $Locals_img &#123; <span class="number">9</span> &#125; = chr($byte);</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;image .= ( $Locals_ext . $Locals_img . $Locals_rgb . $Locals_tmp );</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $byte = ord($Locals_img &#123; <span class="number">9</span> &#125;);</span><br><span class="line">                $byte |= <span class="number">0x80</span>;</span><br><span class="line">                $byte &amp;= <span class="number">0xF8</span>;</span><br><span class="line">                $byte |= ( ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> );</span><br><span class="line">                $Locals_img &#123; <span class="number">9</span> &#125; = chr($byte);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;image .= ( $Locals_ext . $Locals_img . $Locals_rgb . $Locals_tmp );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;image .= ( $Locals_ext . $Locals_img . $Locals_tmp );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;first_frame = <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add the gif footer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">addFooter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;image .= <span class="string">";"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Compare gif blocks? What is a block?</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $GlobalBlock</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $LocalBlock</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $Len</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">blockCompare</span><span class="params">($GlobalBlock, $LocalBlock, $Len)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $Len; $i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (</span><br><span class="line">                $GlobalBlock &#123; <span class="number">3</span> * $i + <span class="number">0</span> &#125; != $LocalBlock &#123; <span class="number">3</span> * $i + <span class="number">0</span> &#125; ||</span><br><span class="line">                $GlobalBlock &#123; <span class="number">3</span> * $i + <span class="number">1</span> &#125; != $LocalBlock &#123; <span class="number">3</span> * $i + <span class="number">1</span> &#125; ||</span><br><span class="line">                $GlobalBlock &#123; <span class="number">3</span> * $i + <span class="number">2</span> &#125; != $LocalBlock &#123; <span class="number">3</span> * $i + <span class="number">2</span> &#125;</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="keyword">return</span> ( <span class="number">0</span> );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ( <span class="number">1</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * No clue</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string the char you meant?</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">word</span><span class="params">($int)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ( chr($int &amp; <span class="number">0xFF</span>) . chr(( $int &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span>) );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return the animated gif</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> resource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;image;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return the animated gif</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@echo</span> image</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//late footer add</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;addFooter();</span><br><span class="line">        header(<span class="string">'Content-type:image/gif'</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;image;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>使用示例代码:<br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$str = <span class="string">'abcdefghijkmnpqrstuvwxy3456789'</span>;</span><br><span class="line">$len = strlen($str) - <span class="number">1</span>;</span><br><span class="line">$text = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">6</span>; $i++) &#123;</span><br><span class="line">	$text .= $str[rand(<span class="number">0</span>, $len)];</span><br><span class="line">&#125;</span><br><span class="line">$gif = ImageCode(</span><br><span class="line">	$text, <span class="number">8</span>, <span class="number">1</span>,</span><br><span class="line">	<span class="number">100</span>, <span class="number">35</span>,</span><br><span class="line">	<span class="number">23</span></span><br><span class="line">);</span><br><span class="line">$gif-&gt;display();</span><br></pre></td></tr></table></figure><p></p>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>代码</tag>
        <tag>captcha</tag>
        <tag>gif</tag>
      </tags>
  </entry>
  <entry>
    <title>gd-输出图片流</title>
    <url>/posts/faad097e/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近在搞laravels项目,由于laravels是通过swoole来加速laravel的,php-fpm模式下的一些输出函数收到了干扰,比如:header(),在laravels下返回输出和header头的设定需要由response()来完成.但是gd的输出就比较特别了,它要么输出网页,要么输出文件.如果想要输出二进制流再交给PHP就比较麻烦了,网上普遍的方案就是先把gd图像输出到缓存文件里,再读取出来.可是在要有占用了太多的磁盘I/O<br><a id="more"></a></p><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p><code>gd</code>直接输出到网页我们后台无法很好的设置<code>header</code>来标注文件类型.</p><h4 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h4><p><code>gd</code>先输出到文件,在用<code>file_get_contents</code>读取.<br>缺陷:太过于占用磁盘<code>I/O</code><br><code>gd</code>的输出先由<code>ob</code>缓存下来,再用<code>ob_get_contents</code>获取.<br>代码:<br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">ob_start();</span><br><span class="line"><span class="keyword">switch</span> ($type) &#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'jpg'</span>:</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'jpeg'</span>:</span><br><span class="line">		$type = <span class="string">'image/jpeg'</span>;</span><br><span class="line">		imagejpeg(<span class="keyword">$this</span>-&gt;image, <span class="string">''</span>, <span class="number">0.5</span>);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'png'</span>:</span><br><span class="line">		$type = <span class="string">'image/png'</span>;</span><br><span class="line">		imagepng(<span class="keyword">$this</span>-&gt;image);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'bmp'</span>:</span><br><span class="line">		$type = <span class="string">'image/vnd.wap.wbmp'</span>;</span><br><span class="line">		imagewbmp(<span class="keyword">$this</span>-&gt;image);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'gif'</span>:</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		$type = <span class="string">'image/gif'</span>;</span><br><span class="line">		imagegif(<span class="keyword">$this</span>-&gt;image);</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">$contents = ob_get_contents();</span><br><span class="line">ob_end_clean();</span><br><span class="line"><span class="keyword">return</span> response($content)</span><br><span class="line">	-&gt;header(<span class="string">'Content-type'</span>, $type);</span><br></pre></td></tr></table></figure><p></p>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>gd</tag>
        <tag>ob</tag>
      </tags>
  </entry>
  <entry>
    <title>在Merlin上安装Entware</title>
    <url>/posts/32c6b91b/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在之前安装好Merlin后,接下来就是安装Entware,不过在安装Entware之前需要先挂载U盘并格式化为ext4.<br><a id="more"></a></p><h3 id="安装fdisk"><a href="#安装fdisk" class="headerlink" title="安装fdisk"></a>安装fdisk</h3><p>fdisk一般的Merlin都是自带的,无需安装,如果还没有安装fdisk而且也还没有Entware的话要么就直接用电脑格式化后挂载进去(这个我没有试过,应该效果一致)</p><h3 id="检查设备"><a href="#检查设备" class="headerlink" title="检查设备"></a>检查设备</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fdisk -l</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这里先输出系统分区之类的不用管，外置设备一般在最后</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 一般会有类似于这样的,如果没有那你需要检查一下U盘是否正常</span></span><br><span class="line">Disk /dev/sda: 30.7 GB, 30752000000 bytes</span><br><span class="line">64 heads, 32 sectors/track, 29327 cylinders</span><br></pre></td></tr></table></figure><p>上面的信息注意看到和你的存储大小一样的设备，我的是<code>/dev/sda</code>，在它里面有个<code>/dev/sda1</code>的分区</p><h3 id="删除并建立新的分区"><a href="#删除并建立新的分区" class="headerlink" title="删除并建立新的分区"></a>删除并建立新的分区</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fdisk /dev/sda # 这是你的设备別打成分区,注意别打成了sda1</span><br><span class="line"></span><br><span class="line">Welcome to fdisk (util-linux 2.29.2).</span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line">Command (m for help): d # 输入d回车，我只有一个分区，它自动选择了，如果你有多个分区，可以多次使用d</span><br><span class="line">Selected partition 1</span><br><span class="line">Partition 1 has been deleted.</span><br><span class="line"></span><br><span class="line">Command (m for help): n # 输入n会车，创建分区</span><br><span class="line">Partition type</span><br><span class="line">p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">e   extended (container for logical partitions)</span><br><span class="line"></span><br><span class="line">Select (default p): p # 选择p</span><br><span class="line">Partition number (1-4, default 1): # 回车</span><br><span class="line">First sector (2048-2065023, default 2048): #回车</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (2048-2065023, default 2065023): # 回车</span><br><span class="line">Created a new partition 1 of type 'Linux' and of size 1007.3 MiB.</span><br><span class="line"></span><br><span class="line">Command (m for help): w # 输入w回车，保存并退出</span><br><span class="line">The partition table has been altered.</span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure><p>经过以上的操作，你可以用<code>fdisk -l</code>命令查看U盘上是否只有一个<code>Linux</code>分区<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fdisk -l</span><br><span class="line"><span class="meta">#</span><span class="bash"> 找到你的设备 可以看到ID为83就对了</span></span><br><span class="line">Disk /dev/sda: 30.7 GB, 30752000000 bytes</span><br><span class="line">64 heads, 32 sectors/track, 29327 cylinders</span><br><span class="line">Units = cylinders of 2048 * 512 = 1048576 bytes</span><br><span class="line">Device Boot      Start         End      Blocks  Id System</span><br><span class="line">/dev/sda1               2       29327    30029824  83 Linux</span><br></pre></td></tr></table></figure><p></p><h3 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果你的硬盘比较大，256G以上的话，是这个命令：mkfs.ext4 -T largefile /dev/sda1</span></span><br><span class="line">mke2fs 1.43.3 (04-Sep-2016)</span><br><span class="line">/dev/sda1 contains a ext4 file system labelled 'ONMP'</span><br><span class="line">last mounted on Sun Nov 12 09:21:22 2017</span><br><span class="line">Proceed anyway? (y,n) y # 输入y回车</span><br><span class="line">umount /dev/sda1 # 如果出错，可能是因为已经被挂载了，先执行这个卸载</span><br></pre></td></tr></table></figure><h3 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /mnt/sda1</span><br><span class="line">mount -t ext4 /dev/sda1 /mnt/sda1/</span><br><span class="line">df -h</span><br><span class="line">Filesystem                Size      Used Available Use% Mounted on</span><br><span class="line">/dev/sda1               975.5M      2.5M    906.6M   0% /tmp/mnt/sda1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以看到已经挂载</span></span><br></pre></td></tr></table></figure><h3 id="安装和使用Entware"><a href="#安装和使用Entware" class="headerlink" title="安装和使用Entware"></a>安装和使用Entware</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">entware-setup.sh</span><br></pre></td></tr></table></figure><p>注意一下选择分区的时候选择刚才挂载上去的那个<br>参考:</p><ul><li><a href="https://github.com/xzhih/ONMP/wiki/%E5%9C%A8%E6%A2%85%E6%9E%97%E4%B8%8A%E5%AE%89%E8%A3%85-Entware" title="在梅林上安装 Entware" target="_blank" rel="noopener">在梅林上安装 Entware</a></li><li><a href="https://github.com/xzhih/ONMP/wiki/%E5%A6%82%E4%BD%95%E5%9C%A8%E8%B7%AF%E7%94%B1%E5%99%A8%E4%B8%8A%E6%A0%BC%E5%BC%8F%E5%8C%96-U-%E7%9B%98%E4%B8%BA-ext4" title="如何在路由器上格式化 U 盘为 ext4" target="_blank" rel="noopener">如何在路由器上格式化 U 盘为 ext4</a></li></ul>]]></content>
      <tags>
        <tag>Merlin</tag>
        <tag>R7000</tag>
        <tag>路由器</tag>
        <tag>Entware</tag>
        <tag>磁盘管理</tag>
      </tags>
  </entry>
  <entry>
    <title>R7000刷Merlin</title>
    <url>/posts/50136e28/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>之前买了一个Netgear R7000 路由器,到手后就感觉忍受不了它的那个超不好用的web ui,所以就没上手两分钟果断刷机成Merlin了.<br><a id="more"></a></p><h3 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h3><ol><li>刷机到<code>Merlin</code>和<code>Netgear</code>之间的一个过渡固件(这其实就是一些玩家做的<code>Netgear</code>版的<code>Merlin</code>固件包,是一个完整版的<code>Merlin</code>,只是版本比较老)</li><li>刷机到最新版的<code>Merlin</code><h3 id="所需材料"><a href="#所需材料" class="headerlink" title="所需材料"></a>所需材料</h3><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R7000_380.70_0-X7.9.1-koolshare.chk" title="R7000_380.70_0-X7.9.1-koolshare.chk" target="_blank" rel="noopener">R7000_380.70_0-X7.9.1-koolshare.chk</a><br><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R7000_380.70_0-X7.9.1-koolshare.trx" title="R7000_380.70_0-X7.9.1-koolshare.trx" target="_blank" rel="noopener">R7000_380.70_0-X7.9.1-koolshare.trx</a></li></ol><h3 id="刷机方法"><a href="#刷机方法" class="headerlink" title="刷机方法"></a>刷机方法</h3><ul><li>浏览器输入<a href="http://www.routerlogin.net" target="_blank" rel="noopener">www.routerlogin.net</a></li><li>进入<code>高级</code>—<code>管理</code>—<code>固件更新</code>，上传 <code>R7000_380.70_0-X7.9.1-koolshare.chk</code> 固件，点更新(有很多教程说要在这一步之前恢复出厂设置,不过我这边没有恢复也可以,如果有玩家不放心恢复出厂设置也可以)<br>更新固件过程中路由器可能要重启几次</li><li>再输入<a href="http://router.asus.com/" title="http://router.asus.com/" target="_blank" rel="noopener">http://router.asus.com/</a>访问新的固件的控制面板</li><li>恢复一次出厂设置(这一次恢复出厂设置和格式化jffs分区也不是是必须的)</li><li>格式化jffs分区 进入路由管理界面 -<code>系统管理</code>- <code>系统设置</code>，勾选<code>Format JFFS partition at next boot</code>，点击应用本页面设置后重启路由器</li><li>进入路由器设置。<code>系统管理</code>—<code>固件升级</code>，选择 <code>R7000_380.70_0-X7.9.1-koolshare.trx</code> 上传后更新。</li><li>再恢复一次出厂设置就可以正常使用了<h5 id="清配置说明"><a href="#清配置说明" class="headerlink" title="清配置说明"></a>清配置说明</h5></li></ul><table><thead><tr><th>A 刷 B</th><th>（B）X6.x</th><th>（B）X7.x</th><th>（B）X7.9.1</th></tr></thead><tbody><tr><td>（A）X6.x</td><td>保持</td><td>清配置+格式化jffs</td><td>清配置+格式化jffs</td></tr><tr><td>（A）X7.x</td><td>清配置+格式化jffs</td><td>保持</td><td>保持</td></tr><tr><td>（A）X7.9.1</td><td>清配置+格式化jffs</td><td>仅格式化jffs</td><td>保持</td></tr></tbody></table><h5 id="固件双清方法"><a href="#固件双清方法" class="headerlink" title="固件双清方法"></a>固件双清方法</h5><p>如果固件出现问题,一时找不到解决办法,可以尝试双清并手动配置,方法如下</p><ul><li>格式化jffs分区：方法同上；</li><li>恢复出厂设置：进入路由管理界面 -【【系统管理】- 【恢复/导出/上传设置】- 【原厂默认值】，点击原厂默认值一栏的【恢复】按钮；</li><li>建议完成双清后手动配置路由，而不是用以前备份的配置，以避免可能的问题；<h3 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h3></li><li>X7.9.1 固件 (trx)<ul><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R6300V2_380.70_0-X7.9.1-koolshare.trx" title="R6300V2" target="_blank" rel="noopener">R6300V2</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R6400_380.70_0-X7.9.1-koolshare.trx" title="R6400" target="_blank" rel="noopener">R6400</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R7000_380.70_0-X7.9.1-koolshare.trx" title="R6900/R7000" target="_blank" rel="noopener">R6900/R7000</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R8000_380.70_0-X7.9.1-koolshare.trx" title="R8000" target="_blank" rel="noopener">R8000</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R8500_380.70_0-X7.9.1-koolshare.trx" title="R8500" target="_blank" rel="noopener">R8500</a></li></ul></li><li>X7.9.1 过渡固件 (chk)<ul><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R6300V2_380.70_0-X7.9.1-koolshare.chk" title="R6300V2" target="_blank" rel="noopener">R6300V2</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R6400_380.70_0-X7.9.1-koolshare.chk" title="R6400" target="_blank" rel="noopener">R6400</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R7000_380.70_0-X7.9.1-koolshare.chk" title="R6900/R7000" target="_blank" rel="noopener">R6900/R7000</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R8000_380.70_0-X7.9.1-koolshare.chk" title="R8000" target="_blank" rel="noopener">R8000</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R8500_380.70_0-X7.9.1-koolshare.chk" title="R8500" target="_blank" rel="noopener">R8500</a></li></ul></li><li>X7.9<ul><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R6300V2_380.70_0-X7.9-koolshare.trx" title="R6300V2" target="_blank" rel="noopener">R6300V2</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R6400_380.70_0-X7.9-koolshare.trx" title="R6400" target="_blank" rel="noopener">R6400</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R7000_380.70_0-X7.9-koolshare.trx" title="R6900/R7000" target="_blank" rel="noopener">R6900/R7000</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R8000_380.70_0-X7.9-koolshare.trx" title="R8000" target="_blank" rel="noopener">R8000</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R8500_380.70_0-X7.9-koolshare.trx" title="R8500" target="_blank" rel="noopener">R8500</a></li></ul></li></ul>]]></content>
      <tags>
        <tag>Merlin</tag>
        <tag>R7000</tag>
        <tag>路由器</tag>
      </tags>
  </entry>
  <entry>
    <title>测试Emoji表情</title>
    <url>/posts/5cd7067a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>🐰 🐨 🐸 🐞 🐾 😄 💙✈️👶🐤🎈🐻🌵👯😰🍂💋🎃🐙</p>]]></content>
      <tags>
        <tag>emoji</tag>
      </tags>
  </entry>
  <entry>
    <title>LaravelS开发记录</title>
    <url>/posts/45ef7ac/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>主要记录了由普通PHP开发者初步接触laravelS是所遇到的一些小坑<br><a id="more"></a></p><h3 id="LaravelS介绍"><a href="#LaravelS介绍" class="headerlink" title="LaravelS介绍"></a>LaravelS介绍</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> _                               _  _____</span><br><span class="line">| |                             | |/ ____|</span><br><span class="line">| |     __ _ _ __ __ ___   _____| | (___</span><br><span class="line">| |    / _` | &apos;__/ _` \ \ / / _ \ |\___ \</span><br><span class="line">| |___| (_| | | | (_| |\ V /  __/ |____) |</span><br><span class="line">|______\__,_|_|  \__,_| \_/ \___|_|_____/</span><br></pre></td></tr></table></figure><p>LaravelS是一个能够使普通的laravel项目尽快的享受上swoole的优势的laravel插件<br>官方描述:<br>🚀LaravelS是一个胶水项目，用于快速集成Swoole到Laravel或Lumen，然后赋予它们更好的性能、更多可能性。</p><p>GitHub地址:<br></p><div style="text-align:center"><div class="github-card" data-user="hhxsv5" data-repo="laravel-s" data-height="200px" data-width="100%" data-theme="default" data-target="blank" data-client-id data-client-secret></div></div><script src="/github-card-lib/githubcard.js"></script><br>文档地址:<br><a href="https://github.com/hhxsv5/laravel-s/blob/master/README-CN.md" title="laravel-s/README-CN.md" target="_blank" rel="noopener">laravel-s/README-CN.md</a><br>Laravel-China地址:<br><a href="https://laravel-china.org/articles/8050/laravels-speed-up-laravellumen-through-swoole" title="LaravelS - 基于 Swoole 加速 Laravel/Lumen - 带你飞 🚀" target="_blank" rel="noopener">LaravelS - 基于 Swoole 加速 Laravel/Lumen - 带你飞 🚀</a><p></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h4><table><thead><tr><th>依赖</th><th>说明</th></tr></thead><tbody><tr><td>PHP</td><td>&gt;= 5.5.9 推荐PHP7+</td></tr><tr><td>Swoole</td><td>&gt;= 1.7.19 从2.0.12开始不再支持PHP5 推荐4.2.3+</td></tr><tr><td>Laravel/Lumen</td><td>&gt;= 5.1 推荐5.6+</td></tr></tbody></table><h4 id="安装swoole"><a href="#安装swoole" class="headerlink" title="安装swoole"></a>安装swoole</h4><p>详细请参考 <a href="https://hexo.lilis.xin/2018/07/26/install-swoole/" title="swoole安装">swoole安装</a></p><h4 id="安装laravel"><a href="#安装laravel" class="headerlink" title="安装laravel"></a>安装laravel</h4><p>可以通过composer直接安装,或者安装安装器或者直接从GitHub拷贝源代码来安装</p><h4 id="安装laravelS"><a href="#安装laravelS" class="headerlink" title="安装laravelS"></a>安装laravelS</h4><ol><li><p>通过Composer安装</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">composer require "hhxsv5/laravel-s:~3.0" -vvv</span><br><span class="line"><span class="meta">#</span><span class="bash"> 确保你的composer.lock文件是在版本控制中</span></span><br></pre></td></tr></table></figure></li><li><p>注册<code>Service Provider</code></p><ul><li><p>Laravel: 修改文件<code>config/app.php</code>，Laravel 5.5+支持包自动发现，你应该跳过这步</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">'providers'</span> =&gt; [</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    Hhxsv5\LaravelS\Illuminate\LaravelSServiceProvider::class,</span><br><span class="line">],</span><br></pre></td></tr></table></figure></li><li><p>Lumen: 修改文件<code>bootstrap/app.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$app-&gt;register(Hhxsv5\LaravelS\Illuminate\LaravelSServiceProvider::class);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>发布配置文件.</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php artisan laravels publish</span><br></pre></td></tr></table></figure></li></ol><p>如果你用的是<code>lumen</code>,不需要加载<code>config/laravels.php</code><br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//这个可有可无</span></span><br><span class="line">$app-&gt;configure(<span class="string">'laravels'</span>);</span><br></pre></td></tr></table></figure><p></p><ol start="4"><li>修改配置<code>config/laravels.php</code><br>请参考<code>laravelS配置项</code></li></ol><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php artisan laravels &#123;start|stop|restart|reload|publish&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>start</td><td>启动<code>LaravelS</code>。选项<code>-d</code>或<code>--daemonize</code>以守护进程的方式运行，此选项将覆盖<code>laravels.php</code>中<code>swoole.daemonize</code>设置</td></tr><tr><td>stop</td><td>停止<code>LaravelS</code></td></tr><tr><td>restart</td><td>重启<code>LaravelS</code>，支持选项<code>-d</code>或<code>--daemonize</code></td></tr><tr><td>reload</td><td>平滑重启所有<code>worker</code>进程，这些<code>worker</code>进程内包含你的业务代码和框架(<code>Laravel/Lumen</code>)代码，不会重启<code>master/manger</code>进程</td></tr><tr><td>publish</td><td>发布配置文件到你的项目中<code>config/laravels.php</code></td></tr></tbody></table><p>ps:展示已经启动的项目:<br><code>ps -ef|grep laravels</code></p><h4 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gzip on;</span><br><span class="line">gzip_min_length 1024;</span><br><span class="line">gzip_comp_level 2;</span><br><span class="line">gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml;</span><br><span class="line">gzip_vary on;</span><br><span class="line">gzip_disable "msie6";</span><br><span class="line">upstream laravels &#123;</span><br><span class="line">    # By IP:Port</span><br><span class="line">    server 127.0.0.1:9100 weight=5 max_fails=3 fail_timeout=30s; #这里配置的是laravelS监听的接口参数</span><br><span class="line">    # By UnixSocket Stream file</span><br><span class="line">    #server unix:/xxxpath/laravel-s-test/storage/laravels.sock weight=5 max_fails=3 fail_timeout=30s;</span><br><span class="line">    #server 192.168.1.1:5200 weight=3 max_fails=3 fail_timeout=30s;</span><br><span class="line">    #server 192.168.1.2:5200 backup;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">	listen 80;</span><br><span class="line">	server_name laravels.com;</span><br><span class="line"><span class="meta">	#</span><span class="bash">为了给nginx定位静态资源</span></span><br><span class="line">	root /xxxpath/laravel-s-test/public;</span><br><span class="line"><span class="meta">	#</span><span class="bash"> Nginx处理静态资源(建议开启gzip)，LaravelS处理动态资源。</span></span><br><span class="line">	location / &#123;</span><br><span class="line">		try_files $uri @laravels;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	location @laravels &#123;</span><br><span class="line">        proxy_connect_timeout 60s;</span><br><span class="line">        proxy_send_timeout 60s;</span><br><span class="line">        proxy_read_timeout 120s;</span><br><span class="line">        proxy_set_header Connection "keep-alive";</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Real-PORT $remote_port;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        proxy_set_header Scheme $scheme;</span><br><span class="line">        proxy_set_header Server-Protocol $server_protocol;</span><br><span class="line">        proxy_set_header Server-Name $server_name;</span><br><span class="line">        proxy_set_header Server-Addr $server_addr;</span><br><span class="line">        proxy_set_header Server-Port $server_port;</span><br><span class="line">        proxy_pass http://laravels;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置Apache"><a href="#配置Apache" class="headerlink" title="配置Apache"></a>配置Apache</h4><p>ps:我用的是nginx,没有实际配置过,就直接把官方文档里的拿过来了<br></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">LoadModule proxy_module /yyypath/modules/mod_deflate.so</span><br><span class="line"><span class="tag">&lt;<span class="name">IfModule</span> <span class="attr">deflate_module</span>&gt;</span></span><br><span class="line">    SetOutputFilter DEFLATE</span><br><span class="line">    DeflateCompressionLevel 2</span><br><span class="line">    AddOutputFilterByType DEFLATE text/html text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml</span><br><span class="line"><span class="tag">&lt;/<span class="name">IfModule</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">VirtualHost</span> *<span class="attr">:80</span>&gt;</span></span><br><span class="line">    # 别忘了绑Host哟</span><br><span class="line">    ServerName www.laravels.com</span><br><span class="line">    ServerAdmin hhxsv5@sina.com</span><br><span class="line"></span><br><span class="line">    DocumentRoot /xxxpath/laravel-s-test/public;</span><br><span class="line">    DirectoryIndex index.html index.htm</span><br><span class="line">    <span class="tag">&lt;<span class="name">Directory</span> "/"&gt;</span></span><br><span class="line">        AllowOverride None</span><br><span class="line">        Require all granted</span><br><span class="line">    <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    LoadModule proxy_module /yyypath/modules/mod_proxy.so</span><br><span class="line">    LoadModule proxy_module /yyypath/modules/mod_proxy_balancer.so</span><br><span class="line">    LoadModule proxy_module /yyypath/modules/mod_lbmethod_byrequests.so.so</span><br><span class="line">    LoadModule proxy_module /yyypath/modules/mod_proxy_http.so.so</span><br><span class="line">    LoadModule proxy_module /yyypath/modules/mod_slotmem_shm.so</span><br><span class="line">    LoadModule proxy_module /yyypath/modules/mod_rewrite.so</span><br><span class="line"></span><br><span class="line">    ProxyRequests Off</span><br><span class="line">    ProxyPreserveHost On</span><br><span class="line">    <span class="tag">&lt;<span class="name">Proxy</span> <span class="attr">balancer:</span>//<span class="attr">laravels</span>&gt;</span></span><br><span class="line">        BalancerMember http://192.168.1.1:8011 loadfactor=7</span><br><span class="line">        #BalancerMember http://192.168.1.2:8011 loadfactor=3</span><br><span class="line">        #BalancerMember http://192.168.1.3:8011 loadfactor=1 status=+H</span><br><span class="line">        ProxySet lbmethod=byrequests</span><br><span class="line">    <span class="tag">&lt;/<span class="name">Proxy</span>&gt;</span></span><br><span class="line">    #ProxyPass / balancer://laravels/</span><br><span class="line">    #ProxyPassReverse / balancer://laravels/</span><br><span class="line"></span><br><span class="line">    # Apache处理静态资源，LaravelS处理动态资源。</span><br><span class="line">    RewriteEngine On</span><br><span class="line">    RewriteCond %&#123;DOCUMENT_ROOT&#125;%&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">    RewriteCond %&#123;DOCUMENT_ROOT&#125;%&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">    RewriteRule ^/(.*)$ balancer://laravels/%&#123;REQUEST_URI&#125; [P,L]</span><br><span class="line"></span><br><span class="line">    ErrorLog $&#123;APACHE_LOG_DIR&#125;/www.laravels.com.error.log</span><br><span class="line">    CustomLog $&#123;APACHE_LOG_DIR&#125;/www.laravels.com.access.log combined</span><br><span class="line"><span class="tag">&lt;/<span class="name">VirtualHost</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><h4 id="自定义的异步任务"><a href="#自定义的异步任务" class="headerlink" title="自定义的异步任务"></a>自定义的异步任务</h4><p>此特性依赖<code>Swoole</code>的<code>AsyncTask</code>，必须先设置<code>config/laravels.php</code>的<code>swoole.task_worker_num</code>。<br>异步事件的处理能力受<code>Task</code>进程数影响，需合理设置<code>task_worker_num</code>。<br>任务结构<br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Task</span>\<span class="title">Message</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Traits</span>\<span class="title">Push</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Hhxsv5</span>\<span class="title">LaravelS</span>\<span class="title">Swoole</span>\<span class="title">Task</span>\<span class="title">Task</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Reply</span> <span class="keyword">extends</span> <span class="title">Task</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;data = $data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 任务逻辑</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">		<span class="comment">//Do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>ps: 任务里没有依赖注入这种便捷的东西<br>投递任务<br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 实例化$action并通过deliver投递</span></span><br><span class="line"><span class="comment">//此操作是异步的，投递后立即返回</span></span><br><span class="line"><span class="comment">//由Task进程继续处理$action中的handle逻辑</span></span><br><span class="line">$task = <span class="keyword">new</span> \App\Task\Message\Reply($dat);</span><br><span class="line"><span class="comment">// $task-&gt;delay(3);// 延迟3秒投放任务</span></span><br><span class="line">\Hhxsv5\LaravelS\Swoole\Task\Task::deliver($task);</span><br></pre></td></tr></table></figure><p></p><h4 id="laravelS配置项"><a href="#laravelS配置项" class="headerlink" title="laravelS配置项"></a>laravelS配置项</h4><ul><li><p><code>listen_ip</code>：<code>string</code> 监听的IP，监听本机<code>127.0.0.1</code>(IPv4) <code>::1</code>(IPv6)，监听所有地址 <code>0.0.0.0</code>(IPv4) ::(IPv6)， 默认<code>127.0.0.1</code>。</p></li><li><p><code>listen_port</code>：<code>int</code> 监听的端口，如果端口小于1024则需要root权限，<code>default 5200</code>。</p></li><li><p><code>socket_type</code>：默认<code>SWOOLE_SOCK_TCP</code>。通常情况下，无需关心这个配置。若需Nginx代理至<code>UnixSocket Stream</code>文件，则需修改为<code>SWOOLE_SOCK_UNIX_STREAM</code>，此时<code>listen_ip</code>则是<code>UnixSocket Stream</code>文件的路径。</p></li><li><p><code>enable_gzip</code>：bool 当通过LaravelS响应数据时，是否启用gzip压缩响应的内容，依赖库<code>zlib</code>，通过命令<code>php --ri swoole|grep zlib</code>检查<code>gzip</code>是否可用。如果开启则会自动加上头部<code>Content-Encoding</code>，默认<code>false</code>。如果存在代理服务器（例如Nginx），建议代理服务器开启<code>gzip</code>，<code>LaravelS</code>关闭gzip，避免重复<code>gzip</code>压缩。</p></li><li><p><code>server</code>：<code>string</code> 当通过<code>LaravelS</code>响应数据时，设置<code>HTTP</code>头部<code>Server</code>的值，若为空则不设置，<code>default LaravelS</code>。</p></li><li><p><code>handle_static</code>：<code>bool</code> 是否开启<code>LaravelS</code>处理静态资源(要求 <code>Swoole &gt;= 1.7.21</code>，若<code>Swoole &gt;= 1.9.17</code>则由Swoole自己处理)，默认<code>false</code>，建议<code>Nginx</code>处理静态资源，<code>LaravelS</code>仅处理动态资源。静态资源的默认路径为<code>base_path(&#39;public&#39;)</code>，可通过修改<code>swoole.document_root</code>变更。</p></li><li><p><code>laravel_base_path</code>：<code>string</code> <code>Laravel/Lumen</code>的基础路径，默认<code>base_path()</code>，可用于配置符号链接。</p></li><li><p><code>inotify_reload.enable</code>：<code>bool</code> 是否开启<code>Inotify Reload</code>，用于当修改代码后实时<code>Reload</code>所有<code>worker</code>进程，依赖库<code>inotify</code>，通过命令<code>php --ri inotify</code>检查是否可用，默认<code>false</code>，建议仅开发环境开启，修改监听数上限。</p></li><li><p><code>inotify_reload.watch_path</code>：<code>string</code> <code>Inotify</code> 监控的文件路径，默认有<code>base_path()</code>。</p></li><li><p><code>inotify_reload.file_types</code>：<code>array</code> <code>Inotify</code> 监控的文件类型，默认有<code>.php</code>。</p></li><li><p><code>inotify_reload.log</code>：<code>bool</code> 是否输出<code>Reload</code>的日志，默认<code>true</code>。</p></li><li><p><code>websocket.enable</code>：<code>bool</code> 是否启用<code>WebSocket</code>服务器。启用后<code>WebSocket</code>服务器监听的<code>IP</code>和端口与<code>Http</code>服务器相同，默认<code>false</code>。</p></li><li><p><code>websocket.handler</code>：<code>string</code> <code>WebSocket</code>逻辑处理的类名，需实现接口<code>WebSocketHandlerInterface</code>，参考示例。</p></li><li><p><code>sockets</code>：<code>array</code> 配置<code>TCP/UDP</code>套接字列表，参考示例。</p></li><li><p><code>processes</code>：<code>array</code> 配置自定义进程列表，参考示例。</p></li><li><p><code>events</code>：<code>array</code> 自定义的异步事件和监听的绑定列表，参考示例。</p></li><li><p><code>swoole_tables</code>：<code>array</code> 定义的<code>swoole_table</code>列表，参考示例。</p></li><li><p><code>register_providers</code>：<code>array</code> 每次请求需要重新注册的<code>Service Provider</code>列表，若存在<code>boot()</code>方法，会自动执行。一般用于清理注册了单例的<code>ServiceProvider</code>。</p></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="string">'register_providers'</span> =&gt; [</span><br><span class="line">    <span class="comment">//例如：重新注册jwt的ServiceProvider</span></span><br><span class="line">    \Tymon\JWTAuth\Providers\LaravelServiceProvider::class,</span><br><span class="line">],</span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><ul><li>swoole：<code>array</code> <code>Swoole</code>的原始配置项，请参考<a href="https://wiki.swoole.com/wiki/page/274.html" title="Swoole配置项" target="_blank" rel="noopener">Swoole配置项</a>。</li></ul>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>异步</tag>
        <tag>laravel</tag>
        <tag>LaravelS</tag>
        <tag>Lumen</tag>
        <tag>swoole</tag>
      </tags>
  </entry>
  <entry>
    <title>php在linux下call to undefined function imagettftext()</title>
    <url>/posts/d90db6f7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在线上环境测试图片生成的时候报错:<code>call to undefined function imagettftext()</code><br><a id="more"></a></p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>下载安装<a href="https://sourceforge.net/projects/freetype/files/freetype2/2.7.1/freetype-2.7.1.tar.gz/download" title="freetype" target="_blank" rel="noopener">freetype</a></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/usr/local/freetype/2.7.1 --without-harfbuzz //编译</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>再重新编译安装gd</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">phpize</span><br><span class="line">make clean</span><br><span class="line">./configure --with-php-config=/usr/local/php/php72/bin/php-config--with-freetype-dir=/usr/local/freetype/2.7.1/ --enable-gd-native-ttf</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>gd</tag>
        <tag>freetype</tag>
      </tags>
  </entry>
  <entry>
    <title>php操作redis</title>
    <url>/posts/a8f30b9a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这里主要是用的predis<br><a id="more"></a><br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//验证是否安装OK:打开dos窗口-&gt;输入redis-server 在打开一个dos窗口--&gt;输入redis-cli 显示：127.0.0.1:6379&gt;则成功！</span></span><br><span class="line">	$redis = <span class="keyword">new</span> redis();</span><br><span class="line">	$redis-&gt;connect(<span class="string">'127.0.0.1'</span>, <span class="string">'6379'</span>) || <span class="keyword">die</span>(<span class="string">"连接失败！"</span>);</span><br><span class="line">	$redis-&gt;auth(<span class="string">"admin"</span>); <span class="comment">//授权</span></span><br><span class="line">	<span class="comment">//******************************string类型**********************************************************</span></span><br><span class="line">	<span class="comment">//String 是最简单的类型，一个Key对应一个Value，String类型是二进制安全的。Redis的String可以包含任何数据，比如jpg图片或者序列化的对象</span></span><br><span class="line">	$redis-&gt;set(<span class="string">'test'</span>, <span class="number">200</span>); <span class="comment">//赋值</span></span><br><span class="line">	$redis-&gt;mset(<span class="keyword">array</span>(<span class="string">'key0'</span> =&gt; <span class="string">'value0'</span>, <span class="string">'key1'</span> =&gt; <span class="string">'value1'</span>));<span class="comment">//批量赋值</span></span><br><span class="line">	$redis-&gt;mget(<span class="keyword">array</span>(<span class="string">'key0'</span>, <span class="string">'key1'</span>, <span class="string">'key2'</span>));<span class="comment">//批量获取值</span></span><br><span class="line">	$redis-&gt;setnx(<span class="string">'key'</span>,value);<span class="comment">//设置key对应的值为string类型的value,如果key已经存在，返回0,nx是not exist的意思</span></span><br><span class="line">	$redis-&gt;msetnx(<span class="keyword">array</span>(<span class="string">'key0'</span> =&gt; <span class="string">'value0'</span>, <span class="string">'key1'</span> =&gt; <span class="string">'value1'</span>));<span class="comment">//全部成功返回1，否则失败一个也返回0</span></span><br><span class="line">	$redis-&gt;getset(<span class="string">"key"</span>,<span class="string">'newvalue'</span>);<span class="comment">//getset设置key的值，并返回key的旧值</span></span><br><span class="line">	$redis-&gt;setex(<span class="string">'key'</span>,<span class="number">10</span>,<span class="string">'value10'</span>);<span class="comment">//带生存时间的写入值单位s</span></span><br><span class="line">	$redis-&gt;setrange(<span class="string">'key'</span>,<span class="number">0</span>,<span class="string">'hello'</span>);<span class="comment">//设置子字符串替换，key，开始位置，替换值</span></span><br><span class="line">	$redis-&gt;getrange(<span class="string">"key"</span>,<span class="number">0</span>,<span class="number">2</span>);<span class="comment">//getrange获取子字符串，getrange key start end</span></span><br><span class="line">	$redis-&gt;ttl(<span class="string">'key'</span>);<span class="comment">//获取key的生存时间,没设置的为-1</span></span><br><span class="line">	$redis-&gt;keys(<span class="string">"*a*"</span>);<span class="comment">//获取所有key，也可获取具体key，模糊匹配key</span></span><br><span class="line">	$redis-&gt;get(<span class="string">"test"</span>); <span class="comment">//根据key获取value</span></span><br><span class="line">	$redis-&gt;getMultiple(<span class="keyword">array</span>(<span class="string">'key1'</span>, <span class="string">'key2'</span>, <span class="string">'key3'</span>));</span><br><span class="line">	$exits = $redis-&gt;exists(<span class="string">'test'</span>); <span class="comment">//判断key是否存在。存在 true 不存在 false</span></span><br><span class="line">	<span class="keyword">echo</span> $exists?$res2:<span class="string">"null"</span>;</span><br><span class="line">	<span class="keyword">echo</span> $res1?$res2:<span class="string">"null"</span>;<span class="keyword">die</span>;</span><br><span class="line">	$redis-&gt;delete(<span class="string">'key1'</span>, <span class="string">'key2'</span>); <span class="comment">//删除,可删除多个</span></span><br><span class="line">	$redis-&gt;delete(<span class="keyword">array</span>(<span class="string">'key3'</span>, <span class="string">'key4'</span>, <span class="string">'key5'</span>));<span class="comment">//删除,可删除多个</span></span><br><span class="line">	$redis-&gt;delete( $redis-&gt;keys(<span class="string">"*"</span>));<span class="comment">//传数组，删除所有key</span></span><br><span class="line">	$redis-&gt;incr(<span class="string">"key"</span>,<span class="number">1</span>);<span class="comment">//自增，默认值1</span></span><br><span class="line">	$redis-&gt;incrBy(<span class="string">'key'</span>,<span class="number">10</span>);<span class="comment">//必须给定参数值</span></span><br><span class="line">	$redis-&gt;decr(<span class="string">"key"</span>,<span class="number">10</span>);<span class="comment">//自减，默认值1</span></span><br><span class="line">	$redis-&gt;decrBy(<span class="string">'key'</span>,<span class="number">10</span>);<span class="comment">//必须给定参数值</span></span><br><span class="line">	$redis-&gt;append(<span class="string">"key"</span>,<span class="string">"appendvalue"</span>);<span class="comment">//给指定的key的字符串追加value,返回新字符串的长度</span></span><br><span class="line">	$redis-&gt;strlen(<span class="string">'key'</span>);<span class="comment">//获取指定key的字符串长度</span></span><br><span class="line">	<span class="comment">//******************************string类型**********************************************************</span></span><br><span class="line">	<span class="comment">//******************************hash类型**********************************************************</span></span><br><span class="line">	<span class="comment">// Redis hash是一个string类型的field和value的映射表。它的添加删除都是0(1)</span></span><br><span class="line">	<span class="comment">// hash特别适合用于存储对象。相对于将对象的每个字段存成单个string类型。</span></span><br><span class="line">	<span class="comment">//将一个对象存储在hash类型中会占用更少的内存，并且可以更方便的存取整个对象。</span></span><br><span class="line">	$redis-&gt;flushall();<span class="keyword">die</span>;<span class="comment">//清空所有数据库</span></span><br><span class="line">	 $redis-&gt;flushdb();<span class="keyword">die</span>;<span class="comment">//清空当前数据库</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	$redis-&gt;hset(<span class="string">"test"</span>,<span class="string">"username"</span>,<span class="string">"admin"</span>);<span class="comment">//单个设置</span></span><br><span class="line">	$redis-&gt;hget(<span class="string">"test"</span>,<span class="string">"username"</span>);<span class="comment">//单个获取</span></span><br><span class="line">	$redis-&gt;hsetnx(<span class="string">"test"</span>,<span class="string">"username"</span>,<span class="string">"admin@qq.com"</span>);<span class="comment">//设置hash field 为指定的值value,如果feild已经存在，返回0,nx是not exist的意思  </span></span><br><span class="line">	$redis-&gt;hmset(<span class="string">"testabc"</span>,<span class="keyword">array</span>(<span class="string">"a"</span>=&gt;<span class="number">1</span>,<span class="string">"b"</span>=&gt;<span class="number">2</span>,<span class="string">"c"</span>=&gt;<span class="number">3</span>,<span class="string">'d'</span>=&gt;<span class="number">4</span>));<span class="comment">//批量设置</span></span><br><span class="line">	$redis-&gt;hmget(<span class="string">"testabc"</span>,<span class="keyword">array</span>(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>));<span class="comment">//批量获取</span></span><br><span class="line">	$redis-&gt;hincrBy(<span class="string">"test"</span>,<span class="string">"password"</span>,<span class="string">"123456"</span>);<span class="comment">//设置hash field 添加key和value</span></span><br><span class="line">	$redis-&gt;hexists(<span class="string">"test"</span>,<span class="string">"usernames"</span>);<span class="comment">//测试hash field  存在1，不存在0</span></span><br><span class="line">	$redis-&gt;hlen(<span class="string">"test"</span>); <span class="comment">//返回hash 里所有的 field 的数量</span></span><br><span class="line">	$redis-&gt;hdel(<span class="string">"test"</span>,<span class="string">"key"</span>);<span class="comment">//删除指定hash的field</span></span><br><span class="line">	$redis-&gt;hkeys(<span class="string">"test"</span>); <span class="comment">//返回hash 所有 field</span></span><br><span class="line">	$redis-&gt;hvals(<span class="string">"test"</span>);<span class="comment">//返回hash 所有 field values</span></span><br><span class="line">	$redis-&gt;hgetall(<span class="string">"test"</span>);<span class="comment">//获取hash中全部的field和value</span></span><br><span class="line">	<span class="comment">//******************************hash类型**********************************************************</span></span><br><span class="line">	<span class="comment">//******************************list链表**********************************************************</span></span><br><span class="line">	<span class="comment">//栈先进后出；队列先进先出；</span></span><br><span class="line">	<span class="comment">//List 是一个链表结构，主要功能是push,pop,获取一个范围的所有值等等，操作中key理解为链表的名字。</span></span><br><span class="line">	<span class="comment">//Redis的list类型其实就是一个每个子元素都是string类型的双向链表。我们可以通过push,pop操作从链表的头部或者尾部添加删除元素，这样LIST既可以作为栈，又可以作为队列。</span></span><br><span class="line">	$redis-&gt;lrange(<span class="string">"list"</span>,<span class="number">0</span>,<span class="number">-1</span>);<span class="comment">//取链表list 从0位开始取到最后位置；0代表头  -1代表尾</span></span><br><span class="line">	$redis-&gt;lpush(<span class="string">"list"</span>,<span class="string">"1"</span>); <span class="comment">//在key对应的list的头部添加字符串元素</span></span><br><span class="line">	$redis-&gt;rpush(<span class="string">"list"</span>,<span class="string">"test"</span>); <span class="comment">//在key对应的list的尾部添加字符串元素</span></span><br><span class="line">	$redis-&gt;lpop(<span class="string">"list"</span>);<span class="comment">//在key对应的list的头部删除字符串元素，并返回删除字符</span></span><br><span class="line">	$redis-&gt;rpop(<span class="string">"list"</span>);<span class="comment">//在key对应的list的尾部删除字符串元素，并返回删除字符</span></span><br><span class="line">	<span class="keyword">echo</span>  $redis-&gt;lrem(<span class="string">"list"</span>,<span class="number">2</span>,<span class="string">'key'</span>);<span class="comment">//在list中删除N个和value相同的元素(n&lt;0从尾删除,n=0全部删除),返回的值为删除的个数</span></span><br><span class="line">	$redis-&gt;lset(<span class="string">"list"</span>,<span class="number">-1</span>,<span class="string">"啊"</span>);<span class="comment">//设置list中指定下标的元素值 lset(list,位置，值)，位置可以从头或者从尾</span></span><br><span class="line">	$redis-&gt;lindex(<span class="string">"list"</span>,<span class="number">0</span>);<span class="comment">//返回list中index位置的元素</span></span><br><span class="line">	$redis-&gt;llen(<span class="string">"list"</span>);<span class="comment">//返回list的长度</span></span><br><span class="line">	$redis-&gt;ltrim(<span class="string">"list"</span>,<span class="number">0</span>,<span class="number">1</span>);<span class="comment">//保留指定key的值的范围内的数据 0为头  -1为尾</span></span><br><span class="line">	$redis-&gt;linsert(<span class="string">"list"</span>);<span class="comment">//********</span></span><br><span class="line">	$redis-&gt;rpoplpush(<span class="string">"list"</span>,<span class="string">"listt"</span>);<span class="comment">//从第一个LIST的尾部移除元素并添加到第二个LIST的头部</span></span><br><span class="line">	<span class="comment">//******************************list链表**********************************************************</span></span><br><span class="line">	<span class="comment">//******************************set集合**********************************************************</span></span><br><span class="line">	<span class="comment">//  Set是集合，它是string类型的无序集合。set是通过hash table实现的，添加，删除和查找的复杂程度都是0(1)</span></span><br><span class="line">	<span class="comment">//   对集合我们可以取并集，交集，差集。通过这些操作我们可以实现SNS中的好友推荐和blog的tag功能</span></span><br><span class="line">	$redis-&gt;sadd(<span class="string">"col"</span>,<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>);<span class="comment">//向集合中添加元素</span></span><br><span class="line">	$redis-&gt;smembers(<span class="string">"col"</span>);<span class="comment">//集合元素列表</span></span><br><span class="line">	$redis-&gt;srem(<span class="string">"col"</span>,<span class="string">'d'</span>);<span class="comment">//集合移除元素</span></span><br><span class="line">	$redis-&gt;spop(<span class="string">"col"</span>);<span class="comment">//随机删除集合元素并返回删除的元素。删除最后一个元素时，则集合也被删除</span></span><br><span class="line">	$redis-&gt;sdiff(<span class="string">"set1"</span>,<span class="string">"set2"</span>);<span class="comment">//取多个集合的差集，谁在前面已谁为标准（差集就是前面第一个集合有而后面所有集合都没有）</span></span><br><span class="line">	$redis-&gt;sdiffstore(<span class="string">"dif"</span>,<span class="string">"set1"</span>,<span class="string">"set2"</span>);<span class="comment">//返回多个集合的差集，存在第三个集合里面</span></span><br><span class="line">	$redis-&gt;sinter(<span class="string">"set"</span>,<span class="string">"set1"</span>,<span class="string">'set2'</span>);<span class="comment">//交集（所有集合都有的元素）</span></span><br><span class="line">	$res = $redis-&gt;sinterstore(<span class="string">"inter"</span>,<span class="string">"set"</span>,<span class="string">"set1"</span>);<span class="comment">///取多个集合的交集,存在第三个集合里面</span></span><br><span class="line">	$redis-&gt;sunion(<span class="string">"set"</span>,<span class="string">"set1"</span>,<span class="string">'set2'</span>);<span class="comment">//并集（所有集合合并去重的元素）</span></span><br><span class="line">	$redis-&gt;sunionstore(<span class="string">"union"</span>,<span class="string">"set"</span>,<span class="string">"set1"</span>);<span class="comment">///取多个集合的并集,存在第三个集合里面</span></span><br><span class="line">	$redis-&gt;smove(<span class="string">"set1"</span>,<span class="string">"set2"</span>,<span class="string">"value"</span>);<span class="comment">///第一个集合元素剪切到第二个集合里面。</span></span><br><span class="line">	$redis-&gt;scard(<span class="string">"set"</span>);<span class="comment">//返回集合中元素的个数</span></span><br><span class="line">	$redis-&gt;sismember(<span class="string">"set"</span>,<span class="string">"value"</span>);<span class="comment">//判断某个元素是否为集合的元素</span></span><br><span class="line">	$redis-&gt;srandmember(<span class="string">"set"</span>);<span class="comment">//随机返回集合内的一个元素，不会删除元素</span></span><br><span class="line"></span><br><span class="line">	$redis-&gt;keys(<span class="string">"*"</span>);   <span class="comment">//返回所有key</span></span><br><span class="line">	$redis-&gt;keys(<span class="string">"*t"</span>);   <span class="comment">//返回所有s开头的key</span></span><br><span class="line">	$res = $redis-&gt;keys(<span class="string">"*"</span>);</span><br><span class="line">		<span class="keyword">foreach</span> ($res <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">			<span class="keyword">echo</span> $v.<span class="string">"=&gt;"</span>.$redis-&gt;get($v).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	$redis-&gt;exists(<span class="string">"set"</span>);   <span class="comment">//判断该key是否存在</span></span><br><span class="line">	$redis-&gt;del(<span class="string">"inter"</span>);   <span class="comment">//删除该key</span></span><br><span class="line">	$redis-&gt;expire(<span class="string">"set2"</span>,<span class="number">100</span>);   <span class="comment">//设置key 过期时间10s</span></span><br><span class="line">	$redis-&gt;ttl(<span class="string">"set3"</span>);<span class="comment">//查看过期剩余时间s</span></span><br><span class="line"></span><br><span class="line">	$redis-&gt;select(<span class="string">"1"</span>);<span class="comment">// 选择数据库</span></span><br><span class="line">	$redis-&gt;set(<span class="string">"name"</span>,<span class="string">"test"</span>);<span class="comment">// 设置key=&gt;value</span></span><br><span class="line">	$redis-&gt;get(<span class="string">"name"</span>);<span class="comment">// 根据key获取value</span></span><br><span class="line">	$redis-&gt;move(<span class="string">"get"</span>,<span class="number">1</span>);<span class="comment">// 把key移到另一个数据库</span></span><br><span class="line">	$redis-&gt;persist(<span class="string">"set2"</span>);<span class="comment">// 移除过期时间</span></span><br><span class="line">	$redis-&gt;randomkey();<span class="comment">//随机返回一个key</span></span><br><span class="line">	$redis-&gt;rename(<span class="string">"names"</span>,<span class="string">"newname"</span>);<span class="comment">//重命名key</span></span><br><span class="line">	$redis-&gt;type(<span class="string">"zset"</span>);<span class="comment">//获取key类型</span></span><br><span class="line">	$redis-&gt;dbsize();<span class="comment">//获取数据库key个数</span></span><br><span class="line">	$redis-&gt;info();<span class="comment">//获取redis服务信息</span></span><br><span class="line">	$redis-&gt;echo(<span class="string">"hello，world"</span>);<span class="comment">//输出函数</span></span><br><span class="line">	<span class="comment">//******************************set集合**********************************************************</span></span><br><span class="line">	<span class="comment">//redis有五大数据类型</span></span><br><span class="line">	<span class="comment">//字符串 string</span></span><br><span class="line">	<span class="comment">//hash 表</span></span><br><span class="line">	<span class="comment">//链表结构 list</span></span><br><span class="line">	<span class="comment">//set 集合(无序)</span></span><br><span class="line">	<span class="comment">//zset 有序集合</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//string来存储用户的最大id,用来id的自增</span></span><br><span class="line">	<span class="comment">//hash 表来存储用户的详细信息</span></span><br><span class="line">	<span class="comment">//list链表结构来存储用户的id号</span></span><br><span class="line">	$uid = $redis-&gt;incr(<span class="string">"blog:id"</span>);  <span class="comment">//自增长</span></span><br><span class="line">	$res = $redis-&gt;hmset(<span class="string">'blog:user:'</span> . $uid, <span class="keyword">array</span>(<span class="string">'id'</span> =&gt; $uid, <span class="string">'username'</span> =&gt;<span class="string">'admin'</span>.time() . time(), <span class="string">'password'</span> =&gt; md5(time()))); <span class="comment">//hash表插入一条记录</span></span><br><span class="line">	$redis-&gt;rpush(<span class="string">"blog:uid"</span>, $uid);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	$res = $redis-&gt;hgetall(<span class="string">"blog:user:"</span>.$uid);</span><br><span class="line">	$redis-&gt;del(<span class="string">"blog:user:"</span>.$uid);<span class="comment">//删除用户</span></span><br><span class="line">	$redis-&gt;lrem(<span class="string">"blog:uid"</span>,$uid);<span class="comment">//删除链表中的id</span></span><br><span class="line">	print_R($res);<span class="keyword">die</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	$count = $redis-&gt;lsize(<span class="string">"blog:uid"</span>); <span class="comment">//list类型count总数 </span></span><br><span class="line">	$page_size = <span class="number">3</span>;</span><br><span class="line">	$page_num = !<span class="keyword">empty</span>($_GET[<span class="string">'page'</span>]) ? $_GET[<span class="string">'page'</span>] : <span class="number">1</span>;</span><br><span class="line">	$page_count = ceil($count / $page_size);</span><br><span class="line">	$ids = $redis-&gt;lrange(<span class="string">"blog:uid"</span>, ($page_num - <span class="number">1</span>) * $page_size, (($page_num - <span class="number">1</span>) * $page_size + $page_size - <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">	<span class="keyword">foreach</span> ($ids <span class="keyword">as</span> $v) &#123;</span><br><span class="line">		$ress[] = $redis-&gt;hgetall(<span class="string">"blog:user:"</span> . $v); <span class="comment">//获取记录</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">echo</span><span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">	print_r($ress);</span><br></pre></td></tr></table></figure><p></p><p>原文链接:<br><a href="https://www.jianshu.com/p/c1c798828477" title="php操作redis笔记！" target="_blank" rel="noopener">php操作redis笔记！</a></p>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>laravel-admin安装</title>
    <url>/posts/16eb654d/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1.5版本需要安装PHP 7+和Laravel 5.5</p><p>首先确保安装好了laravel，并且数据库连接设置正确。<br><a id="more"></a><br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">composer <span class="keyword">require</span> encore/laravel-admin <span class="string">"1.5.*"</span></span><br></pre></td></tr></table></figure><p></p><p>然后运行下面的命令来发布资源：<br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php artisan vendor:publish --provider=<span class="string">"Encore\Admin\AdminServiceProvider"</span></span><br></pre></td></tr></table></figure><p></p><p>在该命令会生成配置文件config/admin.php，可以在里面修改安装的地址、数据库连接、以及表名，都可以用默认配置不修改。</p><p>然后运行下面的命令完成安装：<br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php artisan admin:install</span><br></pre></td></tr></table></figure><p></p><p>启动服务后，在浏览器打开 <code>http://localhost/admin/</code> ,使用用户名 <code>admin</code> 和密码 <code>admin</code>登陆.<br>ps 如果报一下错误<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Specified key was too long error</span><br></pre></td></tr></table></figure><p></p><p>需要在<code>/app/Providers/AppServiceProvider.php</code>文件中修改<br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Providers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\&#123;</span><br><span class="line">    <span class="title">ServiceProvider</span>,</span><br><span class="line">    <span class="title">Facades</span>\<span class="title">Schema</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppServiceProvider</span> <span class="keyword">extends</span> <span class="title">ServiceProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Schema::defaultStringLength(<span class="number">191</span>);</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>laravel</tag>
        <tag>laravel-admin</tag>
      </tags>
  </entry>
  <entry>
    <title>Hash索引和B-Tree索引</title>
    <url>/posts/294f33b7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>索引是帮助mysql获取数据的数据结构。最常见的索引是Btree索引和Hash索引。</p><p>不同的引擎对于索引有不同的支持：Innodb和MyISAM默认的索引是Btree索引；而Mermory默认的索引是Hash索引。<br><a id="more"></a><br>原文链接：<br><a href="https://blog.csdn.net/u014307117/article/details/47325091" title="Hash索引和BTree索引" target="_blank" rel="noopener">Hash索引和BTree索引</a></p><h3 id="Hash索引"><a href="#Hash索引" class="headerlink" title="Hash索引"></a>Hash索引</h3><p>所谓Hash索引，当我们要给某张表某列增加索引时，将这张表的这一列进行哈希算法计算，得到哈希值，排序在哈希数组上。所以Hash索引可以一次定位，其效率很高，而Btree索引需要经过多次的磁盘IO，但是innodb和myisam之所以没有采用它，是因为它存在着好多缺点：<br>因为Hash索引比较的是经过Hash计算的值，所以只能进行等式比较，不能用于范围查询</p><ul><li>每次都要全表扫描</li><li>由于哈希值是按照顺序排列的，但是哈希值映射的真正数据在哈希表中就不一定按照顺序排列，所以无法利用Hash索引来加速任何排序操作</li><li>不能用部分索引键来搜索，因为组合索引在计算哈希值的时候是一起计算的。</li><li>当哈希值大量重复且数据量非常大时，其检索效率并没有Btree索引高的。</li></ul><h3 id="B-Tree索引"><a href="#B-Tree索引" class="headerlink" title="B-Tree索引"></a>B-Tree索引</h3><p>至于Btree索引，它是以B+树为存储结构实现的。</p><p>但是Btree索引的存储结构在Innodb和MyISAM中有很大区别。</p><p>在MyISAM中，我们如果要对某张表的某列建立Btree索引的话，如图：<br><img src="https://img-blog.csdn.net/20150806231335315"><br>所以我们经常会说MyISAM中数据文件和索引文件是分开的。</p><p>因此MyISAM的索引方式也称为非聚集，Innodb的索引方式成为聚集索引。</p><p>至于辅助索引，类似于主索引，唯一区别就是主索引上的值不能重复，而辅助索引可以重复。</p>]]></content>
      <tags>
        <tag>MySQL</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>sar 找出系统瓶颈的利器</title>
    <url>/posts/3d56cf7f/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>sar是System Activity Reporter（系统活动情况报告）的缩写。sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当前运行状态。它的特点是可以连续对系统取样，获得大量的取样数据；取样数据和分析的结果都可以存入文件，所需的负载很小。sar是目前Linux上最为全面的系统性能分析工具之一，可以从14个大方面对系统的活动进行报告，包括文件的读写情况、系统调用的使用情况、串口、CPU效率、内存使用状况、进程活动及IPC有关的活动等，使用也是较为复杂。<br><a id="more"></a><br>原文链接:<br><a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/sar.html" title="sar 找出系统瓶颈的利器" target="_blank" rel="noopener">sar 找出系统瓶颈的利器</a><br>sar是查看操作系统报告指标的各种工具中，最为普遍和方便的；它有两种用法；</p><ol><li>追溯过去的统计数据（默认）</li><li>周期性的查看当前数据<h3 id="查看CPU使用率"><a href="#查看CPU使用率" class="headerlink" title="查看CPU使用率"></a>查看CPU使用率</h3><code>sar -u</code> 默认情况下显示的cpu使用率等信息就是<code>sar -u</code>;<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@lilis ~]# sar -u</span><br><span class="line">Linux 3.10.0-862.9.1.el7.x86_64 (lilis) 	08/23/2018 	_x86_64_	(1 CPU)</span><br><span class="line"></span><br><span class="line">12:00:01 AM     CPU     %user     %nice   %system   %iowait    %steal     %idle</span><br><span class="line">12:10:01 AM     all      0.85      0.00      0.29      0.04      0.00     98.83</span><br><span class="line">12:20:01 AM     all      1.63      0.00      0.34      0.07      0.00     97.96</span><br><span class="line">12:30:01 AM     all      0.73      0.00      0.25      0.04      0.00     98.98</span><br><span class="line">12:40:01 AM     all      0.28      0.00      0.25      0.01      0.00     99.46</span><br><span class="line">12:50:01 AM     all      0.31      0.00      0.26      0.01      0.00     99.43</span><br><span class="line">01:00:01 AM     all      1.63      0.00      0.34      0.10      0.00     97.94</span><br><span class="line">01:10:01 AM     all      0.66      0.00      0.29      0.03      0.00     99.02</span><br><span class="line">01:20:01 AM     all      1.27      0.00      0.30      0.06      0.00     98.37</span><br><span class="line">01:30:01 AM     all      0.29      0.00      0.27      0.01      0.00     99.44</span><br></pre></td></tr></table></figure></li></ol><ul><li>%user 用户模式下消耗的CPU时间的比例；</li><li>%nice 通过nice改变了进程调度优先级的进程，在用户模式下消耗的CPU时间的比例</li><li>%system 系统模式下消耗的CPU时间的比例；</li><li>%iowait CPU等待磁盘I/O导致空闲状态消耗的时间比例；</li><li>%steal 利用Xen等操作系统虚拟化技术，等待其它虚拟CPU计算占用的时间比例；</li><li><p>%idle CPU空闲时间比例；</p><h3 id="查看平均负载"><a href="#查看平均负载" class="headerlink" title="查看平均负载"></a>查看平均负载</h3><p><code>sar -q</code> 查看平均负载<br>指定-q后，就能查看运行队列中的进程数、系统上的进程大小、平均负载等；与其它命令相比，它能查看各项指标随时间变化的情况；</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@lilis ~]# sar -q</span><br><span class="line">Linux 3.10.0-862.9.1.el7.x86_64 (lilis) 	08/23/2018 	_x86_64_	(1 CPU)</span><br><span class="line"></span><br><span class="line">12:00:01 AM   runq-sz  plist-sz   ldavg-1   ldavg-5  ldavg-15   blocked</span><br><span class="line">12:10:01 AM         3       187      0.00      0.02      0.05         0</span><br><span class="line">12:20:01 AM         4       190      0.06      0.03      0.05         0</span><br><span class="line">12:30:01 AM         4       187      0.00      0.01      0.05         1</span><br><span class="line">12:40:01 AM         3       187      0.00      0.01      0.05         0</span><br><span class="line">12:50:01 AM         3       187      0.07      0.10      0.08         1</span><br><span class="line">01:00:01 AM         2       190      0.24      0.08      0.06         0</span><br><span class="line">01:10:01 AM         2       187      0.08      0.03      0.05         0</span><br><span class="line">01:20:01 AM         1       187      0.00      0.03      0.05         1</span><br><span class="line">01:30:01 AM         3       187      0.00      0.01      0.05         0</span><br><span class="line">01:40:01 AM         2       187      0.01      0.03      0.05         1</span><br><span class="line">01:50:01 AM         3       187      0.00      0.01      0.05         1</span><br><span class="line">02:00:01 AM         2       187      0.00      0.01      0.05         0</span><br><span class="line">02:10:01 AM         3       190      0.00      0.04      0.05         0</span><br></pre></td></tr></table></figure></li><li><p>runq-sz：运行队列的长度（等待运行的进程数）</p></li><li>plist-sz：进程列表中进程（processes）和线程（threads）的数量</li><li>ldavg-1：最后1分钟的系统平均负载 ldavg-5：过去5分钟的系统平均负载</li><li><p>ldavg-15：过去15分钟的系统平均负载</p><h3 id="查看页面交换发生状况"><a href="#查看页面交换发生状况" class="headerlink" title="查看页面交换发生状况"></a>查看页面交换发生状况</h3><p><code>sar -W</code> 查看页面交换发生状况<br>页面发生交换时，服务器的吞吐量会大幅下降；服务器状况不良时，如果怀疑因为内存不足而导致了页面交换的发生，可以使用这个命令来确认是否发生了大量的交换；</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@lilis ~]# sar -W 1 10</span><br><span class="line">Linux 3.10.0-862.9.1.el7.x86_64 (lilis) 	08/23/2018 	_x86_64_	(1 CPU)</span><br><span class="line"></span><br><span class="line">11:43:35 AM  pswpin/s pswpout/s</span><br><span class="line">11:43:36 AM      0.00      0.00</span><br><span class="line">11:43:37 AM      0.00      0.00</span><br><span class="line">11:43:38 AM      0.00      0.00</span><br><span class="line">11:43:39 AM      0.00      0.00</span><br><span class="line">11:43:40 AM      0.00      0.00</span><br><span class="line">11:43:41 AM      0.00      0.00</span><br><span class="line">11:43:42 AM      0.00      0.00</span><br><span class="line">11:43:43 AM      0.00      0.00</span><br><span class="line">11:43:44 AM      0.00      0.00</span><br><span class="line">11:43:45 AM      0.00      0.00</span><br><span class="line">Average:         0.00      0.00</span><br></pre></td></tr></table></figure></li><li><p>pswpin/s：每秒系统换入的交换页面（swap page）数量</p></li><li><p>pswpout/s：每秒系统换出的交换页面（swap page）数量<br>要判断系统瓶颈问题，有时需几个 sar 命令选项结合起来；</p></li><li><p>怀疑CPU存在瓶颈，可用 sar -u 和 sar -q 等来查看</p></li><li>怀疑内存存在瓶颈，可用sar -B、sar -r 和 sar -W 等来查看</li><li>怀疑I/O存在瓶颈，可用 sar -b、sar -u 和 sar -d 等来查看<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3>有的linux系统下，默认可能没有安装这个包，使用<code>yum install sysstat</code> 来安装；<br>安装完毕，将性能收集工具的开关打开： <code>vim /etc/default/sysstat</code><br>设置 ENABLED=”true”<h3 id="sar参数说明"><a href="#sar参数说明" class="headerlink" title="sar参数说明"></a>sar参数说明</h3></li><li>-A 汇总所有的报告</li><li>-a 报告文件读写使用情况</li><li>-B 报告附加的缓存的使用情况</li><li>-b 报告缓存的使用情况</li><li>-c 报告系统调用的使用情况</li><li>-d 报告磁盘的使用情况</li><li>-g 报告串口的使用情况</li><li>-h 报告关于buffer使用的统计数据</li><li>-m 报告IPC消息队列和信号量的使用情况</li><li>-n 报告命名cache的使用情况</li><li>-p 报告调页活动的使用情况</li><li>-q 报告运行队列和交换队列的平均长度</li><li>-R 报告进程的活动情况</li><li>-r 报告没有使用的内存页面和硬盘块</li><li>-u 报告CPU的利用率</li><li>-v 报告进程、i节点、文件和锁表状态</li><li>-w 报告系统交换活动状况</li><li>-y 报告TTY设备活动状况</li></ul>]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>scp 跨机远程拷贝</title>
    <url>/posts/e90a0b6e/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>scp是secure copy的简写，用于在Linux下进行远程拷贝文件的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的。当你服务器硬盘变为只读 read only system时，用scp可以帮你把文件移出来。<br><a id="more"></a><br>原文链接:<br><a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/scp.html" title="scp 跨机远程拷贝" target="_blank" rel="noopener">scp 跨机远程拷贝</a></p><h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp [参数] [原路径] [目标路径]</span><br></pre></td></tr></table></figure><h3 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h3><ol><li>-1 强制scp命令使用协议ssh1</li><li>-2 强制scp命令使用协议ssh2</li><li>-4 强制scp命令只使用IPv4寻址</li><li>-6 强制scp命令只使用IPv6寻址</li><li>-B 使用批处理模式（传输过程中不询问传输口令或短语）</li><li>-C 允许压缩。（将-C标志传递给ssh，从而打开压缩功能）</li><li>-p 留原文件的修改时间，访问时间和访问权限。</li><li>-q 不显示传输进度条。</li><li>-r 递归复制整个目录。</li><li>-v 详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。</li><li>-c cipher 以cipher将数据传输进行加密，这个选项将直接传递给ssh。</li><li>-F ssh_config 指定一个替代的ssh配置文件，此参数直接传递给ssh。</li><li>-i identity_file 从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。</li><li>-l limit 限定用户所能使用的带宽，以Kbit/s为单位。</li><li>-o ssh_option 如果习惯于使用ssh_config(5)中的参数传递方式，</li><li>-P port 注意是大写的P, port是指定数据传输用到的端口号</li><li>-S program 指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。<h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp local_file remote_username@remote_ip:remote_folder</span><br><span class="line">scp remote_username@remote_ip:remote_folder local_file</span><br><span class="line">scp remote_username@remote_ip:remote_folder remote_username@remote_ip:remote_folder</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>WordPress获取文章所有信息</title>
    <url>/posts/9cdcaf4d/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>首先得得知当前请求的文章ID：<br><a id="more"></a><br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">get_the_ID();  <span class="comment">//会返回当前文章ID</span></span><br></pre></td></tr></table></figure><p></p><p>那么我们得知文章ID后，可以使用wordpress内置函数来获取文章的所有信息:<br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">get_post($id); <span class="comment">//会返回id文章的所有信息</span></span><br></pre></td></tr></table></figure><p></p><p>获取到了些什么信息，我们可以看看获取的结果意义，可以得到你想要的文章任何信息：<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">post_author：（整数）文章作者的编号</span><br><span class="line"></span><br><span class="line">post_date：（字符）文章发表的日期和时间（YYYY-MM-DD HH-MM-SS）</span><br><span class="line"></span><br><span class="line">post_date_gmt：（字符）文章发表的格林尼治标准时间（GMT） （YYYY-MM-DD HH-MM-SS）</span><br><span class="line"></span><br><span class="line">post_content：（字符）文章内容</span><br><span class="line"></span><br><span class="line">post_title：（字符）文章标题</span><br><span class="line"></span><br><span class="line">post_category：（整数）文章类别的编号。注意：该值在WordPress 2.1之后的版本总为0。定义文章的类别时可使用 get_the_category（）函数。</span><br><span class="line"></span><br><span class="line">post_excerpt：（字符）文章摘要</span><br><span class="line"></span><br><span class="line">post_status：（字符）文章状态（publish|pending|draft|private|static|object|attachment|inherit|future）</span><br><span class="line"></span><br><span class="line">comment_status：（字符）评论状态（open|closed|registered_only）</span><br><span class="line"></span><br><span class="line">ping_status：（字符）pingback/trackback状态（open|closed）</span><br><span class="line"></span><br><span class="line">post_password：（字符）文章密码</span><br><span class="line"></span><br><span class="line">post_name：（字符）文章的URL嵌套</span><br><span class="line"></span><br><span class="line">to_ping：（字符）要引用的URL链接</span><br><span class="line"></span><br><span class="line">pinged：（字符）引用过的链接</span><br><span class="line"></span><br><span class="line">post_modified：（字符）文章最后修改时间（YYYY-MM-DD HH-MM-SS）</span><br><span class="line"></span><br><span class="line">post_modified_gmt：（字符）文章最后修改GMT时间（YYYY-MM-DD HH-MM-SS）</span><br><span class="line"></span><br><span class="line">post_parent：（整数）父级文章编号（供附件等）</span><br><span class="line">	</span><br><span class="line">guid：（字符）文章的一个链接。注意：不能将GUID作为永久链接（虽然在2.5之前的版本中它的确被当作永久链接），也不能将它作为文章的可用链接。GUID是一种独有的标识符，只是目前恰巧成为文章的一个链接。</span><br><span class="line">	</span><br><span class="line">post_type：（字符）（日志 | 页面 | 附件）</span><br><span class="line">	</span><br><span class="line">post_mime_type：（字符）Mime类型（供附件等）</span><br><span class="line">	</span><br><span class="line">comment_count：（整数）评论总数</span><br></pre></td></tr></table></figure><p></p><p>原文链接:<br><a href="http://www.cleey.com/blog/single/id/508.html" title="WordPress获取文章所有信息" target="_blank" rel="noopener">WordPress获取文章所有信息</a></p>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>WordPress</tag>
      </tags>
  </entry>
  <entry>
    <title>centos修改Hostname</title>
    <url>/posts/e0a8795/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>hostname主要用于区分自己所连接的服务器<br>当自己连接在多台服务器是不至于只能看ip区分服务器<br><a id="more"></a><br>临时修改hostname:<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hostname lilis</span><br></pre></td></tr></table></figure><p></p><p>永久修改hostname<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/network</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改或添加</span></span><br><span class="line"> HOSTNAME=lilis</span><br></pre></td></tr></table></figure><p></p>]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ps 进程查看器</title>
    <url>/posts/f1c6d624/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ps-进程查看器"><a href="#ps-进程查看器" class="headerlink" title="ps 进程查看器"></a>ps 进程查看器</h2><p>Linux中的ps命令是Process Status的缩写。ps命令用来列出系统中当前运行的那些进程。ps命令列出的是当前那些进程的快照，就是执行ps命令的那个时刻的那些进程，如果想要动态的显示进程信息，就可以使用top命令。</p><p>要对进程进行监测和控制，首先必须要了解当前进程的情况，也就是需要查看当前进程，而 ps 命令就是最基本同时也是非常强大的进程查看命令。使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等。总之大部分信息都是可以通过执行该命令得到的。<br><a id="more"></a></p><p>ps 为我们提供了进程的一次性的查看，它所提供的查看结果并不动态连续的；如果想对进程时间监控，应该用 top linux下的任务管理器 工具。</p><p>注：kill -9 命令用于杀死进程。<br>原文地址:<br><a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/ps.html" title="ps 进程查看器" target="_blank" rel="noopener">ps 进程查看器</a></p><h3 id="linux上进程有5种状态"><a href="#linux上进程有5种状态" class="headerlink" title="linux上进程有5种状态:"></a>linux上进程有5种状态:</h3><p>运行(正在运行或在运行队列中等待)<br>中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)<br>不可中断(收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)<br>僵死(进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放)<br>停止(进程收到SIGSTOP, SIGTSTP, SIGTTIN, SIGTTOU信号后停止运行运行)<br>ps工具标识进程的5种状态码:</p><ol><li>D 不可中断 uninterruptible sleep (usually IO)</li><li>R 运行 runnable (on run queue)</li><li>S 中断 sleeping</li><li>T 停止 traced or stopped</li><li>Z 僵死 a defunct (”zombie”) process<h3 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h3></li><li>a 显示所有进程</li><li>-a 显示同一终端下的所有程序</li><li>-A 显示所有进程</li><li>c 显示进程的真实名称</li><li>-N 反向选择</li><li>-e 等于“-A”</li><li>e 显示环境变量</li><li>f 显示程序间的关系</li><li>-H 显示树状结构</li><li>r 显示当前终端的进程</li><li>T 显示当前终端的所有程序</li><li>u 指定用户的所有进程</li><li>-au 显示较详细的资讯</li><li>-aux 显示所有包含其他使用者的行程</li><li>-C&lt;命令&gt; 列出指定命令的状况</li><li>–lines&lt;行数&gt; 每页显示的行数</li><li>–width&lt;字符数&gt; 每页显示的字符数</li><li>–help 显示帮助信息</li><li>–version 显示版本显示<h3 id="输出列的含义"><a href="#输出列的含义" class="headerlink" title="输出列的含义"></a>输出列的含义</h3></li><li>F 代表这个程序的旗标 (flag)， 4 代表使用者为 super user</li><li>S 代表这个程序的状态 (STAT)，关于各 STAT 的意义将在内文介绍</li><li>UID 程序被该 UID 所拥有</li><li>PID 进程的ID</li><li>PPID 则是其上级父程序的ID</li><li>C CPU 使用的资源百分比</li><li>PRI 这个是 Priority (优先执行序) 的缩写，详细后面介绍</li><li>NI 这个是 Nice 值，在下一小节我们会持续介绍</li><li>ADDR 这个是 kernel function，指出该程序在内存的那个部分。如果是个 running的程序，一般就是 “-“</li><li>SZ 使用掉的内存大小</li><li>WCHAN 目前这个程序是否正在运作当中，若为 - 表示正在运作</li><li>TTY 登入者的终端机位置</li><li>TIME 使用掉的 CPU 时间。</li><li>CMD 所下达的指令为何<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h4 id="显示所有进程信息"><a href="#显示所有进程信息" class="headerlink" title="显示所有进程信息"></a>显示所有进程信息</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@lilis ~]# ps -A</span><br><span class="line">  PID TTY          TIME CMD</span><br><span class="line">    1 ?        00:00:02 systemd</span><br><span class="line">    2 ?        00:00:00 kthreadd</span><br><span class="line">    3 ?        00:00:00 ksoftirqd/0</span><br><span class="line">    5 ?        00:00:00 kworker/0:0H</span><br><span class="line">    7 ?        00:00:00 migration/0</span><br><span class="line">    8 ?        00:00:00 rcu_bh</span><br><span class="line">    9 ?        00:00:03 rcu_sched</span><br><span class="line">   10 ?        00:00:00 lru-add-drain</span><br></pre></td></tr></table></figure></li></ol><h4 id="显示指定用户信息"><a href="#显示指定用户信息" class="headerlink" title="显示指定用户信息"></a>显示指定用户信息</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@lilis ~]# ps -u root</span><br><span class="line">  PID TTY          TIME CMD</span><br><span class="line">    1 ?        00:00:02 systemd</span><br><span class="line">    2 ?        00:00:00 kthreadd</span><br><span class="line">    3 ?        00:00:00 ksoftirqd/0</span><br><span class="line">    5 ?        00:00:00 kworker/0:0H</span><br><span class="line">    7 ?        00:00:00 migration/0</span><br><span class="line">    8 ?        00:00:00 rcu_bh</span><br><span class="line">    9 ?        00:00:03 rcu_sched</span><br><span class="line">   10 ?        00:00:00 lru-add-drain</span><br></pre></td></tr></table></figure><h4 id="显示所有进程信息，连同命令行"><a href="#显示所有进程信息，连同命令行" class="headerlink" title="显示所有进程信息，连同命令行"></a>显示所有进程信息，连同命令行</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@lilis ~]# ps -ef</span><br><span class="line">UID        PID  PPID  C STIME TTY          TIME CMD</span><br><span class="line">root         1     0  0 Aug16 ?        00:00:02 /usr/lib/systemd/systemd --switched-root --system --deserialize 22</span><br><span class="line">root         2     0  0 Aug16 ?        00:00:00 [kthreadd]</span><br><span class="line">root         3     2  0 Aug16 ?        00:00:00 [ksoftirqd/0]</span><br><span class="line">root         5     2  0 Aug16 ?        00:00:00 [kworker/0:0H]</span><br><span class="line">root         7     2  0 Aug16 ?        00:00:00 [migration/0]</span><br><span class="line">root         8     2  0 Aug16 ?        00:00:00 [rcu_bh]</span><br><span class="line">root         9     2  0 Aug16 ?        00:00:03 [rcu_sched]</span><br><span class="line">root        10     2  0 Aug16 ?        00:00:00 [lru-add-drain]</span><br></pre></td></tr></table></figure><h4 id="ps-与grep-组合使用，查找特定进程"><a href="#ps-与grep-组合使用，查找特定进程" class="headerlink" title="ps 与grep 组合使用，查找特定进程"></a>ps 与grep 组合使用，查找特定进程</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@lilis ~]# ps -ef | grep php</span><br><span class="line">root       899     1  0 Aug16 ?        00:00:03 php-fpm: master process (/usr/local/php/php71/etc/php-fpm.conf)</span><br><span class="line">www        900   899  0 Aug16 ?        00:00:00 php-fpm: pool www</span><br><span class="line">www        901   899  0 Aug16 ?        00:00:00 php-fpm: pool www</span><br><span class="line">root       906     1  0 Aug16 ?        00:00:03 php-fpm: master process (/usr/local/php/php56/etc/php-fpm.conf)</span><br><span class="line">www        907   906  0 Aug16 ?        00:00:00 php-fpm: pool www</span><br><span class="line">www        908   906  0 Aug16 ?        00:00:00 php-fpm: pool www</span><br><span class="line">root      3801     1  0 16:59 ?        00:00:00 php-fpm: master process (/usr/local/php/php72/etc/php-fpm.conf)</span><br><span class="line">www       3803  3801  0 16:59 ?        00:00:01 php-fpm: pool www</span><br><span class="line">www       3908  3801  0 17:02 ?        00:00:01 php-fpm: pool www</span><br><span class="line">www       4137  3801  0 17:08 ?        00:00:00 php-fpm: pool www</span><br><span class="line">root      4173 18277  0 17:09 pts/0    00:00:00 grep --color=auto php</span><br></pre></td></tr></table></figure><h4 id="将与这次登入的-PID-与相关信息列示出来"><a href="#将与这次登入的-PID-与相关信息列示出来" class="headerlink" title="将与这次登入的 PID 与相关信息列示出来"></a>将与这次登入的 PID 与相关信息列示出来</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@lilis ~]# ps -l</span><br><span class="line">F S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD</span><br><span class="line">0 R     0  4334 18277  0  80   0 - 38292 -      pts/0    00:00:00 ps</span><br><span class="line">4 S     0 18277 18275  0  80   0 - 28892 do_wai pts/0    00:00:00 bash</span><br></pre></td></tr></table></figure><h4 id="列出目前所有的正在内存中的程序"><a href="#列出目前所有的正在内存中的程序" class="headerlink" title="列出目前所有的正在内存中的程序"></a>列出目前所有的正在内存中的程序</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@lilis ~]# ps aux</span><br><span class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root         1  0.0  0.2  43416  2500 ?        Ss   Aug16   0:02 /usr/lib/systemd/systemd --switched-root --system --deserialize 22</span><br><span class="line">root         2  0.0  0.0      0     0 ?        S    Aug16   0:00 [kthreadd]</span><br><span class="line">root         3  0.0  0.0      0     0 ?        S    Aug16   0:00 [ksoftirqd/0]</span><br><span class="line">root         5  0.0  0.0      0     0 ?        S&lt;   Aug16   0:00 [kworker/0:0H]</span><br><span class="line">root         7  0.0  0.0      0     0 ?        S    Aug16   0:00 [migration/0]</span><br><span class="line">root         8  0.0  0.0      0     0 ?        S    Aug16   0:00 [rcu_bh]</span><br><span class="line">root         9  0.0  0.0      0     0 ?        R    Aug16   0:03 [rcu_sched]</span><br><span class="line">root        10  0.0  0.0      0     0 ?        S&lt;   Aug16   0:00 [lru-add-drain]</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>PHP的非swoole异步操作</title>
    <url>/posts/398018bd/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在前几天对WordPress进行同步更新文章的改造之后,每次更新文章都需要花费较长的时间,这很显然是不合理的.<br>更新文章主要都把时间花费在了一条shell指令上面.<br><a id="more"></a><br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">exec(<span class="string">'cd 目录 &amp;&amp; hexo clean &amp;&amp; hexo d &amp;&amp; pm2 reload app'</span>);</span><br></pre></td></tr></table></figure><p></p><p>引用原文地址:</p><ol><li><a href="http://www.laruence.com/2008/04/14/318.html" title="PHP实现异步调用方法研究" target="_blank" rel="noopener">PHP实现异步调用方法研究</a></li><li><a href="https://www.jianshu.com/p/3f8a43b22dd8" title="PHP异步的的玩法" target="_blank" rel="noopener">PHP异步的的玩法</a><h3 id="先说说鸟哥文章中的几种玩法："><a href="#先说说鸟哥文章中的几种玩法：" class="headerlink" title="先说说鸟哥文章中的几种玩法："></a>先说说鸟哥文章中的几种玩法：</h3></li><li><p>通过渲染前端页面，使用js执行Ajax，这种方式现在还适用。只是受限于业务场景，因为只能在浏览器中调用，遇到接口请求就不行了。</p></li><li><p>通过popen()方法打开一个指向进程的管道，每个请求会多起一个进程。忽略进程来看最主要的原因是数据的传输特别不方便，使用场景有限。</p></li><li><p>使用CURL扩展，通过设置timeout超时参数，能实现离弦之箭的效果。不过这种方法会主动断开连接。被调用的服务如果有做连接检测，也会中断服务端脚本的执行。比如我们请求 微信的某个费时接口（20s），我们调用1s就断开连接，微信端是否会维持请求执行20S是不可控的。所以在curl别的网站的时候这种方法不推荐大家使用，但如果只是curl自己还是很好用的。</p></li><li><p>与CURL类似，通过fsockopen创建socket连接访问远程服务，不循环获取请求结果。一样会有三中连接被断开的问题。</p></li></ol><h3 id="PHP关于异步的改进"><a href="#PHP关于异步的改进" class="headerlink" title="PHP关于异步的改进"></a>PHP关于异步的改进</h3><ol><li><p>CURL扩展已支持毫秒配置，将 CURLOPT_TIMEOUT 改为 CURLOPT_TIMEOUT_MS 即可生效（cURL 版本 &gt;= libcurl/7.21.0，老服务器要检查版本），但还是我前面说的需要服务端配合，不然接口的调用成功失败不可控。</p></li><li><p>CURL扩展已支持并发，我们能一次访问N个接口，执行时间取最长接口的时间。比如我们能一次访问 京东支付（1s），微信支付(1.2s)，支付宝(0.8s)不同服务的三个接口,总耗时才1.2s。详细用法 curl_multi_init</p></li><li><p>类似Node.js的异步IO框架Swoole，能很好的实现异步调用；不过Swoole理论上不能算PHP框架，他算是PHP功能的扩展。所以除非项目都用Swoole写，不然也是享受不到异步IO的福利。</p></li><li><p>对yield的支持，能实现调度器的功能，写单进程的服务时能大展拳脚，特别是实现协程，异步更不在话下。不过在多进程的web服务上没有太大的使用场景，看未来会不会有新的玩法吧。</p></li></ol><h3 id="关于web异步的解决方案"><a href="#关于web异步的解决方案" class="headerlink" title="关于web异步的解决方案"></a>关于web异步的解决方案</h3><p>这个主要是针对那些需要异步而且并不太看中异步操作的结果的特殊场景</p><ol><li>curl配合较短的等待时间.</li><li>写一个swoole项目,需要异步时发送相应指令到相关端口</li><li>使用以下插件<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Arrow</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> $instance;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> static</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == Arrow::$instance)</span><br><span class="line">            Arrow::$instance = <span class="keyword">new</span> Arrow();</span><br><span class="line">        <span class="keyword">return</span> Arrow::$instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">($rb)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        $pid = pcntl_fork();</span><br><span class="line">        <span class="keyword">if</span>($pid &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            pcntl_wait($status);</span><br><span class="line">        &#125;<span class="keyword">elseif</span>($pid == <span class="number">0</span>)&#123;</span><br><span class="line">            $cid = pcntl_fork();</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>($cid == <span class="number">0</span>)&#123;</span><br><span class="line">                $rb();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*调用</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">$time_out = <span class="number">30</span>;</span><br><span class="line">Arrow::getInstance()-&gt;run(<span class="function"><span class="keyword">function</span><span class="params">()</span> <span class="title">use</span> <span class="params">($time_out)</span></span>&#123;</span><br><span class="line">    <span class="comment">//这里写我们要执行的代码</span></span><br><span class="line">    sleep($time_out);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><p>最终事实证明还是curl稳定,通过pcntl_fork()拉出的子进程和孙进程会影响到web的正常返回</p>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>异步</tag>
      </tags>
  </entry>
  <entry>
    <title>WordPress使用前置钩子同步文章更新到hexo</title>
    <url>/posts/c84bbf5b/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WordPress使用前置钩子同步文章更新到hexo"><a href="#WordPress使用前置钩子同步文章更新到hexo" class="headerlink" title="WordPress使用前置钩子同步文章更新到hexo"></a>WordPress使用前置钩子同步文章更新到hexo</h2><p>这是借助WordPress的钩子系统来实现的操作<br><a id="more"></a><br>由于WordPress官方对定义钩子的位置设定不够明确,我就自己在<code>/wp-admin/post.php</code>文件位置自己做了一个引入<br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 引入hooks文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">include</span> dirname( <span class="keyword">__FILE__</span> ) . <span class="string">'/user/hooks.php'</span>;</span><br></pre></td></tr></table></figure><p></p><p>并且在<code>/wp-admin/user/</code>下新建了一个<code>hooks.php</code>文件.<br>这样前期钩子的准备就准备好了<br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">add_action( <span class="string">'save_post'</span>, <span class="string">'usr_admin_add_content_before'</span>, $priority = <span class="number">10</span>, $accepted_args =<span class="number">1</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加文章的前置钩子</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">usr_admin_add_content_before</span><span class="params">($post_ID)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	$hexoRoot = <span class="string">''</span>;<span class="comment">//这里填写自己的hexo路径</span></span><br><span class="line">	$more	  = <span class="string">''</span>;<span class="comment">//由于WordPress没有more标签,这里填写自己自定义的替换more标签用的标签</span></span><br><span class="line">    $content  = get_post($post_ID);</span><br><span class="line">    $path     = $hexoRoot</span><br><span class="line">              . <span class="string">'/source/_posts'</span></span><br><span class="line">              . <span class="string">'/'</span>.date(<span class="string">'Y-m-d'</span>,</span><br><span class="line">                strtotime($content-&gt;post_date))</span><br><span class="line">              . preg_replace(<span class="string">'/[\x&#123;4e00&#125;-\x&#123;9fa5&#125;]+/u'</span>,</span><br><span class="line">                            <span class="string">'-'</span>,</span><br><span class="line">                            $content-&gt;post_title)</span><br><span class="line">              . <span class="string">'.md'</span>;</span><br><span class="line">    $title    = $content-&gt;post_title;</span><br><span class="line">    $url      = $post_ID.<span class="string">'.com'</span>;</span><br><span class="line">    $id       = $post_ID;</span><br><span class="line">    $date     = $content-&gt;post_date;</span><br><span class="line"></span><br><span class="line">    $category = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (get_the_category($post_ID) <span class="keyword">as</span> $v)</span><br><span class="line">    &#123;</span><br><span class="line">        $category .= <span class="string">'</span></span><br><span class="line"><span class="string">  - '</span>.$v-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $tags     = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (wp_get_post_tags($post_ID) <span class="keyword">as</span> $v)</span><br><span class="line">    &#123;</span><br><span class="line">        $tags .= <span class="string">'</span></span><br><span class="line"><span class="string">  - '</span>.$v-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//这里填more标签</span></span><br><span class="line">    $content = str_replace($more, <span class="string">'&lt;!--more--&gt;'</span>, $content-&gt;post_content_filtered);</span><br><span class="line">    $con = <span class="string">&lt;&lt;&lt;con</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">title: <span class="subst">$title</span></span></span><br><span class="line"><span class="string">tags: <span class="subst">$tags</span></span></span><br><span class="line"><span class="string">url: <span class="subst">$url</span></span></span><br><span class="line"><span class="string">id: <span class="subst">$id</span></span></span><br><span class="line"><span class="string">categories: <span class="subst">$category</span></span></span><br><span class="line"><span class="string">date: <span class="subst">$date</span></span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string"><span class="subst">$content</span></span></span><br><span class="line"><span class="string">con;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(file_exists($path))&#123;</span><br><span class="line">        unlink($path);</span><br><span class="line">    &#125;</span><br><span class="line">    file_put_contents($path, $con);</span><br><span class="line"></span><br><span class="line">    $reload = <span class="string">'cd $hexoRoot &amp;&amp;'</span><span class="comment">//这里填写需要执行的hexo命令</span></span><br><span class="line">            . <span class="string">' hexo clean &amp;&amp;'</span></span><br><span class="line">            . <span class="string">' hexo d &amp;&amp;'</span></span><br><span class="line">            . <span class="string">' pm2 reload app'</span>;</span><br><span class="line">    exec($reload);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>WordPress</tag>
      </tags>
  </entry>
  <entry>
    <title>WordPress使用pjax</title>
    <url>/posts/a474e038/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>借助pjax可以使一个网页的所有页面变成单页面搞定一切的模式,同时还能让页面中的一些小部件不受用户切换页面的影响 首先是引入pjax</p><a id="more"></a><pre><code>&lt;script src=&apos;https://cdnjs.cloudflare.com/ajax/libs/jquery.pjax/2.0.1/jquery.pjax.min.js&apos;&gt;&lt;/script&gt;
</code></pre><p>调用pjax</p><pre><code>$(document).pjax(&apos;a[href^=&quot;https://blog.lilis.xin&quot;]:not(a[target=&quot;_blank&quot;], a[no-pjax])&apos;, {
       container: &apos;#page&apos;,//需要刷新的标签
       fragment: &apos;#page&apos;,//容器
       timeout: 8000
   });
</code></pre>]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>和谐代码</title>
    <url>/posts/43788fe5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="和谐代码"><a href="#和谐代码" class="headerlink" title="和谐代码"></a>和谐代码</h1><a id="more"></a><pre><code>var a_idx = 0;
jQuery(document).ready(function ($) {
    $(&quot;body&quot;).click(function (e) {
        var a = [
            &quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;,
            &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;,&quot;法治&quot;, 
            &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot;
        ];
        var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]);
        a_idx = (a_idx + 1) % a.length;
        var x = e.pageX,
            y = e.pageY;
        $i.css({
            &quot;z-index&quot;: 9999999,
            &quot;top&quot;: y - 20,
            &quot;left&quot;: x,
            &quot;position&quot;: &quot;absolute&quot;,
            &quot;font-weight&quot;: &quot;bold&quot;,
            &quot;color&quot;: &quot;#ff6651&quot;
        });
        $(&quot;body&quot;).append($i);
        $i.animate({
            &quot;top&quot;: y - 180,
            &quot;opacity&quot;: 0
        },
                   1500,
                   function () {
            $i.remove();
        });
    });
});
</code></pre>]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Git常用命令</title>
    <url>/posts/caff8000/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li>Workspace：工作区</li><li>Index / Stage：暂存区</li><li>Repository：仓库区（或本地仓库）</li><li>Remote：远程仓库</li><li>Git常用命令清单</li></ol><h1 id="Git常用命令清单"><a href="#Git常用命令清单" class="headerlink" title="Git常用命令清单"></a>Git常用命令清单</h1><h2 id="新建代码库"><a href="#新建代码库" class="headerlink" title="新建代码库"></a>新建代码库</h2><pre><code># 在当前目录新建一个Git代码库
git init
# 新建一个目录，将其初始化为Git代码库
git init [project-name]
# 下载一个项目和它的整个代码历史
git clone [url]
</code></pre><a id="more"></a><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>Git的设置文件为 <code>.gitconfig</code>，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）</p><pre><code># 显示当前的Git配置
git config --list
# 编辑Git配置文件
git config -e [--global]
# 设置提交代码时的用户信息
git config [--global] user.name &quot;[name]&quot;
git config [--global] user.email &quot;[email address]&quot;
</code></pre><h2 id="增加-删除文件"><a href="#增加-删除文件" class="headerlink" title="增加/删除文件"></a>增加/删除文件</h2><pre><code># 添加指定文件到暂存区
git add [file1] [file2] ...
# 添加指定目录到暂存区，包括子目录
git add [dir]
# 添加当前目录的所有文件到暂存区
git add .
# 添加每个变化前，都会要求确认
# 对于同一个文件的多处变化，可以实现分次提交
git add -p
# 删除工作区文件，并且将这次删除放入暂存区
git rm [file1] [file2] ...
# 停止追踪指定文件，但该文件会保留在工作区
git rm --cached [file]
# 改名文件，并且将这个改名放入暂存区
git mv [file-original] [file-renamed]
</code></pre><h2 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h2><pre><code># 提交暂存区到仓库区
git commit -m [message]
# 提交暂存区的指定文件到仓库区
git commit [file1] [file2] ... -m [message]
# 提交工作区自上次commit之后的变化，直接到仓库区
git commit -a
# 提交时显示所有diff信息
git commit -v
# 使用一次新的commit，替代上一次提交
# 如果代码没有任何新变化，则用来改写上一次commit的提交信息
git commit --amend -m [message]
# 重做上一次commit，并包括指定文件的新变化
git commit --amend [file1] [file2] ...
</code></pre><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><pre><code># 列出所有本地分支
git branch
# 列出所有远程分支
git branch -r
# 列出所有本地分支和远程分支
git branch -a
# 新建一个分支，但依然停留在当前分支
git branch [branch-name]
# 新建一个分支，并切换到该分支
git checkout -b [branch]
# 新建一个分支，指向指定commit
git branch [branch] [commit]
# 新建一个分支，与指定的远程分支建立追踪关系
git branch --track [branch] [remote-branch]
# 切换到指定分支，并更新工作区
git checkout [branch-name]
# 切换到上一个分支
git checkout -
# 建立追踪关系，在现有分支与指定的远程分支之间
git branch --set-upstream [branch] [remote-branch]
# 合并指定分支到当前分支
git merge [branch]
# 选择一个commit，合并进当前分支
git cherry-pick [commit]
# 删除分支
git branch -d [branch-name]
# 删除远程分支
git push origin --delete [branch-name]
git branch -dr [remote/branch]
</code></pre><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><pre><code># 列出所有tag
git tag
# 新建一个tag在当前commit
git tag [tag]
# 新建一个tag在指定commit
git tag [tag] [commit]
# 删除本地tag
git tag -d [tag]
# 删除远程tag
git push origin :refs/tags/[tagName]
# 查看tag信息
git show [tag]
# 提交指定tag
git push [remote] [tag]
# 提交所有tag
git push [remote] --tags
# 新建一个分支，指向某个tag
git checkout -b [branch] [tag]
</code></pre><h2 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h2><pre><code># 显示有变更的文件
git status
# 显示当前分支的版本历史
git log
# 显示commit历史，以及每次commit发生变更的文件
git log --stat
# 搜索提交历史，根据关键词
git log -S [keyword]
# 显示某个commit之后的所有变动，每个commit占据一行
git log [tag] HEAD --pretty=format:%s
# 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件
git log [tag] HEAD --grep feature
# 显示某个文件的版本历史，包括文件改名
git log --follow [file]
git whatchanged [file]
# 显示指定文件相关的每一次diff
git log -p [file]
# 显示过去5次提交
git log -5 --pretty --oneline
# 显示所有提交过的用户，按提交次数排序
git shortlog -sn
# 显示指定文件是什么人在什么时间修改过
git blame [file]
# 显示暂存区和工作区的差异
git diff
# 显示暂存区和上一个commit的差异
git diff --cached [file]
# 显示工作区与当前分支最新commit之间的差异
git diff HEAD
# 显示两次提交之间的差异
git diff [first-branch]...[second-branch]
# 显示今天你写了多少行代码
git diff --shortstat &quot;@{0 day ago}&quot;
# 显示某次提交的元数据和内容变化
git show [commit]
# 显示某次提交发生变化的文件
git show --name-only [commit]
# 显示某次提交时，某个文件的内容
git show [commit]:[filename]
# 显示当前分支的最近几次提交
git reflog
</code></pre><h2 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h2><pre><code># 下载远程仓库的所有变动
git fetch [remote]
# 显示所有远程仓库
git remote -v
# 显示某个远程仓库的信息
git remote show [remote]
# 增加一个新的远程仓库，并命名
git remote add [shortname] [url]
# 取回远程仓库的变化，并与本地分支合并
git pull [remote] [branch]
# 上传本地指定分支到远程仓库
git push [remote] [branch]
# 强行推送当前分支到远程仓库，即使有冲突
git push [remote] --force
# 推送所有分支到远程仓库
git push [remote] --all
</code></pre><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><pre><code># 恢复暂存区的指定文件到工作区
git checkout [file]
# 恢复某个commit的指定文件到暂存区和工作区
git checkout [commit] [file]
# 恢复暂存区的所有文件到工作区
git checkout .
# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变
git reset [file]
# 重置暂存区与工作区，与上一次commit保持一致
git reset --hard
# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变
git reset [commit]
# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致
git reset --hard [commit]
# 重置当前HEAD为指定commit，但保持暂存区和工作区不变
git reset --keep [commit]
# 新建一个commit，用来撤销指定commit
# 后者的所有变化都将被前者抵消，并且应用到当前分支
git revert [commit]
# 暂时将未提交的变化移除，稍后再移入
git stash
git stash pop
</code></pre><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><pre><code># 生成一个可供发布的压缩包
git archive
</code></pre><h1 id="Git-设置"><a href="#Git-设置" class="headerlink" title="Git 设置"></a>Git 设置</h1><h2 id="邮箱和密码"><a href="#邮箱和密码" class="headerlink" title="邮箱和密码"></a>邮箱和密码</h2><pre><code>git config --global user.email &quot;code0809@163.com&quot;
git config --global user.name &quot;SoulMate94&quot;
</code></pre><p>需要注意的是，如果以前全局配置后，再次执行该操作会覆盖原用户名。 如果配置了全局账号，多个 Git 账号的情况下执行 remote、pull、push 的时候会出现问题，因为要 pull 的时候识别的是邮箱，多个 git 账号，必然对应多个邮箱，那自然就不能使用 global 的 user.email 了。 这时候可以为每个 repo 设置自己的 user.email。</p><pre><code># 取消 global
git config --global --unset user.name
git config --global --unset user.email
# 设置每个项目 repo 的 user.email
git config  user.email &quot;xxx@xxx.com&quot;
git config  user.name  &quot;username&quot;
</code></pre><h2 id="SSH-key"><a href="#SSH-key" class="headerlink" title="SSH key"></a>SSH key</h2><pre><code>ssh-keygen -t rsa -C &quot;552121229l@gmail.com&quot;
</code></pre><p>一直回车，成功的话会在 ~/ 下生成 .ssh 文件夹，进去，打开 id_rsa.pub，复制里面的 key，然后进入 GitHub 的 Account Settings，选择 SSH Keys -&gt; Add SSH Key，粘贴在你电脑上生成的 key。（title 随便填） 验证是否成功：</p><pre><code>$ ssh -T git@github.com
# 成功:
Hi Tessttt! You&apos;ve successfully authenticated, but GitHub does not provide shell access.
</code></pre><p>配置多个 Git 远程仓库的 SSH-Key 我机器上的 Git 会在 GitHub、GitCafe、Coding.NET 、以及树莓派上的私有 Git 仓库之间来回切换，所以如果不配置 SSH-Key 光输入密码就得浪费不少时间。 在默认情况下，ssh 总是使用 id_rsa 密钥文件进行链接，即是第一次执行 ssh-keygen 后默认生成的，这样对于多个账号的认证肯定是不行的。 因此，要实现多帐号下的 SSH Key 的切换需要在客户端做一些配置：</p><pre><code>cd ~/.ssh    # 必须进入这个路径否则生成的密钥路径容易遗忘
ssh-keygen -t rsa -C &apos;username@github.com&apos; -f id_rsa_github   #  -C 后面跟的是注释
ssh-keygen -t rsa -C &apos;username@gitcafe.com&apos; -f id_rsa_gitcafe
ssh-keygen -t rsa -C &apos;username@coding.net&apos; -f id_rsa_coding 
# 如果还有多个 Git 远程仓库地址就继续执行 ...
</code></pre><p>然后复制 ~/.ssh/ 下面的相应的公钥到你的 Git 远程仓库服务器上即可，这个步骤和 GitHub 上的操作是一样的。 然后在 ~/.ssh/ 下面创建一个 config 文件，填入你刚刚配置的 SSH 密钥信息，内容应类似于如下：</p><pre><code>Host github.com
    HostName github.com
    User SoulMate94
    Port 22
    IdentityFile ~/.ssh/id_rsa_github
Host gitcafe.com
    HostName gitcafe.com
    User SoulMate94
    Port 22
    IdentityFile ~/.ssh/id_rsa_gitcafe
Host git.coding.net    # 注意 Coding.NET 的 HostName 是 git.coding.net
    HostName git.coding.net
    User SoulMate94
    Port 22
    IdentityFile ~/.ssh/id_rsa_coding
</code></pre><p>然后可以测试一下是否配置 OK：</p><pre><code>ssh -T git@github.com
ssh -T git@gitcafe.com
ssh -T git@git.coding.net
ssh -T git@git.keensword.net
</code></pre><p>如果没有提示错误就说明 SSH 配置好了。 然后克隆 SSH 协议的 Git 仓库即可，此后便不用每次输入用户名密码了，比如：</p><pre><code>git clone git@gitcafe.com:SoulMate94/soulmate94.git
git clone git@git.coding.net:SoulMate94/SoulMate94.git
</code></pre><p>然后还可以为不同远程 Git 仓库起不同的别名，就算是为同一内容的不同 Git 仓库提交代码，也可以通过别名来区分，比如：</p><pre><code>git remote add gitcafe git@gitcafe.com:SoulMate94/soulmate94.git
git remote add coding  git@git.coding.net:SoulMate94/SoulMate94.git
</code></pre><p>这样修改了同一个仓库后就算已经 push 到了一个远程仓库地址，也可以继续 push 到另一个的同一分支或不同分支，其区别就是别名：</p><pre><code>git push gitcafe master
git push coding master
</code></pre><h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><p>只有克隆 SSH 协议的 Git 仓库才能使 SSH 密钥机制生效，如果克隆的是 HTTPS 协议的则每次依然需要输入用户名和密码。</p><h1 id="GIT-分支操作"><a href="#GIT-分支操作" class="headerlink" title="GIT 分支操作"></a>GIT 分支操作</h1><h2 id="添加远程仓库地址和推送到远程仓库"><a href="#添加远程仓库地址和推送到远程仓库" class="headerlink" title="添加远程仓库地址和推送到远程仓库"></a>添加远程仓库地址和推送到远程仓库</h2><pre><code>git remote add origin git@lilis.xin:/home/git/blog.git
git push -u origin master
</code></pre><ol><li><code>origin</code> 是为远程仓库地址起的别名。</li><li><code>-u</code> 只在第一次推送时使用，作用是把本地的 master 分支和远程的 master 分支关联起来，之后的推送不再需要这个参数。</li></ol><h2 id="为远程仓库起别名"><a href="#为远程仓库起别名" class="headerlink" title="为远程仓库起别名"></a>为远程仓库起别名</h2><pre><code># 移除现有分支别名
git remote rm origin
# 为远程仓库地址重新起别名
git remote add caoxl     git@github.com:SoulMate94/SM94.git
</code></pre><h2 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h2><p>如果 clone 了一个空仓库，那么在执行 git branch master 的时候会报错： <code>fatal: Not a valid object name: ‘master’.</code> 这时候只需添加一些文件 commit 就行了, 比如：</p><pre><code>git add README.md
git commit -m &quot;test&quot;
git branch dev
</code></pre><h2 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h2><pre><code>git checkout --orphan gh-pages
git checkout -b test    # 从当前分支中分出一个 test 分支并切换到新 test 分支
</code></pre><h2 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h2><pre><code>git branch -a    # 查看远程分支
git branch        # 查看本地分支
git remote show origin
</code></pre><h2 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h2><pre><code>git branch -d branch_name        # 删除本地分支
git push origin --delete &lt;branch_name&gt;    # 删除远程分支版本( 类似的有删除标签：git push origin --delete tag &lt;tagname&gt; )
git push origin :&lt;branchName&gt;    # 推送一个空分支到远程分支, 其实就相当于删除远程分支
git remote prune origin    # 删除不存在对应远程分支的本地分支
git fetch -p    #在 fetch 之后删除掉没有与远程分支对应的本地分支
</code></pre><h2 id="重命名本地分支"><a href="#重命名本地分支" class="headerlink" title="重命名本地分支"></a>重命名本地分支</h2><pre><code>git branch -m devel develop
</code></pre><h2 id="Git-移除已经-add-的文件"><a href="#Git-移除已经-add-的文件" class="headerlink" title="Git 移除已经 add 的文件"></a>Git 移除已经 add 的文件</h2><pre><code>git reset --hard  需要回退的那次 commit 的哈希值
</code></pre><p>每次 commit 的哈希值可以通过 git log 命令查看 上述命令执行成功之后，会彻底返回到回退到的版本状态，新发生的变更将会丢失。 对于部分发生了变更，但是变更部分的文件夹存在未提交的文件可能导致目录非空而删除失败，此时需要自行处置 完成之后，使用 –force 或 -f 参数强制 push：</p><pre><code>git push origin HEAD --force
- `HEAD` 最近一个提交。
- `HEAD^` 上一次。
</code></pre><h2 id="查看远程-Git-仓库"><a href="#查看远程-Git-仓库" class="headerlink" title="查看远程 Git 仓库"></a>查看远程 Git 仓库</h2><pre><code>git remote -v
</code></pre><h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><h2 id="为什么删不了-master-分支？"><a href="#为什么删不了-master-分支？" class="headerlink" title="为什么删不了 master 分支？"></a>为什么删不了 master 分支？</h2><p>需要先更改默认分支为非 master 分支。再执行删除操作：</p><pre><code># 删除本地分支
git branch -d [branch-name]
git branch -D master
# 删除远程分支
git push origin :master
git push origin --delete [branch-name]
git branch -dr [remote/branch]
</code></pre><h2 id="将-gitignore-txt-修改为-gitignore-时提示-“必须键入文件名”-怎么办？"><a href="#将-gitignore-txt-修改为-gitignore-时提示-“必须键入文件名”-怎么办？" class="headerlink" title="将 .gitignore.txt 修改为 .gitignore 时提示 “必须键入文件名” 怎么办？"></a>将 .gitignore.txt 修改为 .gitignore 时提示 “必须键入文件名” 怎么办？</h2><pre><code>rename .gitignore.txt .gitignore
</code></pre><h2 id="Git忽略规则及-gitignore-规则不生效的解决办法"><a href="#Git忽略规则及-gitignore-规则不生效的解决办法" class="headerlink" title="Git忽略规则及 .gitignore 规则不生效的解决办法"></a>Git忽略规则及 .gitignore 规则不生效的解决办法</h2><p>已知在 git 中如果想忽略掉某个文件，不让这个文件提交到版本库中，可以使用修改根目录中 .gitignore 文件的方法（如无，则需自己手工建立此文件）。 这个文件每一行保存了一个匹配的规则例如：</p><pre><code># 此为注释 – 将被 Git 忽略
*.a       # 忽略所有 .a 结尾的文件
!lib.a    # 但 lib.a 除外
/TODO     # 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO
build/    # 忽略 build/ 目录下的所有文件
doc/*.txt # 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt
</code></pre><p>规则很简单，不做过多解释，但是有时候在项目开发过程中，突然心血来潮想把某些目录或文件加入忽略规则，按照上述方法定义后发现并未生效，原因是 .gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改 .gitignore 是无效的。那么解决方法就是先把本地缓存删除（改变成未track状态），然后再提交：</p><pre><code>git rm -r --cached .
git add .
git commit -m &apos;update .gitignore&apos;
# 如果 cache 暂存区的内容和 HEAD 不一致，请使用： git rm rf --cache . 强制删除
</code></pre><h2 id="Git-停止追踪文件权限"><a href="#Git-停止追踪文件权限" class="headerlink" title="Git 停止追踪文件权限"></a>Git 停止追踪文件权限</h2><pre><code>git config core.filemode false
cat .git/config
</code></pre><h2 id="gitkeep-有什么用"><a href="#gitkeep-有什么用" class="headerlink" title=".gitkeep 有什么用 ?"></a>.gitkeep 有什么用 ?</h2><pre><code>“.gitkeep” isn’t documented, because it’s not a feature of Git.
Git cannot add a completely empty directory. People who want to track empty directories in Git have created the convention of putting files called “.gitkeep” in these directories. The file could be called anything; Git assigns no special significance to this name.
There is a competing convention of adding a “.gitignore” file to the empty directories to get them tracked, but some people see this as confusing since the goal is to keep the empty directories, not ignore them; “.gitignore” is also used to list files that should be ignored by Git when looking for untracked files.
or you can use like this to except for this one: !.gitignore.
git fetch repo 和 git fetch repo branch 的区别 ?
</code></pre><p><code>git fetch</code>, 理解<code>fetch</code>的含义, 是远程协作的关键，而理解<code>fetch</code>的关键, 是理解<code>FETCH_HEAD</code>。 <code>FETCH_HEAD</code>指的是: 某个<code>branch</code>在服务器上的最新状态。 每一个执行过<code>fetch</code>操作的项目，都会存在一个<code>FETCH_HEAD</code>列表，这个列表保存在 <code>.git/FETCH_HEAD</code> 文件中, 其中每一行对应于远程服务器的一个分支。 当前分支指向的 FETCH_HEAD, 就是这个文件第一行对应的那个分支。 一般来说, 存在两种情况: 如果没有显式的指定远程分支, 则远程分支的 <code>master</code> 将作为默认的 <code>FETCH_HEAD</code>。 .如果指定了远程分支, 就将这个远程分支作为 <code>FETCH_HEAD</code>。 常见的 <code>git fetch</code> 使用方式包含以下四种:</p><pre><code>git fetch
</code></pre><p>这一步其实是执行了两个关键操作: 1.创建并更新所有远程分支的本地远程分支。 2.设定当前分支的 <code>FETCH_HEAD</code> 为远程服务器的 <code>master</code> 分支 (上面说的第一种情况)。 需要注意的是，和 <code>push</code> 不同, <code>fetch</code> 会自动获取远程 新加入的分支。</p><pre><code>git fetch origin
</code></pre><p>同上, 只不过手动指定了 <code>remote</code>。</p><pre><code>git fetch origin branch1
</code></pre><p>设定当前分支的 FETCH_HEAD 为远程服务器的 branch1 分支。 注意: 在这种情况下, 不会在本地创建本地远程分支, 这是因为: 这个操作是 <code>git pull origin branch1</code> 的第一步, 而对应的 <code>pull</code> 操作,并不会在本地创建新的 <code>branch</code>。 一个附加效果是：这个命令可以用来测试远程主机的远程分支 <code>branch1</code> 是否存在, 如果存在, 返回<code>0</code>, 如果不存在, 返回<code>128</code>, 抛出一个异常。</p><pre><code>git fetch origin branch1:branch2
</code></pre><p>只要明白了上面的含义, 这个就很简单了: 1. 首先执行上面的 fetch 操作 2. 使用远程 branch1 分支在本地创建 branch2 (但不会切换到该分支)，如果本地不存在branch2分支, 则会自动创建一个新的 branch2 分支。 如果本地存在 branch2 分支, 并且是 fast forward，则自动合并两个分支, 否则, 会阻止以上操作.</p><pre><code>git fetch origin :branch2
# 等价于:
git fetch origin master:branch2。


git pull
</code></pre><p>只要理解了 <code>git fetch</code> <code>git pull</code>就太简单了。 <code>git pull</code> 等价于以下两步: 1. 经命令中的pull换成fetch, 执行之。 2. git merge FETCH_HEAD 唯一需要提及的一点是: 我认为 <code>pull</code> 操作, 不应该涉及三方合并 或 衍合 操作。 换个说法: <code>pull</code> 应该总是 <code>fast forward</code> 的. 为了达到这样一个效果, 在真正 <code>push</code> 操作之前, 我倾向于使用衍合, 在本地对代码执行合并操作。 关于 git 不区分文件名大小写的处理 处理办法： windows 下在 git 中修改文件的大小写</p><pre><code>git mv --force myfile MyFile
# 或者
git mv -f myfile MyFile
</code></pre><p>然后 commit 就好了。当然也可以配置一下 git：</p><pre><code>Add ignorecase = false to [core] in .git/config;
</code></pre><h3 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h3><p>创建版本号为 1 的 master 分支</p><pre><code>git push sina master:1
</code></pre><p>删除 master 分支上版本号为 1 的 代码</p><pre><code>git push sina :1
# 或
git push sina master :1
</code></pre><p>有空格则为删除版本，无空格则为新建版本。</p><pre><code>git push origin :branch
</code></pre><p>表示将一个内容为空的同名分支推送到远程的分支，说白了, 即删除远程主机的 branch 分支, 但是这并不会消除之前的 comment 内容, 而且你一旦提交了一些大的文件(例如: 图片之类的), 通过这个操作, 是不会将这些文件占用的空间消除的. 如果要真正的删除一个文件, 除了删除整个项目, Github网站也有提供办法。</p>]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>生成ssh公钥</title>
    <url>/posts/c5865ac/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="生成ssh公钥"><a href="#生成ssh公钥" class="headerlink" title="生成ssh公钥"></a>生成ssh公钥</h2><a id="more"></a><pre><code>ssh-keygen
    Generating public/private rsa key pair.
    Enter file in which to save the key (/root/.ssh/id_rsa): 
    Enter passphrase (empty for no passphrase): 
    Enter same passphrase again: 
    Your identification has been saved in /root/.ssh/id_rsa.
    Your public key has been saved in /root/.ssh/id_rsa.pub.
    The key fingerprint is:
    SHA256:FnCdJPMa8nGV1PeSuFs/QnwPq+R+QySEbbot694J20s root@lilis
    The key&apos;s randomart image is:
    +---[RSA 2048]----+
    |      . +o.=oo   |
    |       o ++.= . .|
    |      . + o+ . o.|
    |       o *. o + .|
    |        S  o.+ . |
    |       .  o oo+. |
    |          .oE+.+.|
    |          .O.o+.o|
    |         o+.O+...|
    +----[SHA256]-----+
cat ~/.ssh/id_rsa.pub
    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDkxXUiZDVLIx8wXegCXFEfpZ6pU4Dek
    fYleuQIw0Xo1epEqVzolKEjvjyp6qseav7ZV7buWijvelwo9iiX244Il70BnNIM3q/W/9
    jQHaJoC69PgLNcw8Wmzdh4oPykc6UeXXRKaA9GqWpzNDb4bvCCMtTM/cyG+9Pc9/Vm+cq
    s3FMs04WaLP6a0E9r37GBW95GJnx5ky05uxXGmdK+tTE85oQm15X9P/w5yAPxWjexIZpI
    /ogBN/GNBgjKcY8Wdt9/yfwxyB0ov1CIkHfAEylpZcEyMtYAbOZdpiTAyMzeeaQ8Qyct9
    PzdoGeORLCy3OGjZft8fMqr4djK7uXli+cb root@lilis
</code></pre>]]></content>
      <tags>
        <tag>代码</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>管理远程库</title>
    <url>/posts/a7f0d6d/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="添加远程库"><a href="#添加远程库" class="headerlink" title="添加远程库"></a>添加远程库</h2><pre><code>git remote add origin git@lilis.xin:/home/git/laravel-s.git
</code></pre><a id="more"></a><h2 id="删除远程仓库"><a href="#删除远程仓库" class="headerlink" title="删除远程仓库"></a>删除远程仓库</h2><pre><code>git remote remove origin
</code></pre>]]></content>
      <tags>
        <tag>代码</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>根据银行卡号获取银行名称</title>
    <url>/posts/6cfcf2cc/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="根据银行卡号获取银行名称-PHP"><a href="#根据银行卡号获取银行名称-PHP" class="headerlink" title="根据银行卡号获取银行名称(PHP)"></a>根据银行卡号获取银行名称(PHP)</h2><a id="more"></a><pre><code>&lt;?php
 header(&quot;content-type:text/html;charset=utf-8&quot;);
 /**
 * 
 */


 class GetBank 
 {  
        public static $bankBin = array(
        621098, 622150, 622151, 622181, 622188, 955100, 621095, 620062, 621285, 621798, 621799, 
        621797, 620529, 622199, 621096, 621622, 623219, 621674, 623218, 621599, 370246, 370248, 
        370249, 427010, 427018, 427019, 427020, 427029, 427030, 427039, 370247, 438125, 438126, 
        451804, 451810, 451811, 458071, 489734, 489735, 489736, 510529, 427062, 524091, 427064, 
        530970, 530990, 558360, 620200, 620302, 620402, 620403, 620404, 524047, 620406, 620407, 
        525498, 620409, 620410, 620411, 620412, 620502, 620503, 620405, 620408, 620512, 620602, 
        620604, 620607, 620611, 620612, 620704, 620706, 620707, 620708, 620709, 620710, 620609, 
        620712, 620713, 620714, 620802, 620711, 620904, 620905, 621001, 620902, 621103, 621105, 
        621106, 621107, 621102, 621203, 621204, 621205, 621206, 621207, 621208, 621209, 621210, 
        621302, 621303, 621202, 621305, 621306, 621307, 621309, 621311, 621313, 621211, 621315, 
        621304, 621402, 621404, 621405, 621406, 621407, 621408, 621409, 621410, 621502, 621317, 
        621511, 621602, 621603, 621604, 621605, 621608, 621609, 621610, 621611, 621612, 621613, 
        621614, 621615, 621616, 621617, 621607, 621606, 621804, 621807, 621813, 621814, 621817, 
        621901, 621904, 621905, 621906, 621907, 621908, 621909, 621910, 621911, 621912, 621913, 
        621915, 622002, 621903, 622004, 622005, 622006, 622007, 622008, 622010, 622011, 622012, 
        621914, 622015, 622016, 622003, 622018, 622019, 622020, 622102, 622103, 622104, 622105, 
        622013, 622111, 622114, 622200, 622017, 622202, 622203, 622208, 622210, 622211, 622212, 
        622213, 622214, 622110, 622220, 622223, 622225, 622229, 622230, 622231, 622232, 622233, 
        622234, 622235, 622237, 622215, 622239, 622240, 622245, 622224, 622303, 622304, 622305, 
        622306, 622307, 622308, 622309, 622238, 622314, 622315, 622317, 622302, 622402, 622403, 
        622404, 622313, 622504, 622505, 622509, 622513, 622517, 622502, 622604, 622605, 622606, 
        622510, 622703, 622715, 622806, 622902, 622903, 622706, 623002, 623006, 623008, 623011, 
        623012, 622904, 623015, 623100, 623202, 623301, 623400, 623500, 623602, 623803, 623901, 
        623014, 624100, 624200, 624301, 624402, 62451804, 62451810, 62451811, 62458071, 623700, 
        628288, 624000, 628286, 622206, 621225, 526836, 513685, 543098, 458441, 620058, 621281, 
        622246, 900000, 544210, 548943, 370267, 621558, 621559, 621722, 621723, 620086, 621226, 
        402791, 427028, 427038, 548259, 356879, 356880, 356881, 356882, 528856, 621618, 620516, 
        621227, 621721, 900010, 625330, 625331, 625332, 623062, 622236, 621670, 524374, 550213, 
        374738, 374739, 621288, 625708, 625709, 622597, 622599, 360883, 360884, 625865, 625866, 
        625899, 621376, 620054, 620142, 621428, 625939, 621434, 625987, 621761, 621749, 620184, 
        621300, 621378, 625114, 622159, 621720, 625021, 625022, 621379, 620114, 620146, 621724, 
        625918, 621371, 620143, 620149, 621414, 625914, 621375, 620187, 621433, 625986, 621370, 
        625925, 622926, 622927, 622928, 622929, 622930, 622931, 620124, 620183, 620561, 625116, 
        622227, 621372, 621464, 625942, 622158, 625917, 621765, 620094, 620186, 621719, 621719, 
        621750, 621377, 620148, 620185, 621374, 621731, 621781, 552599, 623206, 621671, 620059, 
        403361, 404117, 404118, 404119, 404120, 404121, 463758, 514027, 519412, 519413, 520082, 
        520083, 558730, 621282, 621336, 621619, 622821, 622822, 622823, 622824, 622825, 622826, 
        622827, 622828, 622836, 622837, 622840, 622841, 622843, 622844, 622845, 622846, 622847, 
        622848, 622849, 623018, 625996, 625997, 625998, 628268, 625826, 625827, 548478, 544243, 
        622820, 622830, 622838, 625336, 628269, 620501, 621660, 621661, 621662, 621663, 621665, 
        621667, 621668, 621669, 621666, 625908, 625910, 625909, 356833, 356835, 409665, 409666, 
        409668, 409669, 409670, 409671, 409672, 456351, 512315, 512316, 512411, 512412, 514957, 
        409667, 518378, 518379, 518474, 518475, 518476, 438088, 524865, 525745, 525746, 547766, 
        552742, 553131, 558868, 514958, 622752, 622753, 622755, 524864, 622757, 622758, 622759, 
        622760, 622761, 622762, 622763, 601382, 622756, 628388, 621256, 621212, 620514, 622754, 
        622764, 518377, 622765, 622788, 621283, 620061, 621725, 620040, 558869, 621330, 621331, 
        621332, 621333, 621297, 377677, 621568, 621569, 625905, 625906, 625907, 628313, 625333, 
        628312, 623208, 621620, 621756, 621757, 621758, 621759, 621785, 621786, 621787, 621788, 
        621789, 621790, 621672, 625337, 625338, 625568, 621648, 621248, 621249, 622750, 622751, 
        622771, 622772, 622770, 625145, 620531, 620210, 620211, 622479, 622480, 622273, 622274, 
        621231, 621638, 621334, 625140, 621395, 622725, 622728, 621284, 421349, 434061, 434062, 
        436728, 436742, 453242, 491031, 524094, 526410, 544033, 552245, 589970, 620060, 621080, 
        621081, 621466, 621467, 621488, 621499, 621598, 621621, 621700, 622280, 622700, 622707, 
        622966, 622988, 625955, 625956, 553242, 621082, 621673, 623211, 356896, 356899, 356895, 
        436718, 436738, 436745, 436748, 489592, 531693, 532450, 532458, 544887, 552801, 557080, 
        558895, 559051, 622166, 622168, 622708, 625964, 625965, 625966, 628266, 628366, 625362, 
        625363, 628316, 628317, 620021, 620521, 405512, 601428, 405512, 434910, 458123, 458124, 
        520169, 522964, 552853, 601428, 622250, 622251, 521899, 622254, 622255, 622256, 622257, 
        622258, 622259, 622253, 622261, 622284, 622656, 628216, 622252, 66405512, 622260, 66601428, 
        955590, 955591, 955592, 955593, 628218, 622262, 621069, 620013, 625028, 625029, 621436, 621002, 
        621335, 433670, 433680, 442729, 442730, 620082, 622690, 622691, 622692, 622696, 622698, 622998, 
        622999, 433671, 968807, 968808, 968809, 621771, 621767, 621768, 621770, 621772, 621773, 620527, 
        356837, 356838, 486497, 622660, 622662, 622663, 622664, 622665, 622666, 622667, 622669, 622670, 
        622671, 622672, 622668, 622661, 622674, 622673, 620518, 621489, 621492, 620535, 623156, 621490, 
        621491, 620085, 623155, 623157, 623158, 623159, 999999, 621222, 623020, 623021, 623022, 623023, 
        622630, 622631, 622632, 622633, 622615, 622616, 622618, 622622, 622617, 622619, 415599, 421393, 
        421865, 427570, 427571, 472067, 472068, 622620, 621691, 545392, 545393, 545431, 545447, 356859, 
        356857, 407405, 421869, 421870, 421871, 512466, 356856, 528948, 552288, 622600, 622601, 622602, 
        517636, 622621, 628258, 556610, 622603, 464580, 464581, 523952, 545217, 553161, 356858, 622623, 
        625911, 377152, 377153, 377158, 377155, 625912, 625913, 356885, 356886, 356887, 356888, 356890, 
        402658, 410062, 439188, 439227, 468203, 479228, 479229, 512425, 521302, 524011, 356889, 545620, 
        545621, 545947, 545948, 552534, 552587, 622575, 622576, 622577, 622579, 622580, 545619, 622581, 
        622582, 622588, 622598, 622609, 690755, 690755, 545623, 621286, 620520, 621483, 621485, 621486, 
        628290, 622578, 370285, 370286, 370287, 370289, 439225, 518710, 518718, 628362, 439226, 628262, 
        625802, 625803, 621299, 966666, 622909, 622908, 438588, 438589, 461982, 486493, 486494, 486861, 
        523036, 451289, 527414, 528057, 622901, 622902, 622922, 628212, 451290, 524070, 625084, 625085, 
        625086, 625087, 548738, 549633, 552398, 625082, 625083, 625960, 625961, 625962, 625963, 356851, 
        356852, 404738, 404739, 456418, 498451, 515672, 356850, 517650, 525998, 622177, 622277, 622516, 
        622517, 622518, 622520, 622521, 622522, 622523, 628222, 628221, 984301, 984303, 622176, 622276, 
        622228, 621352, 621351, 621390, 621792, 625957, 625958, 621791, 620530, 625993, 622519, 621793, 
        621795, 621796, 622500, 623078, 622384, 940034, 940015, 622886, 622391, 940072, 622359, 940066, 
        622857, 940065, 621019, 622309, 621268, 622884, 621453, 622684, 621016, 621015, 622950, 622951, 
        621072, 623183, 623185, 621005, 622172, 622985, 622987, 622267, 622278, 622279, 622468, 622892,
        940021, 621050, 620522, 356827, 356828, 356830, 402673, 402674, 438600, 486466, 519498, 520131, 
        524031, 548838, 622148, 622149, 622268, 356829, 622300, 628230, 622269, 625099, 625953, 625350, 
        625351, 625352, 519961, 625839, 421317, 602969, 621030, 621420, 621468, 623111, 422160, 422161, 
        622865, 940012, 623131, 622178, 622179, 628358, 622394, 940025, 621279, 622281, 622316, 940022, 
        621418, 512431, 520194, 621626, 623058, 602907, 622986, 622989, 622298, 622338, 940032, 623205, 
        621977, 990027, 622325, 623029, 623105, 621244, 623081, 623108, 566666, 622455, 940039, 622466, 
        628285, 622420, 940041, 623118, 603708, 622993, 623070, 623069, 623172, 623173, 622383, 622385, 
        628299, 603506, 603367, 622878, 623061, 623209, 628242, 622595, 622303, 622305, 621259, 622596, 
        622333, 940050, 621439, 623010, 621751, 628278, 625502, 625503, 625135, 622476, 621754, 622143, 
        940001, 623026, 623086, 628291, 621532, 621482, 622135, 622152, 622153, 622154, 622996, 622997, 
        940027, 623099, 623007, 940055, 622397, 622398, 940054, 622331, 622426, 625995, 621452, 628205, 
        628214, 625529, 622428, 621529, 622429, 621417, 623089, 623200, 940057, 622311, 623119, 622877, 
        622879, 621775, 623203, 603601, 622137, 622327, 622340, 622366, 622134, 940018, 623016, 623096, 
        940049, 622425, 622425, 621577, 622485, 623098, 628329, 621538, 940006, 621269, 622275, 621216, 
        622465, 940031, 621252, 622146, 940061, 621419, 623170, 622440, 940047, 940017, 622418, 623077, 
        622413, 940002, 623188, 622310, 940068, 622321, 625001, 622427, 940069, 623039, 628273, 622370, 
        683970, 940074, 621437, 628319, 990871, 622308, 621415, 623166, 622132, 621340, 621341, 622140, 
        623073, 622147, 621633, 622301, 623171, 621422, 622335, 622336, 622165, 622315, 628295, 625950, 
        621760, 622337, 622411, 623102, 622342, 623048, 622367, 622392, 623085, 622395, 622441, 622448, 
        621413, 622856, 621037, 621097, 621588, 623032, 622644, 623518, 622870, 622866, 623072, 622897, 
        628279, 622864, 621403, 622561, 622562, 622563, 622167, 622777, 621497, 622868, 622899, 628255, 
        625988, 622566, 622567, 622625, 622626, 625946, 628200, 621076, 504923, 622173, 622422, 622447, 
        622131, 940076, 621579, 622876, 622873, 622962, 622936, 623060, 622937, 623101, 621460, 622939,
        622960, 623523, 621591, 622961, 628210, 622283, 625902, 621010, 622980, 623135, 621726, 621088,
        620517, 622740, 625036, 621014, 621004, 622972, 623196, 621028, 623083, 628250, 623121, 621070, 
        628253, 622979, 621035, 621038, 621086, 621498, 621296, 621448, 622945, 621755, 622940, 623120, 
        628355, 621089, 623161, 628339, 621074, 621515, 623030, 621345, 621090, 623178, 621091, 623168, 
        621057, 623199, 621075, 623037, 628303, 621233, 621235, 621223, 621780, 621221, 623138, 628389, 
        621239, 623068, 621271, 628315, 621272, 621738, 621273, 623079, 621263, 621325, 623084, 621327,
        621753, 628331, 623160, 621366, 621388, 621348, 621359, 621360, 621217, 622959, 621270, 622396, 
        622511, 623076, 621391, 621339, 621469, 621625, 623688, 623113, 621601, 621655, 621636, 623182, 
        623087, 621696, 622955, 622478, 940013, 621495, 621688, 623162, 622462, 628272, 625101, 622323, 
        623071, 603694, 622128, 622129, 623035, 623186, 621522, 622271, 940037, 940038, 985262, 622322, 
        628381, 622481, 622341, 940058, 623115, 621258, 621465, 621528, 622328, 940062, 625288, 623038, 
        625888, 622332, 940063, 623123, 622138, 621066, 621560, 621068, 620088, 621067, 622531, 622329, 
        623103, 622339, 620500, 621024, 622289, 622389, 628300, 625516, 621516, 622859, 622869, 623075, 
        622895, 623125, 622947, 621561, 623095, 621073, 623109, 621361, 623033, 623207, 622891, 621363, 
        623189, 623510, 622995, 621053, 621230, 621229, 622218, 628267, 621392, 621481, 621310, 621396, 
        623251, 628351, 627066,627066,627067,627068,627069,412962,412963,415752,415753,622535,622536,622538,622539,622983,998800);
    // &quot;发卡行.卡种名称&quot;,  
    public static $bankName = array( 
     &quot;邮储银行·绿卡通&quot;, &quot;邮储银行·绿卡银联标准卡&quot;, &quot;邮储银行·绿卡银联标准卡&quot;, &quot;邮储银行·绿卡专用卡&quot;, &quot;邮储银行·绿卡银联标准卡&quot;,
     &quot;邮储银行·绿卡(银联卡)&quot;, &quot;邮储银行·绿卡VIP卡&quot;, &quot;邮储银行·银联标准卡&quot;, &quot;邮储银行·中职学生资助卡&quot;, &quot;邮政储蓄银行·IC绿卡通VIP卡&quot;,
     &quot;邮政储蓄银行·IC绿卡通&quot;, &quot;邮政储蓄银行·IC联名卡&quot;, &quot;邮政储蓄银行·IC预付费卡&quot;, &quot;邮储银行·绿卡银联标准卡&quot;, &quot;邮储银行·绿卡通&quot;, 
     &quot;邮政储蓄银行·武警军人保障卡&quot;, &quot;邮政储蓄银行·中国旅游卡（金卡）&quot;, &quot;邮政储蓄银行·普通高中学生资助卡&quot;, &quot;邮政储蓄银行·中国旅游卡（普卡）&quot;, 
     &quot;邮政储蓄银行·福农卡&quot;, &quot;工商银行·牡丹运通卡金卡&quot;, &quot;工商银行·牡丹运通卡金卡&quot;, &quot;工商银行·牡丹运通卡金卡&quot;, &quot;工商银行·牡丹VISA卡(单位卡)&quot;,
     &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·牡丹VISA卡(单位卡)&quot;, &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·牡丹VISA信用卡&quot;,
     &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·牡丹运通卡普通卡&quot;, &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·牡丹VISA白金卡&quot;, &quot;工商银行·牡丹贷记卡(银联卡)&quot;, 
     &quot;工商银行·牡丹贷记卡(银联卡)&quot;, &quot;工商银行·牡丹贷记卡(银联卡)&quot;, &quot;工商银行·牡丹贷记卡(银联卡)&quot;, &quot;工商银行·牡丹欧元卡&quot;, &quot;工商银行·牡丹欧元卡&quot;, 
     &quot;工商银行·牡丹欧元卡&quot;, &quot;工商银行·牡丹万事达国际借记卡&quot;, &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·海航信用卡&quot;, &quot;工商银行·牡丹VISA信用卡&quot;, 
     &quot;工商银行·牡丹万事达信用卡&quot;, &quot;工商银行·牡丹万事达信用卡&quot;, &quot;工商银行·牡丹万事达信用卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹万事达白金卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·海航信用卡个人普卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;,
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;,
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;,
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·E时代卡&quot;, &quot;工商银行·E时代卡&quot;, &quot;工商银行·理财金卡&quot;, &quot;工商银行·准贷记卡(个普)&quot;, &quot;工商银行·准贷记卡(个普)&quot;, &quot;工商银行·准贷记卡(个普)&quot;,
     &quot;工商银行·准贷记卡(个普)&quot;, &quot;工商银行·准贷记卡(个普)&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·准贷记卡(商普)&quot;, &quot;工商银行·牡丹卡(商务卡)&quot;, 
     &quot;工商银行·准贷记卡(商金)&quot;, &quot;工商银行·牡丹卡(商务卡)&quot;, &quot;工商银行·贷记卡(个普)&quot;, &quot;工商银行·牡丹卡(个人卡)&quot;, &quot;工商银行·牡丹卡(个人卡)&quot;, 
     &quot;工商银行·牡丹卡(个人卡)&quot;, &quot;工商银行·牡丹卡(个人卡)&quot;, &quot;工商银行·贷记卡(个金)&quot;, &quot;工商银行·牡丹交通卡&quot;, &quot;工商银行·准贷记卡(个金)&quot;, 
     &quot;工商银行·牡丹交通卡&quot;, &quot;工商银行·贷记卡(商普)&quot;, &quot;工商银行·贷记卡(商金)&quot;, &quot;工商银行·牡丹卡(商务卡)&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹交通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, 
     &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹贷记卡&quot;, &quot;工商银行·牡丹贷记卡&quot;, &quot;工商银行·牡丹贷记卡&quot;, 
     &quot;工商银行·牡丹贷记卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·中央预算单位公务卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·财政预算单位公务卡&quot;, 
     &quot;工商银行·牡丹卡白金卡&quot;, &quot;工商银行·牡丹卡普卡&quot;, &quot;工商银行·国航知音牡丹信用卡&quot;, &quot;工商银行·国航知音牡丹信用卡&quot;, &quot;工商银行·国航知音牡丹信用卡&quot;, 
     &quot;工商银行·国航知音牡丹信用卡&quot;, &quot;工商银行·银联标准卡&quot;, &quot;工商银行·中职学生资助卡&quot;, &quot;工商银行·专用信用消费卡&quot;, &quot;工商银行·牡丹社会保障卡&quot;, 
     &quot;中国工商银行·牡丹东航联名卡&quot;, &quot;中国工商银行·牡丹东航联名卡&quot;, &quot;中国工商银行·牡丹运通白金卡&quot;, &quot;中国工商银行·福农灵通卡&quot;, &quot;中国工商银行·福农灵通卡&quot;, 
     &quot;工商银行·灵通卡&quot;, &quot;工商银行·灵通卡&quot;, &quot;中国工商银行·中国旅行卡&quot;, &quot;工商银行·牡丹卡普卡&quot;, &quot;工商银行·国际借记卡&quot;, &quot;工商银行·国际借记卡&quot;, 
     &quot;工商银行·国际借记卡&quot;, &quot;工商银行·国际借记卡&quot;, &quot;中国工商银行·牡丹JCB信用卡&quot;, &quot;中国工商银行·牡丹JCB信用卡&quot;, &quot;中国工商银行·牡丹JCB信用卡&quot;, 
     &quot;中国工商银行·牡丹JCB信用卡&quot;, &quot;中国工商银行·牡丹多币种卡&quot;, &quot;中国工商银行·武警军人保障卡&quot;, &quot;工商银行·预付芯片卡&quot;, &quot;工商银行·理财金账户金卡&quot;, 
     &quot;工商银行·灵通卡&quot;, &quot;工商银行·牡丹宁波市民卡&quot;, &quot;中国工商银行·中国旅游卡&quot;, &quot;中国工商银行·中国旅游卡&quot;, &quot;中国工商银行·中国旅游卡&quot;, &quot;中国工商银行·借记卡&quot;, 
     &quot;中国工商银行·借贷合一卡&quot;, &quot;中国工商银行·普通高中学生资助卡&quot;, &quot;中国工商银行·牡丹多币种卡&quot;, &quot;中国工商银行·牡丹多币种卡&quot;, &quot;中国工商银行·牡丹百夫长信用卡&quot;, 
     &quot;中国工商银行·牡丹百夫长信用卡&quot;, &quot;工商银行·工银财富卡&quot;, &quot;中国工商银行·中小商户采购卡&quot;, &quot;中国工商银行·中小商户采购卡&quot;, &quot;中国工商银行·环球旅行金卡&quot;,
     &quot;中国工商银行·环球旅行白金卡&quot;, &quot;中国工商银行·牡丹工银大来卡&quot;, &quot;中国工商银行·牡丹工银大莱卡&quot;, &quot;中国工商银行·IC金卡&quot;, &quot;中国工商银行·IC白金卡&quot;, 
     &quot;中国工商银行·工行IC卡（红卡）&quot;, &quot;中国工商银行布鲁塞尔分行·借记卡&quot;, &quot;中国工商银行布鲁塞尔分行·预付卡&quot;, &quot;中国工商银行布鲁塞尔分行·预付卡&quot;, 
     &quot;中国工商银行金边分行·借记卡&quot;, &quot;中国工商银行金边分行·信用卡&quot;, &quot;中国工商银行金边分行·借记卡&quot;, &quot;中国工商银行金边分行·信用卡&quot;, &quot;中国工商银行加拿大分行·借记卡&quot;, 
     &quot;中国工商银行加拿大分行·借记卡&quot;, &quot;中国工商银行加拿大分行·预付卡&quot;, &quot;中国工商银行巴黎分行·借记卡&quot;, &quot;中国工商银行巴黎分行·借记卡&quot;, &quot;中国工商银行巴黎分行·贷记卡&quot;, 
     &quot;中国工商银行法兰克福分行·贷记卡&quot;, &quot;中国工商银行法兰克福分行·借记卡&quot;, &quot;中国工商银行法兰克福分行·贷记卡&quot;, &quot;中国工商银行法兰克福分行·贷记卡&quot;, &quot;中国工商银行法兰克福分行·借记卡&quot;,
     &quot;中国工商银行法兰克福分行·预付卡&quot;, &quot;中国工商银行法兰克福分行·预付卡&quot;, &quot;中国工商银行印尼分行·借记卡&quot;, &quot;中国工商银行印尼分行·信用卡&quot;, &quot;中国工商银行米兰分行·借记卡&quot;, 
     &quot;中国工商银行米兰分行·预付卡&quot;, &quot;中国工商银行米兰分行·预付卡&quot;, &quot;中国工商银行阿拉木图子行·借记卡&quot;, &quot;中国工商银行阿拉木图子行·贷记卡&quot;, &quot;中国工商银行阿拉木图子行·借记卡&quot;,
     &quot;中国工商银行阿拉木图子行·预付卡&quot;, &quot;中国工商银行万象分行·借记卡&quot;, &quot;中国工商银行万象分行·贷记卡&quot;, &quot;中国工商银行卢森堡分行·借记卡&quot;, &quot;中国工商银行卢森堡分行·贷记卡&quot;, 
     &quot;中国工商银行澳门分行·E时代卡&quot;, &quot;中国工商银行澳门分行·E时代卡&quot;, &quot;中国工商银行澳门分行·E时代卡&quot;, &quot;中国工商银行澳门分行·理财金账户&quot;, &quot;中国工商银行澳门分行·理财金账户&quot;,
     &quot;中国工商银行澳门分行·理财金账户&quot;, &quot;中国工商银行澳门分行·预付卡&quot;, &quot;中国工商银行澳门分行·预付卡&quot;, &quot;中国工商银行澳门分行·工银闪付预付卡&quot;, &quot;中国工商银行澳门分行·工银银联公司卡&quot;,
     &quot;中国工商银行澳门分行·Diamond&quot;, &quot;中国工商银行阿姆斯特丹·借记卡&quot;, &quot;中国工商银行卡拉奇分行·借记卡&quot;, &quot;中国工商银行卡拉奇分行·贷记卡&quot;, &quot;中国工商银行新加坡分行·贷记卡&quot;, 
     &quot;中国工商银行新加坡分行·贷记卡&quot;, &quot;中国工商银行新加坡分行·借记卡&quot;, &quot;中国工商银行新加坡分行·预付卡&quot;, &quot;中国工商银行新加坡分行·预付卡&quot;, &quot;中国工商银行新加坡分行·借记卡&quot;, 
     &quot;中国工商银行新加坡分行·借记卡&quot;, &quot;中国工商银行马德里分行·借记卡&quot;, &quot;中国工商银行马德里分行·借记卡&quot;, &quot;中国工商银行马德里分行·预付卡&quot;, &quot;中国工商银行马德里分行·预付卡&quot;,
     &quot;中国工商银行伦敦子行·借记卡&quot;, &quot;中国工商银行伦敦子行·工银伦敦借记卡&quot;, &quot;中国工商银行伦敦子行·借记卡&quot;, &quot;农业银行·金穗贷记卡&quot;, &quot;农业银行·中国旅游卡&quot;, &quot;农业银行·普通高中学生资助卡&quot;,
     &quot;农业银行·银联标准卡&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, 
     &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·VISA白金卡&quot;, &quot;农业银行·万事达白金卡&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, 
     &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡&quot;, &quot;农业银行·中职学生资助卡&quot;, &quot;农业银行·专用惠农卡&quot;, &quot;农业银行·武警军人保障卡&quot;, &quot;农业银行·金穗校园卡(银联卡)&quot;, 
     &quot;农业银行·金穗星座卡(银联卡)&quot;, &quot;农业银行·金穗社保卡(银联卡)&quot;, &quot;农业银行·金穗旅游卡(银联卡)&quot;, &quot;农业银行·金穗青年卡(银联卡)&quot;, &quot;农业银行·复合介质金穗通宝卡&quot;, 
     &quot;农业银行·金穗海通卡&quot;, &quot;农业银行·退役金卡&quot;, &quot;农业银行·金穗贷记卡&quot;, &quot;农业银行·金穗贷记卡&quot;, &quot;农业银行·金穗通宝卡(银联卡)&quot;, &quot;农业银行·金穗惠农卡&quot;, &quot;农业银行·金穗通宝银卡&quot;, 
     &quot;农业银行·金穗通宝卡(银联卡)&quot;, &quot;农业银行·金穗通宝卡(银联卡)&quot;, &quot;农业银行·金穗通宝卡&quot;, &quot;农业银行·金穗通宝卡(银联卡)&quot;, &quot;农业银行·金穗通宝卡(银联卡)&quot;, &quot;农业银行·金穗通宝钻石卡&quot;,
     &quot;农业银行·掌尚钱包&quot;, &quot;农业银行·银联IC卡金卡&quot;, &quot;农业银行·银联预算单位公务卡金卡&quot;, &quot;农业银行·银联IC卡白金卡&quot;, &quot;农业银行·金穗公务卡&quot;, &quot;中国农业银行贷记卡·IC普卡&quot;, 
     &quot;中国农业银行贷记卡·IC金卡&quot;, &quot;中国农业银行贷记卡·澳元卡&quot;, &quot;中国农业银行贷记卡·欧元卡&quot;, &quot;中国农业银行贷记卡·金穗通商卡&quot;, &quot;中国农业银行贷记卡·金穗通商卡&quot;, &quot;中国农业银行贷记卡·银联白金卡&quot;, 
     &quot;中国农业银行贷记卡·中国旅游卡&quot;, &quot;中国农业银行贷记卡·银联IC公务卡&quot;, &quot;宁波市农业银行·市民卡B卡&quot;, &quot;中国银行·联名卡&quot;, &quot;中国银行·个人普卡&quot;, &quot;中国银行·个人金卡&quot;, &quot;中国银行·员工普卡&quot;, 
     &quot;中国银行·员工金卡&quot;, &quot;中国银行·理财普卡&quot;, &quot;中国银行·理财金卡&quot;, &quot;中国银行·理财银卡&quot;, &quot;中国银行·理财白金卡&quot;, &quot;中国银行·中行金融IC卡白金卡&quot;, &quot;中国银行·中行金融IC卡普卡&quot;, 
     &quot;中国银行·中行金融IC卡金卡&quot;, &quot;中国银行·中银JCB卡金卡&quot;, &quot;中国银行·中银JCB卡普卡&quot;, &quot;中国银行·员工普卡&quot;, &quot;中国银行·个人普卡&quot;, &quot;中国银行·中银威士信用卡员&quot;, &quot;中国银行·中银威士信用卡员&quot;, 
     &quot;中国银行·个人白金卡&quot;, &quot;中国银行·中银威士信用卡&quot;, &quot;中国银行·长城公务卡&quot;, &quot;中国银行·长城电子借记卡&quot;, &quot;中国银行·中银万事达信用卡&quot;, &quot;中国银行·中银万事达信用卡&quot;, &quot;中国银行·中银万事达信用卡&quot;,
     &quot;中国银行·中银万事达信用卡&quot;, &quot;中国银行·中银万事达信用卡&quot;, &quot;中国银行·中银威士信用卡员&quot;, &quot;中国银行·长城万事达信用卡&quot;, &quot;中国银行·长城万事达信用卡&quot;, &quot;中国银行·长城万事达信用卡&quot;, 
     &quot;中国银行·长城万事达信用卡&quot;, &quot;中国银行·长城万事达信用卡&quot;, &quot;中国银行·中银奥运信用卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·长城万事达信用卡&quot;, 
     &quot;中国银行·长城公务卡&quot;, &quot;中国银行·长城公务卡&quot;, &quot;中国银行·中银万事达信用卡&quot;, &quot;中国银行·中银万事达信用卡&quot;, &quot;中国银行·长城人民币信用卡&quot;, &quot;中国银行·长城人民币信用卡&quot;, &quot;中国银行·长城人民币信用卡&quot;,
     &quot;中国银行·长城信用卡&quot;, &quot;中国银行·长城人民币信用卡&quot;, &quot;中国银行·长城人民币信用卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·银联单币贷记卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·长城信用卡&quot;,
     &quot;中国银行·长城电子借记卡&quot;, &quot;中国银行·长城人民币信用卡&quot;, &quot;中国银行·银联标准公务卡&quot;, &quot;中国银行·一卡双账户普卡&quot;, &quot;中国银行·财互通卡&quot;, &quot;中国银行·电子现金卡&quot;, &quot;中国银行·长城人民币信用卡&quot;, 
     &quot;中国银行·长城单位信用卡普卡&quot;, &quot;中国银行·中银女性主题信用卡&quot;, &quot;中国银行·长城单位信用卡金卡&quot;, &quot;中国银行·白金卡&quot;, &quot;中国银行·中职学生资助卡&quot;, &quot;中国银行·银联标准卡&quot;, &quot;中国银行·金融IC卡&quot;, 
     &quot;中国银行·长城社会保障卡&quot;, &quot;中国银行·世界卡&quot;, &quot;中国银行·社保联名卡&quot;, &quot;中国银行·社保联名卡&quot;, &quot;中国银行·医保联名卡&quot;, &quot;中国银行·医保联名卡&quot;, &quot;中国银行·公司借记卡&quot;, &quot;中国银行·银联美运顶级卡&quot;, 
     &quot;中国银行·长城福农借记卡金卡&quot;, &quot;中国银行·长城福农借记卡普卡&quot;, &quot;中国银行·中行金融IC卡普卡&quot;, &quot;中国银行·中行金融IC卡金卡&quot;, &quot;中国银行·中行金融IC卡白金卡&quot;, &quot;中国银行·长城银联公务IC卡白金卡&quot;, 
     &quot;中国银行·中银旅游信用卡&quot;, &quot;中国银行·长城银联公务IC卡金卡&quot;, &quot;中国银行·中国旅游卡&quot;, &quot;中国银行·武警军人保障卡&quot;, &quot;中国银行·社保联名借记IC卡&quot;, &quot;中国银行·社保联名借记IC卡&quot;, &quot;中国银行·医保联名借记IC卡&quot;, 
     &quot;中国银行·医保联名借记IC卡&quot;, &quot;中国银行·借记IC个人普卡&quot;, &quot;中国银行·借记IC个人金卡&quot;, &quot;中国银行·借记IC个人普卡&quot;, &quot;中国银行·借记IC白金卡&quot;, &quot;中国银行·借记IC钻石卡&quot;, &quot;中国银行·借记IC联名卡&quot;, 
     &quot;中国银行·普通高中学生资助卡&quot;, &quot;中国银行·长城环球通港澳台旅游金卡&quot;, &quot;中国银行·长城环球通港澳台旅游白金卡&quot;, &quot;中国银行·中银福农信用卡&quot;, &quot;中国银行金边分行·借记卡&quot;, &quot;中国银行雅加达分行·借记卡&quot;, 
     &quot;中国银行首尔分行·借记卡&quot;, &quot;中国银行澳门分行·人民币信用卡&quot;, &quot;中国银行澳门分行·人民币信用卡&quot;, &quot;中国银行澳门分行·中银卡&quot;, &quot;中国银行澳门分行·中银卡&quot;, &quot;中国银行澳门分行·中银卡&quot;, 
     &quot;中国银行澳门分行·中银银联双币商务卡&quot;, &quot;中国银行澳门分行·预付卡&quot;, &quot;中国银行澳门分行·澳门中国银行银联预付卡&quot;, &quot;中国银行澳门分行·澳门中国银行银联预付卡&quot;, &quot;中国银行澳门分行·熊猫卡&quot;, 
     &quot;中国银行澳门分行·财富卡&quot;, &quot;中国银行澳门分行·银联港币卡&quot;, &quot;中国银行澳门分行·银联澳门币卡&quot;, &quot;中国银行马尼拉分行·双币种借记卡&quot;, &quot;中国银行胡志明分行·借记卡&quot;, &quot;中国银行曼谷分行·借记卡&quot;,
     &quot;中国银行曼谷分行·长城信用卡环球通&quot;, &quot;中国银行曼谷分行·借记卡&quot;, &quot;建设银行·龙卡准贷记卡&quot;, &quot;建设银行·龙卡准贷记卡金卡&quot;, &quot;建设银行·中职学生资助卡&quot;, &quot;建设银行·乐当家银卡VISA&quot;, &quot;建设银行·乐当家金卡VISA&quot;, 
     &quot;建设银行·乐当家白金卡&quot;, &quot;建设银行·龙卡普通卡VISA&quot;, &quot;建设银行·龙卡储蓄卡&quot;, &quot;建设银行·VISA准贷记卡(银联卡)&quot;, &quot;建设银行·VISA准贷记金卡&quot;, &quot;建设银行·乐当家&quot;, &quot;建设银行·乐当家&quot;, &quot;建设银行·准贷记金卡&quot;, 
     &quot;建设银行·乐当家白金卡&quot;, &quot;建设银行·金融复合IC卡&quot;, &quot;建设银行·银联标准卡&quot;, &quot;建设银行·银联理财钻石卡&quot;, &quot;建设银行·金融IC卡&quot;, &quot;建设银行·理财白金卡&quot;, &quot;建设银行·社保IC卡&quot;, &quot;建设银行·财富卡私人银行卡&quot;, 
     &quot;建设银行·理财金卡&quot;, &quot;建设银行·福农卡&quot;, &quot;建设银行·武警军人保障卡&quot;, &quot;建设银行·龙卡通&quot;, &quot;建设银行·银联储蓄卡&quot;, &quot;建设银行·龙卡储蓄卡(银联卡)&quot;, &quot;建设银行·准贷记卡&quot;, &quot;建设银行·理财白金卡&quot;, &quot;建设银行·理财金卡&quot;, 
     &quot;建设银行·准贷记卡普卡&quot;, &quot;建设银行·准贷记卡金卡&quot;, &quot;建设银行·龙卡信用卡&quot;, &quot;建设银行·建行陆港通龙卡&quot;, &quot;中国建设银行·普通高中学生资助卡&quot;, &quot;中国建设银行·中国旅游卡&quot;, &quot;中国建设银行·龙卡JCB金卡&quot;, 
     &quot;中国建设银行·龙卡JCB白金卡&quot;, &quot;中国建设银行·龙卡JCB普卡&quot;, &quot;中国建设银行·龙卡贷记卡公司卡&quot;, &quot;中国建设银行·龙卡贷记卡&quot;, &quot;中国建设银行·龙卡国际普通卡VISA&quot;, &quot;中国建设银行·龙卡国际金卡VISA&quot;, 
     &quot;中国建设银行·VISA白金信用卡&quot;, &quot;中国建设银行·龙卡国际白金卡&quot;, &quot;中国建设银行·龙卡国际普通卡MASTER&quot;, &quot;中国建设银行·龙卡国际金卡MASTER&quot;, &quot;中国建设银行·龙卡万事达金卡&quot;, &quot;中国建设银行·龙卡贷记卡&quot;,
     &quot;中国建设银行·龙卡万事达白金卡&quot;, &quot;中国建设银行·龙卡贷记卡&quot;, &quot;中国建设银行·龙卡万事达信用卡&quot;, &quot;中国建设银行·龙卡人民币信用卡&quot;, &quot;中国建设银行·龙卡人民币信用金卡&quot;, &quot;中国建设银行·龙卡人民币白金卡&quot;, 
     &quot;中国建设银行·龙卡IC信用卡普卡&quot;, &quot;中国建设银行·龙卡IC信用卡金卡&quot;, &quot;中国建设银行·龙卡IC信用卡白金卡&quot;, &quot;中国建设银行·龙卡银联公务卡普卡&quot;, &quot;中国建设银行·龙卡银联公务卡金卡&quot;, &quot;中国建设银行·中国旅游卡&quot;, 
     &quot;中国建设银行·中国旅游卡&quot;, &quot;中国建设银行·龙卡IC公务卡&quot;, &quot;中国建设银行·龙卡IC公务卡&quot;, &quot;交通银行·交行预付卡&quot;, &quot;交通银行·世博预付IC卡&quot;, &quot;交通银行·太平洋互连卡&quot;, &quot;交通银行·太平洋万事顺卡&quot;, 
     &quot;交通银行·太平洋互连卡(银联卡)&quot;, &quot;交通银行·太平洋白金信用卡&quot;, &quot;交通银行·太平洋双币贷记卡&quot;, &quot;交通银行·太平洋双币贷记卡&quot;, &quot;交通银行·太平洋双币贷记卡&quot;, &quot;交通银行·太平洋白金信用卡&quot;, 
     &quot;交通银行·太平洋双币贷记卡&quot;, &quot;交通银行·太平洋万事顺卡&quot;, &quot;交通银行·太平洋人民币贷记卡&quot;, &quot;交通银行·太平洋人民币贷记卡&quot;, &quot;交通银行·太平洋双币贷记卡&quot;, &quot;交通银行·太平洋准贷记卡&quot;, &quot;交通银行·太平洋准贷记卡&quot;,
     &quot;交通银行·太平洋准贷记卡&quot;, &quot;交通银行·太平洋准贷记卡&quot;, &quot;交通银行·太平洋借记卡&quot;, &quot;交通银行·太平洋借记卡&quot;, &quot;交通银行·太平洋人民币贷记卡&quot;, &quot;交通银行·太平洋借记卡&quot;, &quot;交通银行·太平洋MORE卡&quot;, &quot;交通银行·白金卡&quot;, 
     &quot;交通银行·交通银行公务卡普卡&quot;, &quot;交通银行·太平洋人民币贷记卡&quot;, &quot;交通银行·太平洋互连卡&quot;, &quot;交通银行·太平洋借记卡&quot;, &quot;交通银行·太平洋万事顺卡&quot;, &quot;交通银行·太平洋贷记卡(银联卡)&quot;, &quot;交通银行·太平洋贷记卡(银联卡)&quot;, 
     &quot;交通银行·太平洋贷记卡(银联卡)&quot;, &quot;交通银行·太平洋贷记卡(银联卡)&quot;, &quot;交通银行·交通银行公务卡金卡&quot;, &quot;交通银行·交银IC卡&quot;, &quot;交通银行香港分行·交通银行港币借记卡&quot;, &quot;交通银行香港分行·港币礼物卡&quot;, 
     &quot;交通银行香港分行·双币种信用卡&quot;, &quot;交通银行香港分行·双币种信用卡&quot;, &quot;交通银行香港分行·双币卡&quot;, &quot;交通银行香港分行·银联人民币卡&quot;, &quot;交通银行澳门分行·银联借记卡&quot;, &quot;中信银行·中信借记卡&quot;, &quot;中信银行·中信借记卡&quot;, 
     &quot;中信银行·中信国际借记卡&quot;, &quot;中信银行·中信国际借记卡&quot;, &quot;中信银行·中国旅行卡&quot;, &quot;中信银行·中信借记卡(银联卡)&quot;, &quot;中信银行·中信借记卡(银联卡)&quot;, &quot;中信银行·中信贵宾卡(银联卡)&quot;, &quot;中信银行·中信理财宝金卡&quot;, 
     &quot;中信银行·中信理财宝白金卡&quot;, &quot;中信银行·中信钻石卡&quot;, &quot;中信银行·中信钻石卡&quot;, &quot;中信银行·中信借记卡&quot;, &quot;中信银行·中信理财宝(银联卡)&quot;, &quot;中信银行·中信理财宝(银联卡)&quot;, &quot;中信银行·中信理财宝(银联卡)&quot;,
     &quot;中信银行·借记卡&quot;, &quot;中信银行·理财宝IC卡&quot;, &quot;中信银行·理财宝IC卡&quot;, &quot;中信银行·理财宝IC卡&quot;, &quot;中信银行·理财宝IC卡&quot;, &quot;中信银行·理财宝IC卡&quot;, &quot;中信银行·主账户复合电子现金卡&quot;, &quot;光大银行·阳光商旅信用卡&quot;, 
     &quot;光大银行·阳光商旅信用卡&quot;, &quot;光大银行·阳光商旅信用卡&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, 
     &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, 
     &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·借记卡普卡&quot;, &quot;光大银行·社会保障IC卡&quot;, &quot;光大银行·IC借记卡普卡&quot;, &quot;光大银行·手机支付卡&quot;, &quot;光大银行·联名IC卡普卡&quot;, 
     &quot;光大银行·借记IC卡白金卡&quot;, &quot;光大银行·借记IC卡金卡&quot;, &quot;光大银行·阳光旅行卡&quot;, &quot;光大银行·借记IC卡钻石卡&quot;, &quot;光大银行·联名IC卡金卡&quot;, &quot;光大银行·联名IC卡白金卡&quot;, &quot;光大银行·联名IC卡钻石卡&quot;, &quot;华夏银行·华夏卡(银联卡)&quot;,
     &quot;华夏银行·华夏白金卡&quot;, &quot;华夏银行·华夏普卡&quot;, &quot;华夏银行·华夏金卡&quot;, &quot;华夏银行·华夏白金卡&quot;, &quot;华夏银行·华夏钻石卡&quot;, &quot;华夏银行·华夏卡(银联卡)&quot;, &quot;华夏银行·华夏至尊金卡(银联卡)&quot;, &quot;华夏银行·华夏丽人卡(银联卡)&quot;,
     &quot;华夏银行·华夏万通卡&quot;, &quot;民生银行·民生借记卡(银联卡)&quot;, &quot;民生银行·民生银联借记卡－金卡&quot;, &quot;民生银行·钻石卡&quot;, &quot;民生银行·民生借记卡(银联卡)&quot;, &quot;民生银行·民生借记卡(银联卡)&quot;, &quot;民生银行·民生借记卡(银联卡)&quot;,
     &quot;民生银行·民生借记卡&quot;, &quot;民生银行·民生国际卡&quot;, &quot;民生银行·民生国际卡(银卡)&quot;, &quot;民生银行·民生国际卡(欧元卡)&quot;, &quot;民生银行·民生国际卡(澳元卡)&quot;, &quot;民生银行·民生国际卡&quot;, &quot;民生银行·民生国际卡&quot;, &quot;民生银行·薪资理财卡&quot;,
     &quot;民生银行·借记卡普卡&quot;, &quot;民生银行·民生MasterCard&quot;, &quot;民生银行·民生MasterCard&quot;, &quot;民生银行·民生MasterCard&quot;, &quot;民生银行·民生MasterCard&quot;, &quot;民生银行·民生JCB信用卡&quot;, &quot;民生银行·民生JCB金卡&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, 
     &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生JCB普卡&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;,
     &quot;民生银行·民生信用卡(银联卡)&quot;, &quot;民生银行·民生信用卡(银联卡)&quot;, &quot;民生银行·民生银联白金信用卡&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生银联个人白金卡&quot;, &quot;民生银行·公务卡金卡&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, 
     &quot;民生银行·民生银联商务信用卡&quot;, &quot;民生银行·民VISA无限卡&quot;, &quot;民生银行·民生VISA商务白金卡&quot;, &quot;民生银行·民生万事达钛金卡&quot;, &quot;民生银行·民生万事达世界卡&quot;, &quot;民生银行·民生万事达白金公务卡&quot;, &quot;民生银行·民生JCB白金卡&quot;, 
     &quot;民生银行·银联标准金卡&quot;, &quot;民生银行·银联芯片普卡&quot;, &quot;民生银行·民生运通双币信用卡普卡&quot;, &quot;民生银行·民生运通双币信用卡金卡&quot;, &quot;民生银行·民生运通双币信用卡钻石卡&quot;, &quot;民生银行·民生运通双币标准信用卡白金卡&quot;, 
     &quot;民生银行·银联芯片金卡&quot;, &quot;民生银行·银联芯片白金卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·两地一卡通&quot;, 
     &quot;招商银行·招行国际卡(银联卡)&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·VISA商务信用卡&quot;, &quot;招商银行·招行国际卡(银联卡)&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招行国际卡(银联卡)&quot;, 
     &quot;招商银行·世纪金花联名信用卡&quot;, &quot;招商银行·招行国际卡(银联卡)&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·万事达信用卡&quot;, &quot;招商银行·万事达信用卡&quot;, &quot;招商银行·万事达信用卡&quot;, &quot;招商银行·万事达信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, 
     &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·一卡通(银联卡)&quot;, &quot;招商银行·万事达信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, 
     &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·一卡通(银联卡)&quot;, &quot;招商银行·公司卡(银联卡)&quot;, &quot;招商银行·金卡&quot;, &quot;招商银行·招行一卡通&quot;, &quot;招商银行·招行一卡通&quot;, &quot;招商银行·万事达信用卡&quot;, &quot;招商银行·金葵花卡&quot;, &quot;招商银行·电子现金卡&quot;,
     &quot;招商银行·银联IC普卡&quot;, &quot;招商银行·银联IC金卡&quot;, &quot;招商银行·银联金葵花IC卡&quot;, &quot;招商银行·IC公务卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行信用卡中心·美国运通绿卡&quot;, &quot;招商银行信用卡中心·美国运通金卡&quot;, 
     &quot;招商银行信用卡中心·美国运通商务绿卡&quot;, &quot;招商银行信用卡中心·美国运通商务金卡&quot;, &quot;招商银行信用卡中心·VISA信用卡&quot;, &quot;招商银行信用卡中心·MASTER信用卡&quot;, &quot;招商银行信用卡中心·MASTER信用金卡&quot;, 
     &quot;招商银行信用卡中心·银联标准公务卡(金卡)&quot;, &quot;招商银行信用卡中心·VISA信用卡&quot;, &quot;招商银行信用卡中心·银联标准财政公务卡&quot;, &quot;招商银行信用卡中心·芯片IC信用卡&quot;, &quot;招商银行信用卡中心·芯片IC信用卡&quot;, 
     &quot;招商银行香港分行·香港一卡通&quot;, &quot;兴业银行·兴业卡(银联卡)&quot;, &quot;兴业银行·兴业卡(银联标准卡)&quot;, &quot;兴业银行·兴业自然人生理财卡&quot;, &quot;兴业银行·兴业智能卡(银联卡)&quot;, &quot;兴业银行·兴业智能卡&quot;, 
     &quot;兴业银行·visa标准双币个人普卡&quot;, &quot;兴业银行·VISA商务普卡&quot;, &quot;兴业银行·VISA商务金卡&quot;, &quot;兴业银行·VISA运动白金信用卡&quot;, &quot;兴业银行·万事达信用卡(银联卡)&quot;, &quot;兴业银行·VISA信用卡(银联卡)&quot;, 
     &quot;兴业银行·加菲猫信用卡&quot;, &quot;兴业银行·个人白金卡&quot;, &quot;兴业银行·银联信用卡(银联卡)&quot;, &quot;兴业银行·银联信用卡(银联卡)&quot;, &quot;兴业银行·银联白金信用卡&quot;, &quot;兴业银行·银联标准公务卡&quot;, &quot;兴业银行·VISA信用卡(银联卡)&quot;,
     &quot;兴业银行·万事达信用卡(银联卡)&quot;, &quot;兴业银行·银联标准贷记普卡&quot;, &quot;兴业银行·银联标准贷记金卡&quot;, &quot;兴业银行·银联标准贷记金卡&quot;, &quot;兴业银行·银联标准贷记金卡&quot;, &quot;兴业银行·兴业信用卡&quot;, &quot;兴业银行·兴业信用卡&quot;,
     &quot;兴业银行·兴业信用卡&quot;, &quot;兴业银行·银联标准贷记普卡&quot;, &quot;兴业银行·银联标准贷记普卡&quot;, &quot;兴业银行·兴业芯片普卡&quot;, &quot;兴业银行·兴业芯片金卡&quot;, &quot;兴业银行·兴业芯片白金卡&quot;, &quot;兴业银行·兴业芯片钻石卡&quot;, &quot;浦东发展银行·浦发JCB金卡&quot;, 
     &quot;浦东发展银行·浦发JCB白金卡&quot;, &quot;浦东发展银行·信用卡VISA普通&quot;, &quot;浦东发展银行·信用卡VISA金卡&quot;, &quot;浦东发展银行·浦发银行VISA年青卡&quot;, &quot;浦东发展银行·VISA白金信用卡&quot;, &quot;浦东发展银行·浦发万事达白金卡&quot;, &quot;浦东发展银行·浦发JCB普卡&quot;, 
     &quot;浦东发展银行·浦发万事达金卡&quot;, &quot;浦东发展银行·浦发万事达普卡&quot;, &quot;浦东发展银行·浦发单币卡&quot;, &quot;浦东发展银行·浦发银联单币麦兜普卡&quot;, &quot;浦东发展银行·东方轻松理财卡&quot;, &quot;浦东发展银行·东方-轻松理财卡普卡&quot;, &quot;浦东发展银行·东方轻松理财卡&quot;,
     &quot;浦东发展银行·东方轻松理财智业金卡&quot;, &quot;浦东发展银行·东方卡(银联卡)&quot;, &quot;浦东发展银行·东方卡(银联卡)&quot;, &quot;浦东发展银行·东方卡(银联卡)&quot;, &quot;浦东发展银行·公务卡金卡&quot;, &quot;浦东发展银行·公务卡普卡&quot;, &quot;浦东发展银行·东方卡&quot;,
     &quot;浦东发展银行·东方卡&quot;, &quot;浦东发展银行·浦发单币卡&quot;, &quot;浦东发展银行·浦发联名信用卡&quot;, &quot;浦东发展银行·浦发银联白金卡&quot;, &quot;浦东发展银行·轻松理财普卡&quot;, &quot;浦东发展银行·移动联名卡&quot;, &quot;浦东发展银行·轻松理财消贷易卡&quot;, 
     &quot;浦东发展银行·轻松理财普卡（复合卡）&quot;, &quot;浦东发展银行·贷记卡&quot;, &quot;浦东发展银行·贷记卡&quot;, &quot;浦东发展银行·东方借记卡（复合卡）&quot;, &quot;浦东发展银行·电子现金卡（IC卡）&quot;, &quot;浦东发展银行·移动浦发联名卡&quot;,
     &quot;浦东发展银行·东方-标准准贷记卡&quot;, &quot;浦东发展银行·轻松理财金卡（复合卡）&quot;, &quot;浦东发展银行·轻松理财白金卡（复合卡）&quot;, &quot;浦东发展银行·轻松理财钻石卡（复合卡）&quot;, &quot;浦东发展银行·东方卡&quot;, &quot;恒丰银行·九州IC卡&quot;, 
     &quot;恒丰银行·九州借记卡(银联卡)&quot;, &quot;恒丰银行·九州借记卡(银联卡)&quot;, &quot;天津市商业银行·银联卡(银联卡)&quot;, &quot;烟台商业银行·金通卡&quot;, &quot;潍坊银行·鸢都卡(银联卡)&quot;, &quot;潍坊银行·鸳都卡(银联卡)&quot;, &quot;临沂商业银行·沂蒙卡(银联卡)&quot;, 
     &quot;临沂商业银行·沂蒙卡(银联卡)&quot;, &quot;日照市商业银行·黄海卡&quot;, &quot;日照市商业银行·黄海卡(银联卡)&quot;, &quot;浙商银行·商卡&quot;, &quot;浙商银行·商卡&quot;, &quot;渤海银行·浩瀚金卡&quot;, &quot;渤海银行·渤海银行借记卡&quot;, &quot;渤海银行·金融IC卡&quot;, 
     &quot;渤海银行·渤海银行公司借记卡&quot;, &quot;星展银行·星展银行借记卡&quot;, &quot;星展银行·星展银行借记卡&quot;, &quot;恒生银行·恒生通财卡&quot;, &quot;恒生银行·恒生优越通财卡&quot;, &quot;新韩银行·新韩卡&quot;, &quot;上海银行·慧通钻石卡&quot;, &quot;上海银行·慧通金卡&quot;, 
     &quot;上海银行·私人银行卡&quot;, &quot;上海银行·综合保险卡&quot;, &quot;上海银行·申卡社保副卡(有折)&quot;, &quot;上海银行·申卡社保副卡(无折)&quot;, &quot;上海银行·白金IC借记卡&quot;, &quot;上海银行·慧通白金卡(配折)&quot;, &quot;上海银行·慧通白金卡(不配折)&quot;,
     &quot;上海银行·申卡(银联卡)&quot;, &quot;上海银行·申卡借记卡&quot;, &quot;上海银行·银联申卡(银联卡)&quot;, &quot;上海银行·单位借记卡&quot;, &quot;上海银行·首发纪念版IC卡&quot;, &quot;上海银行·申卡贷记卡&quot;, &quot;上海银行·申卡贷记卡&quot;, &quot;上海银行·J分期付款信用卡&quot;, 
     &quot;上海银行·申卡贷记卡&quot;, &quot;上海银行·申卡贷记卡&quot;, &quot;上海银行·上海申卡IC&quot;, &quot;上海银行·申卡贷记卡&quot;, &quot;上海银行·申卡贷记卡普通卡&quot;, &quot;上海银行·申卡贷记卡金卡&quot;, &quot;上海银行·万事达白金卡&quot;, &quot;上海银行·万事达星运卡&quot;, 
     &quot;上海银行·申卡贷记卡金卡&quot;, &quot;上海银行·申卡贷记卡普通卡&quot;, &quot;上海银行·安融卡&quot;, &quot;上海银行·分期付款信用卡&quot;, &quot;上海银行·信用卡&quot;, &quot;上海银行·个人公务卡&quot;, &quot;上海银行·安融卡&quot;, &quot;上海银行·上海银行银联白金卡&quot;,
     &quot;上海银行·贷记IC卡&quot;, &quot;上海银行·中国旅游卡（IC普卡）&quot;, &quot;上海银行·中国旅游卡（IC金卡）&quot;, &quot;上海银行·中国旅游卡（IC白金卡）&quot;, &quot;上海银行·万事达钻石卡&quot;, &quot;上海银行·淘宝IC普卡&quot;, &quot;北京银行·京卡借记卡&quot;, 
     &quot;北京银行·京卡(银联卡)&quot;, &quot;北京银行·京卡借记卡&quot;, &quot;北京银行·京卡&quot;, &quot;北京银行·京卡&quot;, &quot;北京银行·借记IC卡&quot;, &quot;北京银行·京卡贵宾金卡&quot;, &quot;北京银行·京卡贵宾白金卡&quot;, &quot;吉林银行·君子兰一卡通(银联卡)&quot;, 
     &quot;吉林银行·君子兰卡(银联卡)&quot;, &quot;吉林银行·长白山金融IC卡&quot;, &quot;吉林银行·信用卡&quot;, &quot;吉林银行·信用卡&quot;, &quot;吉林银行·公务卡&quot;, &quot;镇江市商业银行·金山灵通卡(银联卡)&quot;, &quot;镇江市商业银行·金山灵通卡(银联卡)&quot;,
     &quot;宁波银行·银联标准卡&quot;, &quot;宁波银行·汇通借记卡&quot;, &quot;宁波银行·汇通卡(银联卡)&quot;, &quot;宁波银行·明州卡&quot;, &quot;宁波银行·汇通借记卡&quot;, &quot;宁波银行·汇通国际卡银联双币卡&quot;, &quot;宁波银行·汇通国际卡银联双币卡&quot;, 
     &quot;平安银行·新磁条借记卡&quot;, &quot;平安银行·平安银行IC借记卡&quot;, &quot;平安银行·万事顺卡&quot;, &quot;平安银行·平安银行借记卡&quot;, &quot;平安银行·平安银行借记卡&quot;, &quot;平安银行·万事顺借记卡&quot;, &quot;焦作市商业银行·月季借记卡(银联卡)&quot;, 
     &quot;焦作市商业银行·月季城市通(银联卡)&quot;, &quot;焦作市商业银行·中国旅游卡&quot;, &quot;温州银行·金鹿卡&quot;, &quot;汉口银行·九通卡(银联卡)&quot;, &quot;汉口银行·九通卡&quot;, &quot;汉口银行·借记卡&quot;, &quot;汉口银行·借记卡&quot;, &quot;盛京银行·玫瑰卡&quot;, 
     &quot;盛京银行·玫瑰IC卡&quot;, &quot;盛京银行·玫瑰IC卡&quot;, &quot;盛京银行·玫瑰卡&quot;, &quot;盛京银行·玫瑰卡&quot;, &quot;盛京银行·玫瑰卡(银联卡)&quot;, &quot;盛京银行·玫瑰卡(银联卡)&quot;, &quot;盛京银行·盛京银行公务卡&quot;, &quot;洛阳银行·都市一卡通(银联卡)&quot;,
     &quot;洛阳银行·都市一卡通(银联卡)&quot;, &quot;洛阳银行·--&quot;, &quot;大连银行·北方明珠卡&quot;, &quot;大连银行·人民币借记卡&quot;, &quot;大连银行·金融IC借记卡&quot;, &quot;大连银行·大连市社会保障卡&quot;, &quot;大连银行·借记IC卡&quot;, &quot;大连银行·借记IC卡&quot;,
     &quot;大连银行·大连市商业银行贷记卡&quot;, &quot;大连银行·大连市商业银行贷记卡&quot;, &quot;大连银行·银联标准公务卡&quot;, &quot;苏州市商业银行·姑苏卡&quot;, &quot;杭州商业银行·西湖卡&quot;, &quot;杭州商业银行·西湖卡&quot;, &quot;杭州商业银行·借记IC卡&quot;, 
     &quot;杭州商业银行·&quot;, &quot;南京银行·梅花信用卡公务卡&quot;, &quot;南京银行·梅花信用卡商务卡&quot;, &quot;南京银行·梅花贷记卡(银联卡)&quot;, &quot;南京银行·梅花借记卡(银联卡)&quot;, &quot;南京银行·白金卡&quot;, &quot;南京银行·商务卡&quot;, &quot;东莞市商业银行·万顺通卡(银联卡)&quot;, 
     &quot;东莞市商业银行·万顺通卡(银联卡)&quot;, &quot;东莞市商业银行·万顺通借记卡&quot;, &quot;东莞市商业银行·社会保障卡&quot;, &quot;乌鲁木齐市商业银行·雪莲借记IC卡&quot;, &quot;乌鲁木齐市商业银行·乌鲁木齐市公务卡&quot;, &quot;乌鲁木齐市商业银行·福农卡贷记卡&quot;, 
     &quot;乌鲁木齐市商业银行·福农卡准贷记卡&quot;, &quot;乌鲁木齐市商业银行·雪莲准贷记卡&quot;, &quot;乌鲁木齐市商业银行·雪莲贷记卡(银联卡)&quot;, &quot;乌鲁木齐市商业银行·雪莲借记IC卡&quot;, &quot;乌鲁木齐市商业银行·雪莲借记卡(银联卡)&quot;, 
     &quot;乌鲁木齐市商业银行·雪莲卡(银联卡)&quot;, &quot;绍兴银行·兰花IC借记卡&quot;, &quot;绍兴银行·社保IC借记卡&quot;, &quot;绍兴银行·兰花公务卡&quot;, &quot;成都商业银行·芙蓉锦程福农卡&quot;, &quot;成都商业银行·芙蓉锦程天府通卡&quot;, &quot;成都商业银行·锦程卡(银联卡)&quot;, 
     &quot;成都商业银行·锦程卡金卡&quot;, &quot;成都商业银行·锦程卡定活一卡通金卡&quot;, &quot;成都商业银行·锦程卡定活一卡通&quot;, &quot;成都商业银行·锦程力诚联名卡&quot;, &quot;成都商业银行·锦程力诚联名卡&quot;, &quot;成都商业银行·锦程卡(银联卡)&quot;, &quot;抚顺银行·借记IC卡&quot;, 
     &quot;临商银行·借记卡&quot;, &quot;宜昌市商业银行·三峡卡(银联卡)&quot;, &quot;宜昌市商业银行·信用卡(银联卡)&quot;, &quot;葫芦岛市商业银行·一通卡&quot;, &quot;葫芦岛市商业银行·一卡通(银联卡)&quot;, &quot;天津市商业银行·津卡&quot;, &quot;天津市商业银行·津卡贷记卡(银联卡)&quot;, 
     &quot;天津市商业银行·贷记IC卡&quot;, &quot;天津市商业银行·--&quot;, &quot;天津银行·商务卡&quot;, &quot;宁夏银行·宁夏银行公务卡&quot;, &quot;宁夏银行·宁夏银行福农贷记卡&quot;, &quot;宁夏银行·如意卡(银联卡)&quot;, &quot;宁夏银行·宁夏银行福农借记卡&quot;, &quot;宁夏银行·如意借记卡&quot;, 
     &quot;宁夏银行·如意IC卡&quot;, &quot;宁夏银行·宁夏银行如意借记卡&quot;, &quot;宁夏银行·中国旅游卡&quot;, &quot;齐商银行·金达卡(银联卡)&quot;, &quot;齐商银行·金达借记卡(银联卡)&quot;, &quot;齐商银行·金达IC卡&quot;, &quot;徽商银行·黄山卡&quot;, &quot;徽商银行·黄山卡&quot;, &quot;徽商银行·借记卡&quot;,
     &quot;徽商银行·徽商银行中国旅游卡（安徽）&quot;, &quot;徽商银行合肥分行·黄山卡&quot;, &quot;徽商银行芜湖分行·黄山卡(银联卡)&quot;, &quot;徽商银行马鞍山分行·黄山卡(银联卡)&quot;, &quot;徽商银行淮北分行·黄山卡(银联卡)&quot;, &quot;徽商银行安庆分行·黄山卡(银联卡)&quot;, 
     &quot;重庆银行·长江卡(银联卡)&quot;, &quot;重庆银行·长江卡(银联卡)&quot;, &quot;重庆银行·长江卡&quot;, &quot;重庆银行·借记IC卡&quot;, &quot;哈尔滨银行·丁香一卡通(银联卡)&quot;, &quot;哈尔滨银行·丁香借记卡(银联卡)&quot;, &quot;哈尔滨银行·丁香卡&quot;, &quot;哈尔滨银行·福农借记卡&quot;, 
     &quot;无锡市商业银行·太湖金保卡(银联卡)&quot;, &quot;丹东银行·借记IC卡&quot;, &quot;丹东银行·丹东银行公务卡&quot;, &quot;兰州银行·敦煌卡&quot;, &quot;南昌银行·金瑞卡(银联卡)&quot;, &quot;南昌银行·南昌银行借记卡&quot;, &quot;南昌银行·金瑞卡&quot;, &quot;晋商银行·晋龙一卡通&quot;, 
     &quot;晋商银行·晋龙一卡通&quot;, &quot;晋商银行·晋龙卡(银联卡)&quot;, &quot;青岛银行·金桥通卡&quot;, &quot;青岛银行·金桥卡(银联卡)&quot;, &quot;青岛银行·金桥卡(银联卡)&quot;, &quot;青岛银行·金桥卡&quot;, &quot;青岛银行·借记IC卡&quot;, &quot;吉林银行·雾凇卡(银联卡)&quot;, 
     &quot;吉林银行·雾凇卡(银联卡)&quot;, &quot;南通商业银行·金桥卡(银联卡)&quot;, &quot;南通商业银行·金桥卡(银联卡)&quot;, &quot;日照银行·黄海卡、财富卡借记卡&quot;, &quot;鞍山银行·千山卡(银联卡)&quot;, &quot;鞍山银行·千山卡(银联卡)&quot;, &quot;鞍山银行·千山卡&quot;, 
     &quot;青海银行·三江银行卡(银联卡)&quot;, &quot;青海银行·三江卡&quot;, &quot;台州银行·大唐贷记卡&quot;, &quot;台州银行·大唐准贷记卡&quot;, &quot;台州银行·大唐卡(银联卡)&quot;, &quot;台州银行·大唐卡&quot;, &quot;台州银行·借记卡&quot;, &quot;台州银行·公务卡&quot;, 
     &quot;泉州银行·海峡银联卡(银联卡)&quot;, &quot;泉州银行·海峡储蓄卡&quot;, &quot;泉州银行·海峡银联卡(银联卡)&quot;, &quot;泉州银行·海峡卡&quot;, &quot;泉州银行·公务卡&quot;, &quot;昆明商业银行·春城卡(银联卡)&quot;, &quot;昆明商业银行·春城卡(银联卡)&quot;,
     &quot;昆明商业银行·富滇IC卡（复合卡）&quot;, &quot;阜新银行·借记IC卡&quot;, &quot;嘉兴银行·南湖借记卡(银联卡)&quot;, &quot;廊坊银行·白金卡&quot;, &quot;廊坊银行·金卡&quot;, &quot;廊坊银行·银星卡(银联卡)&quot;, &quot;廊坊银行·龙凤呈祥卡&quot;, &quot;内蒙古银行·百灵卡(银联卡)&quot;,
     &quot;内蒙古银行·成吉思汗卡&quot;, &quot;湖州市商业银行·百合卡&quot;, &quot;湖州市商业银行·&quot;, &quot;沧州银行·狮城卡&quot;, &quot;南宁市商业银行·桂花卡(银联卡)&quot;, &quot;包商银行·雄鹰卡(银联卡)&quot;, &quot;包商银行·包头市商业银行借记卡&quot;, &quot;包商银行·雄鹰贷记卡&quot;,
     &quot;包商银行·包商银行内蒙古自治区公务卡&quot;, &quot;包商银行·贷记卡&quot;, &quot;包商银行·借记卡&quot;, &quot;连云港市商业银行·金猴神通借记卡&quot;, &quot;威海商业银行·通达卡(银联卡)&quot;, &quot;威海市商业银行·通达借记IC卡&quot;, &quot;攀枝花市商业银行·攀枝花卡(银联卡)&quot;,
     &quot;攀枝花市商业银行·攀枝花卡&quot;, &quot;绵阳市商业银行·科技城卡(银联卡)&quot;, &quot;泸州市商业银行·酒城卡(银联卡)&quot;, &quot;泸州市商业银行·酒城IC卡&quot;, &quot;大同市商业银行·云冈卡(银联卡)&quot;, &quot;三门峡银行·天鹅卡(银联卡)&quot;, &quot;广东南粤银行·南珠卡(银联卡)&quot;, 
     &quot;张家口市商业银行·好运IC借记卡&quot;, &quot;桂林市商业银行·漓江卡(银联卡)&quot;, &quot;龙江银行·福农借记卡&quot;, &quot;龙江银行·联名借记卡&quot;, &quot;龙江银行·福农借记卡&quot;, &quot;龙江银行·龙江IC卡&quot;, &quot;龙江银行·社会保障卡&quot;, &quot;龙江银行·--&quot;, 
     &quot;江苏长江商业银行·长江卡&quot;, &quot;徐州市商业银行·彭城借记卡(银联卡)&quot;, &quot;南充市商业银行·借记IC卡&quot;, &quot;南充市商业银行·熊猫团团卡&quot;, &quot;莱商银行·银联标准卡&quot;, &quot;莱芜银行·金凤卡&quot;, &quot;莱商银行·借记IC卡&quot;, &quot;德阳银行·锦程卡定活一卡通&quot;, 
     &quot;德阳银行·锦程卡定活一卡通金卡&quot;, &quot;德阳银行·锦程卡定活一卡通&quot;, &quot;唐山市商业银行·唐山市城通卡&quot;, &quot;曲靖市商业银行·珠江源卡&quot;, &quot;曲靖市商业银行·珠江源IC卡&quot;, &quot;温州银行·金鹿信用卡&quot;, &quot;温州银行·金鹿信用卡&quot;,
     &quot;温州银行·金鹿公务卡&quot;, &quot;温州银行·贷记IC卡&quot;, &quot;汉口银行·汉口银行贷记卡&quot;, &quot;汉口银行·汉口银行贷记卡&quot;, &quot;汉口银行·九通香港旅游贷记普卡&quot;, &quot;汉口银行·九通香港旅游贷记金卡&quot;, &quot;汉口银行·贷记卡&quot;, &quot;汉口银行·九通公务卡&quot;, 
     &quot;江苏银行·聚宝借记卡&quot;, &quot;江苏银行·月季卡&quot;, &quot;江苏银行·紫金卡&quot;, &quot;江苏银行·绿扬卡(银联卡)&quot;, &quot;江苏银行·月季卡(银联卡)&quot;, &quot;江苏银行·九州借记卡(银联卡)&quot;, &quot;江苏银行·月季卡(银联卡)&quot;, &quot;江苏银行·聚宝惠民福农卡&quot;, 
     &quot;江苏银行·江苏银行聚宝IC借记卡&quot;, &quot;江苏银行·聚宝IC借记卡VIP卡&quot;, &quot;长治市商业银行·长治商行银联晋龙卡&quot;, &quot;承德市商业银行·热河卡&quot;, &quot;承德银行·借记IC卡&quot;, &quot;德州银行·长河借记卡&quot;, &quot;德州银行·--&quot;, &quot;遵义市商业银行·社保卡&quot;, 
     &quot;遵义市商业银行·尊卡&quot;, &quot;邯郸市商业银行·邯银卡&quot;, &quot;邯郸市商业银行·邯郸银行贵宾IC借记卡&quot;, &quot;安顺市商业银行·黄果树福农卡&quot;, &quot;安顺市商业银行·黄果树借记卡&quot;, &quot;江苏银行·紫金信用卡(公务卡)&quot;, &quot;江苏银行·紫金信用卡&quot;,
     &quot;江苏银行·天翼联名信用卡&quot;, &quot;平凉市商业银行·广成卡&quot;, &quot;玉溪市商业银行·红塔卡&quot;, &quot;玉溪市商业银行·红塔卡&quot;, &quot;浙江民泰商业银行·金融IC卡&quot;, &quot;浙江民泰商业银行·民泰借记卡&quot;, &quot;浙江民泰商业银行·金融IC卡C卡&quot;, 
     &quot;浙江民泰商业银行·银联标准普卡金卡&quot;, &quot;浙江民泰商业银行·商惠通&quot;, &quot;上饶市商业银行·三清山卡&quot;, &quot;东营银行·胜利卡&quot;, &quot;泰安市商业银行·岱宗卡&quot;, &quot;泰安市商业银行·市民一卡通&quot;, &quot;浙江稠州商业银行·义卡&quot;,
     &quot;浙江稠州商业银行·义卡借记IC卡&quot;, &quot;浙江稠州商业银行·公务卡&quot;, &quot;自贡市商业银行·借记IC卡&quot;, &quot;自贡市商业银行·锦程卡&quot;, &quot;鄂尔多斯银行·天骄公务卡&quot;, &quot;鹤壁银行·鹤卡&quot;, &quot;许昌银行·连城卡&quot;, &quot;铁岭银行·龙凤卡&quot;, 
     &quot;乐山市商业银行·大福卡&quot;, &quot;乐山市商业银行·--&quot;, &quot;长安银行·长长卡&quot;, &quot;长安银行·借记IC卡&quot;, &quot;重庆三峡银行·财富人生卡&quot;, &quot;重庆三峡银行·借记卡&quot;, &quot;石嘴山银行·麒麟借记卡&quot;, &quot;石嘴山银行·麒麟借记卡&quot;, 
     &quot;石嘴山银行·麒麟公务卡&quot;, &quot;盘锦市商业银行·鹤卡&quot;, &quot;盘锦市商业银行·盘锦市商业银行鹤卡&quot;, &quot;平顶山银行·平顶山银行公务卡&quot;, &quot;朝阳银行·鑫鑫通卡&quot;, &quot;朝阳银行·朝阳银行福农卡&quot;, &quot;朝阳银行·红山卡&quot;, &quot;宁波东海银行·绿叶卡&quot;, 
     &quot;遂宁市商业银行·锦程卡&quot;, &quot;遂宁是商业银行·金荷卡&quot;, &quot;保定银行·直隶卡&quot;, &quot;保定银行·直隶卡&quot;, &quot;凉山州商业银行·锦程卡&quot;, &quot;凉山州商业银行·金凉山卡&quot;, &quot;漯河银行·福卡&quot;, &quot;漯河银行·福源卡&quot;, &quot;漯河银行·福源公务卡&quot;, 
     &quot;达州市商业银行·锦程卡&quot;, &quot;新乡市商业银行·新卡&quot;, &quot;晋中银行·九州方圆借记卡&quot;, &quot;晋中银行·九州方圆卡&quot;, &quot;驻马店银行·驿站卡&quot;, &quot;驻马店银行·驿站卡&quot;, &quot;驻马店银行·公务卡&quot;, &quot;衡水银行·金鼎卡&quot;, &quot;衡水银行·借记IC卡&quot;, 
     &quot;周口银行·如愿卡&quot;, &quot;周口银行·公务卡&quot;, &quot;阳泉市商业银行·金鼎卡&quot;, &quot;阳泉市商业银行·金鼎卡&quot;, &quot;宜宾市商业银行·锦程卡&quot;, &quot;宜宾市商业银行·借记IC卡&quot;, &quot;库尔勒市商业银行·孔雀胡杨卡&quot;, &quot;雅安市商业银行·锦城卡&quot;,
     &quot;雅安市商业银行·--&quot;, &quot;安阳银行·安鼎卡&quot;, &quot;信阳银行·信阳卡&quot;, &quot;信阳银行·公务卡&quot;, &quot;信阳银行·信阳卡&quot;, &quot;华融湘江银行·华融卡&quot;, &quot;华融湘江银行·华融卡&quot;, &quot;营口沿海银行·祥云借记卡&quot;, &quot;景德镇商业银行·瓷都卡&quot;, 
     &quot;哈密市商业银行·瓜香借记卡&quot;, &quot;湖北银行·金牛卡&quot;, &quot;湖北银行·汉江卡&quot;, &quot;湖北银行·借记卡&quot;, &quot;湖北银行·三峡卡&quot;, &quot;湖北银行·至尊卡&quot;, &quot;湖北银行·金融IC卡&quot;, &quot;西藏银行·借记IC卡&quot;, &quot;新疆汇和银行·汇和卡&quot;, 
     &quot;广东华兴银行·借记卡&quot;, &quot;广东华兴银行·华兴银联公司卡&quot;, &quot;广东华兴银行·华兴联名IC卡&quot;, &quot;广东华兴银行·华兴金融IC借记卡&quot;, &quot;濮阳银行·龙翔卡&quot;, &quot;宁波通商银行·借记卡&quot;, &quot;甘肃银行·神舟兴陇借记卡&quot;, 
     &quot;甘肃银行·甘肃银行神州兴陇IC卡&quot;, &quot;枣庄银行·借记IC卡&quot;, &quot;本溪市商业银行·借记卡&quot;, &quot;盛京银行·医保卡&quot;, &quot;上海农商银行·如意卡(银联卡)&quot;, &quot;上海农商银行·如意卡(银联卡)&quot;, &quot;上海农商银行·鑫通卡&quot;, 
     &quot;上海农商银行·国际如意卡&quot;, &quot;上海农商银行·借记IC卡&quot;, &quot;常熟市农村商业银行·粒金贷记卡(银联卡)&quot;, &quot;常熟市农村商业银行·公务卡&quot;, &quot;常熟市农村商业银行·粒金准贷卡&quot;, &quot;常熟农村商业银行·粒金借记卡(银联卡)&quot;, 
     &quot;常熟农村商业银行·粒金IC卡&quot;, &quot;常熟农村商业银行·粒金卡&quot;, &quot;深圳农村商业银行·信通卡(银联卡)&quot;, &quot;深圳农村商业银行·信通商务卡(银联卡)&quot;, &quot;深圳农村商业银行·信通卡&quot;, &quot;深圳农村商业银行·信通商务卡&quot;, 
     &quot;广州农村商业银行·福农太阳卡&quot;, &quot;广东南海农村商业银行·盛通卡&quot;, &quot;广东南海农村商业银行·盛通卡(银联卡)&quot;, &quot;佛山顺德农村商业银行·恒通卡(银联卡)&quot;, &quot;佛山顺德农村商业银行·恒通卡&quot;, 
     &quot;佛山顺德农村商业银行·恒通卡(银联卡)&quot;, &quot;江阴农村商业银行·暨阳公务卡&quot;, &quot;江阴市农村商业银行·合作贷记卡(银联卡)&quot;, &quot;江阴农村商业银行·合作借记卡&quot;, &quot;江阴农村商业银行·合作卡(银联卡)&quot;, 
     &quot;江阴农村商业银行·暨阳卡&quot;, &quot;重庆农村商业银行·江渝借记卡VIP卡&quot;, &quot;重庆农村商业银行·江渝IC借记卡&quot;, &quot;重庆农村商业银行·江渝乡情福农卡&quot;, &quot;东莞农村商业银行·信通卡(银联卡)&quot;, 
     &quot;东莞农村商业银行·信通卡(银联卡)&quot;, &quot;东莞农村商业银行·信通信用卡&quot;, &quot;东莞农村商业银行·信通借记卡&quot;, &quot;东莞农村商业银行·贷记IC卡&quot;, &quot;张家港农村商业银行·一卡通(银联卡)&quot;, 
     &quot;张家港农村商业银行·一卡通(银联卡)&quot;, &quot;张家港农村商业银行·&quot;, &quot;北京农村商业银行·信通卡&quot;, &quot;北京农村商业银行·惠通卡&quot;, &quot;北京农村商业银行·凤凰福农卡&quot;, &quot;北京农村商业银行·惠通卡&quot;, 
     &quot;北京农村商业银行·中国旅行卡&quot;, &quot;北京农村商业银行·凤凰卡&quot;, &quot;天津农村商业银行·吉祥商联IC卡&quot;, &quot;天津农村商业银行·信通借记卡(银联卡)&quot;, &quot;天津农村商业银行·借记IC卡&quot;, 
     &quot;鄞州农村合作银行·蜜蜂借记卡(银联卡)&quot;, &quot;宁波鄞州农村合作银行·蜜蜂电子钱包(IC)&quot;, &quot;宁波鄞州农村合作银行·蜜蜂IC借记卡&quot;, &quot;宁波鄞州农村合作银行·蜜蜂贷记IC卡&quot;, &quot;宁波鄞州农村合作银行·蜜蜂贷记卡&quot;, 
     &quot;宁波鄞州农村合作银行·公务卡&quot;, &quot;成都农村商业银行·福农卡&quot;, &quot;成都农村商业银行·福农卡&quot;, &quot;珠海农村商业银行·信通卡(银联卡)&quot;, &quot;太仓农村商业银行·郑和卡(银联卡)&quot;, &quot;太仓农村商业银行·郑和IC借记卡&quot;,
     &quot;无锡农村商业银行·金阿福&quot;, &quot;无锡农村商业银行·借记IC卡&quot;, &quot;黄河农村商业银行·黄河卡&quot;, &quot;黄河农村商业银行·黄河富农卡福农卡&quot;, &quot;黄河农村商业银行·借记IC卡&quot;, &quot;天津滨海农村商业银行·四海通卡&quot;, 
     &quot;天津滨海农村商业银行·四海通e芯卡&quot;, &quot;武汉农村商业银行·汉卡&quot;, &quot;武汉农村商业银行·汉卡&quot;, &quot;武汉农村商业银行·中国旅游卡&quot;, &quot;江南农村商业银行·阳湖卡(银联卡)&quot;, &quot;江南农村商业银行·天天红火卡&quot;, 
     &quot;江南农村商业银行·借记IC卡&quot;, &quot;海口联合农村商业银行·海口联合农村商业银行合卡&quot;, &quot;湖北嘉鱼吴江村镇银行·垂虹卡&quot;, &quot;福建建瓯石狮村镇银行·玉竹卡&quot;, &quot;浙江平湖工银村镇银行·金平卡&quot;, &quot;重庆璧山工银村镇银行·翡翠卡&quot;, 
     &quot;重庆农村商业银行·银联标准贷记卡&quot;, &quot;重庆农村商业银行·公务卡&quot;, &quot;南阳村镇银行·玉都卡&quot;, &quot;晋中市榆次融信村镇银行·魏榆卡&quot;, &quot;三水珠江村镇银行·珠江太阳卡&quot;, &quot;东营莱商村镇银行·绿洲卡&quot;, &quot;建设银行·单位结算卡&quot;,
     &quot;玉溪市商业银行·红塔卡&quot; ,&quot;平安银行&quot;,&quot;平安银行&quot;,&quot;平安银行&quot;,&quot;平安银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;);

                    public function getname($cardnumber) {  

                        $charBin = substr($cardnumber, 0,6); //cardnumber.substring(0, 6);
                        $bin = 0; $index = 0;  
                        //bin=Integer.valueOf(charBin);
                        $index= array_search($charBin, self::$bankBin); //binarySearch(bankBin, bin);  
                        if ($index == -1 ||  $index&gt; count( self::$bankName) ){  
                            return null;  
                        }  

                        return self::$bankName[$index];//.substring(0,4);  

                    }  

    // // 查找方法  
    // public static $binarySearch(int[] srcArray, $des) {  
    //     $low = 0;  
    //     $high = srcArray.length;  
    //     while (low &lt; high) {  

    //         if (des == srcArray[low]) {  
    //             return low;  
    //         }  
    //         low++;  
    //     }  
    //     return -1;  
    // }

    /* 
 当你输入信用卡号码的时候，有没有担心输错了而造成损失呢？其实可以不必这么担心， 
 因为并不是一个随便的信用卡号码都是合法的，它必须通过Luhn算法来验证通过。 
 该校验的过程： 
 1、从卡号最后一位数字开始，逆向将奇数位(1、3、5等等)相加。 
 2、从卡号最后一位数字开始，逆向将偶数位数字，先乘以2（如果乘积为两位数，则将其减去9），再求和。 
 3、将奇数位总和加上偶数位总和，结果应该可以被10整除。 
 例如，卡号是：5432123456788881 
 则奇数、偶数位（用红色标出）分布：5432123456788881 
 奇数位和=35 
 偶数位乘以2（有些要减去9）的结果：1 6 2 6 1 5 7 7，求和=35。 
 最后35+35=70 可以被10整除，认定校验通过。 
 请编写一个程序，从键盘输入卡号，然后判断是否校验通过。通过显示：“成功”，否则显示“失败”。 
 比如，用户输入：356827027232780 
 程序输出：成功 
 */   

                   /** 
                   * 校验银行卡卡号 
                   * @param cardId 
                   * @return 
                   */  
                  public  function  checkBankCard($cardId) {  
                           $bit = getBankCardCheckCode($cardId.substring(0, count($cardId) - 1));  
                           if($bit == &apos;N&apos;){  
                               return false;  
                           }  
                           return $cardId[count($cardId) - 1] == $bit;  
                  }  

            /** 
             * 从不含校验位的银行卡卡号采用 Luhn 校验算法获得校验位 
             * @param nonCheckCodeCardId 
             * @return 
             */  
            public function getBankCardCheckCode($nonCheckCodeCardId){  
                if($nonCheckCodeCardId == null ||  count( trim( $nonCheckCodeCardId)) == 0  
                        || !preg_match(&quot;\\d+&quot;,$nonCheckCodeCardId)) {  
                    //如果传的不是数据返回N  
                    return &apos;N&apos;;  
                }  
                $chs = trim($nonCheckCodeCardId).toCharArray();  
                $luhmSum = 0;  
                for($i = count( $chs) - 1, $j = 0; $i &gt;= 0; $i--, $j++) {  
                    $k = $chs[i] - &apos;0&apos;;  
                    if($j % 2 == 0) {  
                        $k *= 2;  
                        $k = $k / 10 + $k % 10;  
                    }  
                    $luhmSum += $k;             
                }  
                return ($luhmSum % 10 == 0) ? &apos;0&apos; : ((10 - $luhmSum % 10));  
            }  
 }

 $bank = new GetBank();
 echo $bank-&gt;getname(&quot;6212263007000674715&quot;);
</code></pre><p>转自<a href="https://blog.csdn.net/JanWarlen/article/details/50216803" title="PHP根据银行卡号获取银行名称（根据Java更改而来）" target="_blank" rel="noopener">PHP根据银行卡号获取银行名称（根据Java更改而来）</a></p>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>代码</tag>
      </tags>
  </entry>
  <entry>
    <title>swoole安装</title>
    <url>/posts/a4225ecf/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="源码编译安装swoole"><a href="#源码编译安装swoole" class="headerlink" title="源码编译安装swoole"></a>源码编译安装swoole</h2><a id="more"></a><pre><code>mkdir -p ~/build &amp;&amp; \
cd ~/build &amp;&amp; \
rm -rf ./swoole-src &amp;&amp; \
curl -o ./tmp/swoole.tar.gz https://github.com/swoole/swoole-src/archive/master.tar.gz -L &amp;&amp; \
tar zxvf ./tmp/swoole.tar.gz &amp;&amp; \
mv swoole-src* swoole-src &amp;&amp; \
cd swoole-src &amp;&amp; \
phpize &amp;&amp; \
./configure \
--enable-coroutine \
--enable-openssl  \
--enable-http2  \
--enable-async-redis \
--enable-sockets \
--enable-mysqlnd &amp;&amp; \
make clean &amp;&amp; make &amp;&amp; sudo make install
</code></pre>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>swoole</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL常用语法</title>
    <url>/posts/fad88b6d/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="数据表相关"><a href="#数据表相关" class="headerlink" title="数据表相关"></a>数据表相关</h2><h4 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h4><a id="more"></a><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> laravelS</span><br><span class="line">    <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4</span><br><span class="line">    <span class="keyword">DEFAULT</span> <span class="keyword">COLLATE</span> utf8mb4_general_ci;</span><br></pre></td></tr></table></figure><h4 id="清空数据表"><a href="#清空数据表" class="headerlink" title="清空数据表"></a>清空数据表</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名</span><br></pre></td></tr></table></figure><h4 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM runoob_tbl</span><br><span class="line">    -&gt; INTO OUTFILE '/tmp/runoob.txt';</span><br><span class="line">mysqldump -u root -p RUNOOB runoob_tbl &gt; dump.txt</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>MySQL</tag>
        <tag>代码</tag>
        <tag>备忘</tag>
      </tags>
  </entry>
  <entry>
    <title>SSR一键安装</title>
    <url>/posts/be5821e2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一键安装SSR"><a href="#一键安装SSR" class="headerlink" title="一键安装SSR"></a>一键安装SSR</h2><pre><code>wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh
chmod +x shadowsocksR.sh
./shadowsocksR.sh 2&gt;&amp;1 | tee shadowsocksR.log
</code></pre><a id="more"></a><h2 id="多用户配置"><a href="#多用户配置" class="headerlink" title="多用户配置"></a>多用户配置</h2><p>编辑文件<code>/etc/shadowsocks.json</code></p><pre><code>{
&quot;server&quot;:&quot;0.0.0.0&quot;,
&quot;server_ipv6&quot;: &quot;[::]&quot;,
&quot;local_address&quot;:&quot;127.0.0.1&quot;,
&quot;local_port&quot;:1080,
&quot;port_password&quot;:{
    &quot;8989&quot;:&quot;password1&quot;,
    &quot;8990&quot;:&quot;password2&quot;,
    &quot;8991&quot;:&quot;password3&quot;
},
&quot;timeout&quot;:300,
&quot;method&quot;:&quot;aes-256-cfb&quot;,
&quot;protocol&quot;: &quot;origin&quot;,
&quot;protocol_param&quot;: &quot;&quot;,
&quot;obfs&quot;: &quot;plain&quot;,
&quot;obfs_param&quot;: &quot;&quot;,
&quot;redirect&quot;: &quot;&quot;,
&quot;dns_ipv6&quot;: false,
&quot;fast_open&quot;: false,
&quot;workers&quot;: 1
}
</code></pre>]]></content>
      <tags>
        <tag>vps</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos下配置安装javaWeb环境</title>
    <url>/posts/e3ac84e4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="搭建-Java-开发环境"><a href="#搭建-Java-开发环境" class="headerlink" title="搭建 Java 开发环境"></a>搭建 Java 开发环境</h2><h3 id="安装-JDK"><a href="#安装-JDK" class="headerlink" title="安装 JDK"></a>安装 JDK</h3><p>JDK 是开发Java程序必须安装的软件，我们查看一下 yum 源里面的 JDK：</p><pre><code>yum list | grep jdk
</code></pre><a id="more"></a><p>选择适合本机的JDK，并安装：</p><pre><code>yum install java-1.8.0-openjdk* -y
</code></pre><p>安装完成后，查看是否安装成功(安装成功回显示jdk的版本号)：</p><pre><code>java -version
    openjdk version &quot;1.8.0_171&quot;
    OpenJDK Runtime Environment (build 1.8.0_171-b10)
    OpenJDK 64-Bit Server VM (build 25.171-b10, mixed mode)
</code></pre><h2 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h2><p>下载Tomcat，并解压到指定目录中。 <a href="http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-9/v9.0.10/bin/apache-tomcat-9.0.10.tar.gz" title="Tomcat-9.0.10.tar.gz" target="_blank" rel="noopener">Tomcat-9.0.10.tar.gz</a></p><pre><code>tar zxvf apache-tomcat-9.0.10.tar.gz
mv apache-tomcat-9.0.10/ /usr/local/tomcat9
#修改权限
chmod -R 777 /usr/local/tomcat9/bin
#启动Tomcat
/usr/local/tomcat9/bin/startup.sh
#修改nginx配置
    location ~ .+\.jsp($|/) {
                    proxy_pass http://127.0.0.1:8080; #转发端口
                    proxy_set_header Host $host;
                    client_max_body_size 10m;
                    client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数。
                    proxy_connect_timeout 90; #Nginx跟后端服务器连接超时时间。
                    proxy_read_timeout 90; #连接成功后，后端服务器响应时间。
                    proxy_buffer_size 4k; #设置代理服务器保存用户头信息的缓冲区大小。
                    proxy_buffers 6 32k; #proxy_buffers缓冲区。
                    proxy_busy_buffers_size 64k; #高负荷下缓冲大小。
                    proxy_temp_file_write_size 64k;#设定缓存文件夹大小。
            }
#访问相关域名+/index.php即可看到Tomcat主页
</code></pre><h3 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h3><p>新建一个<code>location</code>来专门转发静态文件</p><pre><code>location ~ \.(html|js|css|gif|jpg|png|bmp|swf)$ {
    expires 30d;
    root /usr/local/tomcat9/webapps/ROOT;
}
</code></pre>]]></content>
      <tags>
        <tag>java</tag>
        <tag>javaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>源码编译安装mariadb数据库</title>
    <url>/posts/9f7c77f/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="源码安装CMake"><a href="#源码安装CMake" class="headerlink" title="源码安装CMake"></a>源码安装CMake</h2><a id="more"></a><h3 id="1-获取CMake源码包"><a href="#1-获取CMake源码包" class="headerlink" title="1.获取CMake源码包"></a>1.获取CMake源码包</h3><p><a href="https://cmake.org/files/v3.12/cmake-3.12.0.tar.gz" title="cmake-3.12.0.tar.gz" target="_blank" rel="noopener">cmake-3.12.0.tar.gz</a></p><h3 id="2-解压、编译、安装Cmake"><a href="#2-解压、编译、安装Cmake" class="headerlink" title="2.解压、编译、安装Cmake"></a>2.解压、编译、安装Cmake</h3><pre><code>tar -xzvf cmake-3.12.0.tar.gz
cd cmake-3.12.0
./bootstrap
make
make install
</code></pre><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><p>cmake 会默认安装在 <code>usr/local/bin</code> 下面 <code>./bootstrap</code> 需要<code>gcc,gcc-c++</code>环境时</p><pre><code>yum install -y gcc gcc-c++
</code></pre><h2 id="源码安装mariadb"><a href="#源码安装mariadb" class="headerlink" title="源码安装mariadb"></a>源码安装mariadb</h2><h3 id="1-获取源码包"><a href="#1-获取源码包" class="headerlink" title="1.获取源码包"></a>1.获取源码包</h3><p><a href="https://downloads.mariadb.org/f/mariadb-10.3.8/source/mariadb-10.3.8.tar.gz/from/http%3A//ftp.utexas.edu/mariadb" title="mariadb-10.3.8.tar.gz" target="_blank" rel="noopener">mariadb-10.3.8.tar.gz</a></p><h3 id="2-编译环境准备"><a href="#2-编译环境准备" class="headerlink" title="2.编译环境准备"></a>2.编译环境准备</h3><pre><code>yum groupinstall -y Development Tools ncurses-devel openssl-devel openssl
</code></pre><h3 id="3-创建mysql用户"><a href="#3-创建mysql用户" class="headerlink" title="3.创建mysql用户"></a>3.创建mysql用户</h3><pre><code>groupadd mysql
useradd -s /sbin/nologin -g mysql -M mysql
id mysql
# uid=500(mysql) gid=500(mysql) groups=500(mysql)
#创建数据库数据存放目录；
mkdir /mydata/data -pv
chown mysql:mysql /mydata/data/ -R
</code></pre><h3 id="4-编译安装MariaDB"><a href="#4-编译安装MariaDB" class="headerlink" title="4.编译安装MariaDB"></a>4.编译安装MariaDB</h3><pre><code>cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql \
          -DMYSQL_DATADIR=/mydata/data \
          -DWITH_INNOBASE_STORAGE_ENGINE=1 \
          -DWITH_ARCHIVE_STORAGE_ENGINE=1 \
          -DWITH_BLACKHOLE_STORAGE_ENGINE=1 \
          -DWITH_READLINE=1 \
          -DWITH_SSL=system \
          -DWITH_ZLIB=system \
          -DWITH_LIBWRAP=0 \
          -DMYSQL_UNIX_ADDR=/tmp/mysql.sock \
          -DDEFAULT_CHARSET=utf8 \
          -DDEFAULT_COLLATION=utf8_general_ci
#编译完成后安装数据库：
make
make install
</code></pre><h3 id="5-配置安装MariaDB"><a href="#5-配置安装MariaDB" class="headerlink" title="5.配置安装MariaDB"></a>5.配置安装MariaDB</h3><pre><code>cd /usr/local/mysql/
scripts/mysql_install_db --user=mysql --datadir=/mydata/data
ls /mydata/data/
    aria_log.00000001  ib_logfile0  mysql-bin.000001  mysql-bin.state
    aria_log_control   ib_logfile1  mysql-bin.000002  performance_schema
    ibdata1            mysql        mysql-bin.index   test
</code></pre><h3 id="6-mariadb配置文件创建及更改，没有模版"><a href="#6-mariadb配置文件创建及更改，没有模版" class="headerlink" title="6.mariadb配置文件创建及更改，没有模版"></a>6.mariadb配置文件创建及更改，没有模版</h3><pre><code>mkdir /etc/mysql
vim /etc/mysql/my.cnf
    [mysqld]
    port            = 3306
    datadir         = /mydata/data
    socket          = /tmp/mysql.sock
    skip-external-locking
    key_buffer_size = 256M
    max_allowed_packet = 1M
    table_open_cache = 256
    sort_buffer_size = 1M
    read_buffer_size = 1M
    read_rnd_buffer_size = 4M
    myisam_sort_buffer_size = 64M
    thread_cache_size = 8
    query_cache_size= 16M
    # Try number of CPU&apos;s*2 for thread_concurrency
    thread_concurrency = 8
    innodb_file_per_table = on
    skip_name_resolve = on
</code></pre><p>创建服务脚本：</p><pre><code>cp support-files/mysql.server /etc/rc.d/init.d/mysqld
chkconfig --list mysqld
chkconfig --add mysqld
</code></pre><p>启动mysqld服务,测试启动</p><pre><code>service mysqld start
    Starting MySQL.                                            [  OK  ]
</code></pre><h3 id="7-设置环境变量"><a href="#7-设置环境变量" class="headerlink" title="7.设置环境变量"></a>7.设置环境变量</h3><pre><code>vim /etc/profile.d/mysqld.sh
    MYSQL_HOME=/usr/local/mysql
    export PATH=$MYSQL_HOME/bin:$PATH
</code></pre><h4 id="加载环境变量："><a href="#加载环境变量：" class="headerlink" title="加载环境变量："></a>加载环境变量：</h4><pre><code>source /etc/profile.d/mysqld.sh
</code></pre><h3 id="8-修改Mysql的root用户密码以及打开远程连接-可选"><a href="#8-修改Mysql的root用户密码以及打开远程连接-可选" class="headerlink" title="8.修改Mysql的root用户密码以及打开远程连接(可选)"></a>8.修改Mysql的root用户密码以及打开远程连接(可选)</h3><pre><code>mysql
    Welcome to the MariaDB monitor.  Commands end with ; or \g.
    Your MariaDB connection id is 9
    Server version: 10.3.8-MariaDB Source distribution

    Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

    Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.
grant all privileges on *.* to root@&apos;localhost&apos; identified by &apos;密码&apos;;
grant all privileges on *.* to root@&apos;127.0.0.1&apos; identified by &apos;密码&apos;;
use mysql;
    Database changed
update user set password = password(&apos;密码&apos;) where User=&apos;root&apos;;
select Host,User,Password from user where User=&apos;root&apos;;
    +----------------+------+-------------------------------------------+
    | Host           | User | Password                                  |
    +----------------+------+-------------------------------------------+
    | localhost      | root | *密码                                     |
    | tom2.stu31.com | root | *密码                                     |
    | 127.0.0.1      | root | *密码                                     |
    | ::1            | root | *密码                                     |
    +----------------+------+-------------------------------------------+
    4 rows in set (0.00 sec)
</code></pre><h3 id="9-我们使用MariaDB提供的安全设置脚本来进行数据库安全配置"><a href="#9-我们使用MariaDB提供的安全设置脚本来进行数据库安全配置" class="headerlink" title="9.我们使用MariaDB提供的安全设置脚本来进行数据库安全配置"></a>9.我们使用MariaDB提供的安全设置脚本来进行数据库安全配置</h3><h4 id="MariaDB提供了一些配置脚本在"><a href="#MariaDB提供了一些配置脚本在" class="headerlink" title="MariaDB提供了一些配置脚本在"></a>MariaDB提供了一些配置脚本在</h4><pre><code>cd $MYSQL_HOME/bin
ls
    aria_chk       innochecksum    myisamchk          myrocks_hotbackup  mysqlcheck                  mysqld_multi        mysql_find_rows       mysql_plugin               mysqltest            perror              tokuftdump             wsrep_sst_rsync
    aria_dump_log  mariabackup     myisam_ftdump      mysql              mysql_client_test           mysqld_safe         mysql_fix_extensions  mysql_secure_installation  mysql_tzinfo_to_sql  replace             tokuft_logprint        wsrep_sst_rsync_wan
    aria_ftdump    mariadb_config  myisamlog          mysqlaccess        mysql_config                mysqld_safe_helper  mysqlhotcopy          mysql_setpermission        mysql_upgrade        resolveip           wsrep_sst_common       wsrep_sst_xtrabackup
    aria_pack      mbstream        myisampack         mysqladmin         mysql_convert_table_format  mysqldump           mysqlimport           mysqlshow                  mysql_waitpid        resolve_stack_dump  wsrep_sst_mariabackup  wsrep_sst_xtrabackup-v2
    aria_read_log  msql2mysql      my_print_defaults  mysqlbinlog        mysqld                      mysqldumpslow       mysql_ldb             mysqlslap                  mytop                sst_dump            wsrep_sst_mysqldump
#我们使用mysql_secure_installation这个脚本来进行安全配置：
mysql_secure_installation
    NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB
          SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!

    In order to log into MariaDB to secure it, we&apos;ll need the current
    password for the root user.  If you&apos;ve just installed MariaDB, and
    you haven&apos;t set the root password yet, the password will be blank,
    so you should just press enter here.

    Enter current password for root (enter for none): 
    OK, successfully used password, moving on...

    Setting the root password ensures that nobody can log into the MariaDB
    root user without the proper authorisation.

    Set root password? [Y/n] n    
     ... skipping.

    By default, a MariaDB installation has an anonymous user, allowing anyone
    to log into MariaDB without having to have a user account created for
    them.  This is intended only for testing, and to make the installation
    go a bit smoother.  You should remove them before moving into a
    production environment.

    Remove anonymous users? [Y/n] Y
     ... Success!

    Normally, root should only be allowed to connect from &apos;localhost&apos;.  This
    ensures that someone cannot guess at the root password from the network.

    Disallow root login remotely? [Y/n] Y
     ... Success!

    By default, MariaDB comes with a database named &apos;test&apos; that anyone can
    access.  This is also intended only for testing, and should be removed
    before moving into a production environment.

    Remove test database and access to it? [Y/n] Y
     - Dropping test database...
     ... Success!
     - Removing privileges on test database...
     ... Success!

    Reloading the privilege tables will ensure that all changes made so far
    will take effect immediately.

    Reload privilege tables now? [Y/n] Y
     ... Success!

    Cleaning up...

    All done!  If you&apos;ve completed all of the above steps, your MariaDB
    installation should now be secure.

    Thanks for using MariaDB!
#安全设置数据库完成后我们就不能使用mysql登录数据库了；但是平常我们操作时使用mysql -u root -p这样太麻烦了，为了方便，我们可以在用户家目录创建一个拥有mysql用户名和密码的.my.cnf隐藏配置文件进行登录数据库;
#创建个隐藏文件在root家目录：
vim .my.cnf
    [mysql]
    user = root
    password = 密码
    host =  127.0.0.1
</code></pre><h3 id="备注-1"><a href="#备注-1" class="headerlink" title="备注"></a>备注</h3><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>重新编译时，需要清除旧的对象文件和缓存信息。</p><pre><code>make clean
rm -f CMakeCache.txt
rm -rf /etc/my.cnf
</code></pre><p>错误：<code>Curses library not found. Please install appropriate package</code> 解决方案： 先安装 <code>ncurses-devel</code> 包</p><pre><code>yum install ncurses-devel
</code></pre><p>再删除刚才编译生成的 <code>CMakeCache.txt</code> 文件</p><pre><code>rm CMakeCache.txt
</code></pre><p>再次执行一次<code>cmake</code></p><h4 id="编译选项"><a href="#编译选项" class="headerlink" title="编译选项"></a>编译选项</h4><pre><code>-DCMAKE_INSTALL_PREFIX=/usr/local/mysql       //安装目录
-DINSTALL_DATADIR=/mydata/data                //数据库存放目录
-DDEFAULT_CHARSET=utf8                    　　//使用utf8字符
-DDEFAULT_COLLATION=utf8_general_ci           //校验字符
-DEXTRA_CHARSETS=all                        　//安装所有扩展字符集
-DENABLED_LOCAL_INFILE=1                    　//允许从本地导入数据
</code></pre><h4 id="cmake编译指令介绍"><a href="#cmake编译指令介绍" class="headerlink" title="cmake编译指令介绍"></a>cmake编译指令介绍</h4><p>指定安装文件的安装路径时常用的选项：</p><pre><code>-DCMAKE_INSTALL_PREFIX=/usr/local/mysql
-DMYSQL_DATADIR=/mydata/data
-DSYSCONFDIR=/etc
</code></pre><p>默认编译的存储引擎包括：csv、myisam、myisammrg和heap。若要安装其它存储引擎，可以使用类似如下编译选项：</p><pre><code>-DWITH_INNOBASE_STORAGE_ENGINE=1
-DWITH_ARCHIVE_STORAGE_ENGINE=1
-DWITH_BLACKHOLE_STORAGE_ENGINE=1
-DWITH_FEDERATED_STORAGE_ENGINE=1
</code></pre><p>若要明确指定不编译某存储引擎，可以使用类似如下的选项：</p><pre><code>-DWITHOUT_&lt;ENGINE&gt;_STORAGE_ENGINE=1
#比如：
-DWITHOUT_EXAMPLE_STORAGE_ENGINE=1
-DWITHOUT_FEDERATED_STORAGE_ENGINE=1
-DWITHOUT_PARTITION_STORAGE_ENGINE=1
</code></pre><p>如若要编译进其它功能，如SSL等，则可使用类似如下选项来实现编译时使用某库或不使用某库：</p><pre><code>-DWITH_READLINE=1
-DWITH_SSL=system
-DWITH_ZLIB=system
-DWITH_LIBWRAP=0
</code></pre><p>其它常用的选项：</p><pre><code>-DMYSQL_TCP_PORT=3306
-DMYSQL_UNIX_ADDR=/tmp/mysql.sock
-DENABLED_LOCAL_INFILE=1
-DEXTRA_CHARSETS=all
-DDEFAULT_CHARSET=utf8
-DDEFAULT_COLLATION=utf8_general_ci
-DWITH_DEBUG=0
-DENABLE_PROFILING=1
</code></pre><p>如果想清理此前的编译所生成的文件，则需要使用如下命令：</p><pre><code>make clean
rm CMakeCache.txt
</code></pre>]]></content>
      <tags>
        <tag>mariadb</tag>
        <tag>编译</tag>
      </tags>
  </entry>
  <entry>
    <title>关于wordpress 更新时需要FTP 服务器账户密码 的解决方法</title>
    <url>/posts/49414842/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>WordPress的更新页面出现ftp链接设定</p><a id="more"></a><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ol><li>给服务器服务所用的用户的WordPress所在目录足够的更新权限</li><li>在<code>wp-config.php</code>文件中添加 <code>php define(&quot;FS_METHOD&quot;, &quot;direct&quot;); define(&quot;FS_CHMOD_DIR&quot;, 0777); define(&quot;FS_CHMOD_FILE&quot;, 0777);</code></li></ol>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>WordPress</tag>
        <tag>问题</tag>
        <tag>报错</tag>
      </tags>
  </entry>
  <entry>
    <title>WordPress不能剪切图片错误</title>
    <url>/posts/c063c7d2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><pre><code>在裁剪您的图像时发生了错误。
</code></pre><a id="more"></a><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>主要有以下几种原因 1. 基础库不足 2. 图片的访问有问题</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ol><li>检查gd库、Imagick库是否正常</li><li><p>在编辑图片里检查编辑图片链接</p><p>/wp-admin/admin-ajax.php?action=imgedit-preview&amp;_ajax_nonce….</p></li></ol><h2 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h2><p>Imgedit下载</p><pre><code>https://pecl.php.net/package/imagick
</code></pre>]]></content>
      <tags>
        <tag>WordPress</tag>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>常用快捷键配置</title>
    <url>/posts/a69276d/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="开发配置"><a href="#开发配置" class="headerlink" title="开发配置"></a>开发配置</h1><a id="more"></a><pre><code># AUTO LOAD COMMAND

# Git
alias ls=&apos;ls --color=auto&apos;;
alias ll=&apos;ls -lh&apos;;
alias ld=&apos;ll |grep &quot;^d&quot;&apos;;
alias psw=&apos;ps -a --windows&apos;;

alias gs=&apos;git status&apos;;
alias gad=&apos;git add -A&apos;;
alias gcm=&apos;git commit -m &quot;$comments&quot;&apos;;
alias gpushb=&quot;git push origin $1&quot;;
alias gpullb=&quot;git pull origin $1&quot;;
alias gcb=&quot;git checkout $1&quot;;
alias gcc=&quot;git checkout cxl&quot;;
alias gcm=&quot;git checkt master&quot;;
alias gb=&quot;git branch&quot;;
alias gba=&quot;git branch -a&quot;;
alias gmb=&quot;git merge $1&quot;;
alias gmm=&quot;git merger master&quot;;
alias gdf=&quot;git diff&quot;;
alias gll=&quot;git log --graph --abbrev-commit --decorate --all --format=format:&apos;%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)&quot;;

# FILE
alias ..=&apos;cd ..&apos;;
alias ....=&apos;cd ../../&apos;;


# VI/VIM
alias vi=&apos;vim&apos;;


# .bash_profile
alias sss=&apos;source ~/.bash_profile&apos;;
alias bash=&apos;vim ~/.bash_profile&apos;;


# Nginx
alias nginx.start=&apos;service nginx start&apos;;
alias nginx.stop=&apos;nginx -s stop&apos;;
alias nginx.process=&apos;ps -ef | grep nginx&apos;;
alias nginx.reload=&apos;nginx -s reload&apos;;
alias nginx.kill=&apos;pkill -9 nginx&apos;;
alias nginx.restart=&apos;service nginx restart&apos;;

# Win
alias cls=&apos;clear&apos;;


# Artisan
alias autoload=&apos;composer dump-autoload&apos;;
alias art.key=&apos;php artisan key:generate&apos;;
alias migrate=&apos;php artisan migrate&apos;;
alias route.list=&apos;php artisan route:list&apos;;


# Laravel-admin
alias admin.install=&apos;composer require encore/laravel-admin &quot;1.5.*&quot;&apos;;
alias admin.install.2=&apos;php artisan vendor:publish --provider=&quot;Encore\Admin\AdminServiceProvider&quot; &amp;&amp; php artisan admin:install&apos;;
alias admin.helper=&apos;composer require laravel-admin-ext/helpers &amp;&amp; php artisan admin:import helpers&apos;;
</code></pre>]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
      </tags>
  </entry>
  <entry>
    <title>目录管理</title>
    <url>/posts/626b20b4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="目录管理"><a href="#目录管理" class="headerlink" title="目录管理"></a>目录管理</h1><p>1.创建目录</p><pre><code>mkdir dir
</code></pre><a id="more"></a><p>2.删除目录</p><pre><code>rm -rf dir
</code></pre><p>3.创建目录</p><pre><code>mkdir -p a/b/c/d/e/g
mkdir -p aa/bb/cc/dd/ee/gg
</code></pre><p>cd - #记忆近两次使用的目录</p><h1 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h1><p>新建文件</p><pre><code>touch file1
touch file{1..10}
</code></pre><p>删除文件</p><pre><code>rm -rf file1
</code></pre><p>编辑文件</p><pre><code>vi file1
</code></pre><p>复制</p><pre><code>cp file1 /mnt/file2
\cp file1 /mnt/file2 #去除别名
</code></pre><p>移动</p><pre><code>mv file1 /mnt/file1
</code></pre><p>查看文件内容</p><pre><code>cat file1
</code></pre><p>查看文件内容</p><pre><code>more file2
</code></pre><p>从第一页往下查看</p><pre><code>tree dir
</code></pre><p>递归查看目录下的所有子目录和文件</p><pre><code>ls -lR
</code></pre><h1 id="文件搜索"><a href="#文件搜索" class="headerlink" title="文件搜索"></a>文件搜索</h1><p>1.<code>find</code></p><pre><code>find /root -name file1
</code></pre><p>在/root下查找file1</p><pre><code>find /root -name file1 -exec rm -rf {} ;
</code></pre><p>在/root下查找file1并删除 2.<code>which</code></p><pre><code>which ls
</code></pre><p>3.<code>locate</code> 1)形成数据库</p><pre><code>updatedb
</code></pre><p>2)用locate查找</p><pre><code>locate httpd.conf
</code></pre><h1 id="内容搜索"><a href="#内容搜索" class="headerlink" title="内容搜索:"></a>内容搜索:</h1><p>1.<code>grep</code></p><pre><code>cat file|grep linux
</code></pre><p>搜索file中包含linux的行</p><pre><code>cat file1 |grep -E &quot;php|linux&quot;
</code></pre><p>搜索file1中包含php或linux的行</p><h1 id="文件或目录权限"><a href="#文件或目录权限" class="headerlink" title="文件或目录权限"></a>文件或目录权限</h1><p>查看文件权限</p><pre><code>ls -l dir1
</code></pre><p>修改权限</p><pre><code>chmod 755 dir
7 = rwx =421
chmod o+w dir
u,g,o=a
</code></pre><p>#修改文件所有者</p><pre><code>chown [-R] 账号名称:用户组名称 文件或目录
</code></pre>]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux分区</title>
    <url>/posts/293749eb/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="linux分区"><a href="#linux分区" class="headerlink" title="linux分区"></a>linux分区</h1><p><code>/dev/sda3</code> 第一块scsi硬盘的第三个主分区 <code>/dev/sdb7</code> 第二块scsi硬盘的第三个逻辑分区 <code>df</code> 查看已经挂载的分区<br><a id="more"></a></p>]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
      </tags>
  </entry>
  <entry>
    <title>网络设置</title>
    <url>/posts/408df4e/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="网络设置"><a href="#网络设置" class="headerlink" title="网络设置"></a>网络设置</h1><p>ip的配置方法 1.临时</p><pre><code>ifconfig eth0 192.168.200.1
</code></pre><a id="more"></a><p>2.永久</p><pre><code>vi /etc/sysconfig/network-scripts/ifcfg-eth0
IPADDR=192.168.100.1
NETMASK=255.255.255.0
ONBOOT=yes


service network restart
</code></pre><p>以面ip网卡配置马上生效 3.查看ip</p><pre><code>ifconfig eth0
</code></pre><h4 id="检查端口"><a href="#检查端口" class="headerlink" title="检查端口"></a>检查端口</h4><pre><code>netstat  -anplut  | grep  80
</code></pre><p>检查80端口是否被监听</p>]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>系统结构树</title>
    <url>/posts/67e939ae/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="系统结构树"><a href="#系统结构树" class="headerlink" title="系统结构树"></a>系统结构树</h1><p>1.<code>home</code> 普通用户的家目录 2.<code>mnt</code> 空目录 3.<code>media</code> 挂载光盘用的 4.<code>bin</code> 所有用户都可以执行的命令 5.<code>sbin</code> 只有root才可以执行的命令 6.<code>usr</code> 自定义安装的软件的执行程序，帮助手册 7.<code>var</code> 日志,缓存 8.<code>proc</code> 内存镜像文件 9.<code>dev</code> 硬盘设备文件 10.<code>etc</code> 软件的配置文件<br><a id="more"></a><br>/etc/init.d/ #系统服务文件夹</p><p>11.<code>boot</code> 启动文件,包括linux内核，init进程镜像文件 12.<code>tmp</code> 临时目录 13.<code>root</code> 超级用户的家目录</p>]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
      </tags>
  </entry>
  <entry>
    <title>用户管理</title>
    <url>/posts/500fed5c/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><p>1.新建用户 <code>useradd user1</code> 2.删除用户 <code>userdel -r user1</code> 3.设置密码 <code>passwd user1</code> 4.查看用户 <code>id user1</code> #切换用户 1.<code>su -</code><br><a id="more"></a><br>su -l USERNAME</p><p>-l为login，即登陆的简写 -l可以将l省略掉，所以此命令常写为<code>su - USERNAME</code> 2.<code>su</code></p><pre><code>su USERNAME
</code></pre><p><code>su - USERNAME</code>切换用户后，同时切换到新用户的工作环境中 <code>su USERNAME</code>切换用户后，不改变原用户的工作目录，及其他环境变量目录 3.<code>sudo</code></p><pre><code>sudo -u USERNAME COMMAND
</code></pre><p>当普通用户通过sudo以root用户执行命令时，<code>sudo</code>后面的 <code>-uUSERNAME</code>可省略，即<code>sudo COMMAND</code> 即意为sudo以root用户执行 默认情况下，系统只有root用户可以执行sudo命令。需要root用户通过使用<code>visudo</code>命令编辑sudo的配置文件<code>/etc/sudoers</code>，才可以授权其他普通用户执行sudo命令。 #修改文件所有者</p><pre><code>chown [-R] 账号名称:用户组名称 文件或目录
</code></pre>]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux基本指令</title>
    <url>/posts/ca1c9939/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="linux基本指令"><a href="#linux基本指令" class="headerlink" title="linux基本指令"></a>linux基本指令</h1><pre><code>cd
</code></pre><p>切换目录</p><pre><code>pwd
</code></pre><p>查看当前路径<br><a id="more"></a><br>ls</p><p>查看当前目录下的所有文件,<code>-l</code>查看属性，<code>-a</code>查看隐藏文件</p><pre><code>cat file1|wc
</code></pre><p><code>-l</code> 查看文件行数，<code>-l</code>行数</p><pre><code>cat file1 |wc
</code></pre><p><code>-c</code>查看文件字符数,<code>-c</code>字符数</p><pre><code>du -sh file1
</code></pre><p>查看文件大小,<code>-sh</code>帮你换算单位k,m,g</p><pre><code>vim ~/.bashrc
</code></pre><p>修改命令别名</p><h1 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理:"></a>系统管理:</h1><p>1.关机</p><pre><code>init 0
</code></pre><p>2.重启</p><pre><code>init 6
</code></pre><h1 id="shell常用技巧"><a href="#shell常用技巧" class="headerlink" title="shell常用技巧"></a>shell常用技巧</h1><pre><code># tab补全
# | 管道
</code></pre><h1 id="压缩包"><a href="#压缩包" class="headerlink" title="压缩包"></a>压缩包</h1><h3 id="1-gz压缩包"><a href="#1-gz压缩包" class="headerlink" title="1.gz压缩包"></a>1.gz压缩包</h3><p>1)制作</p><pre><code>tar czf file1.tar.gz file1
</code></pre><p>2)解压</p><pre><code>tar xzvf file1.tar.gz
</code></pre><p>###2.bz2压缩包 1)制作</p><pre><code>tar cjf file1.tar.bz2 file1
</code></pre><p>2)解压</p><pre><code>tar xjf file1.tar.bz2
</code></pre><p>###3.gzip压缩包 1)制作</p><pre><code>zip file.zip file1 file2 file3
zip -r file.zip /dir
</code></pre><p>2)解压</p><pre><code>unzip file.zip
</code></pre><h1 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h1><pre><code>-h
--help
man
</code></pre>]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
      </tags>
  </entry>
  <entry>
    <title>php编译安装</title>
    <url>/posts/6c2c2aec/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>PHP编译安装</p><a id="more"></a><h2 id="php编译安装"><a href="#php编译安装" class="headerlink" title="php编译安装"></a>php编译安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install gcc-c++ libxml2 libxml2-devel openssl openssl-devel \</span><br><span class="line">bzip2 bzip2-devel libcurl libcurl-devel libjpeg libjpeg-devel \</span><br><span class="line">libpng libpng-devel freetype freetype-devel gmp gmp-devel libmcrypt \</span><br><span class="line">libmcrypt-devel readline readline-devel libxslt libxslt-devel</span><br><span class="line">./configure \</span><br><span class="line">--prefix=/usr/local/php/php71 \</span><br><span class="line">--with-config-file-path=/etc/php/php71/ \</span><br><span class="line">--enable-fpm \</span><br><span class="line">--with-fpm-user=nginx  \</span><br><span class="line">--with-fpm-group=nginx \</span><br><span class="line">--enable-inline-optimization \</span><br><span class="line">--disable-debug \</span><br><span class="line">--disable-rpath \</span><br><span class="line">--enable-shared  \</span><br><span class="line">--enable-soap \</span><br><span class="line">--with-libxml-dir \</span><br><span class="line">--with-xmlrpc \</span><br><span class="line">--with-openssl \</span><br><span class="line">--with-mcrypt \</span><br><span class="line">--with-mhash \</span><br><span class="line">--with-pcre-regex \</span><br><span class="line">--with-sqlite3 \</span><br><span class="line">--with-zlib \</span><br><span class="line">--enable-bcmath \</span><br><span class="line">--with-iconv \</span><br><span class="line">--with-bz2 \</span><br><span class="line">--enable-calendar \</span><br><span class="line">--with-curl \</span><br><span class="line">--with-cdb \</span><br><span class="line">--enable-dom \</span><br><span class="line">--enable-exif \</span><br><span class="line">--enable-fileinfo \</span><br><span class="line">--enable-filter \</span><br><span class="line">--with-pcre-dir \</span><br><span class="line">--enable-ftp \</span><br><span class="line">--with-gd \</span><br><span class="line">--with-openssl-dir \</span><br><span class="line">--with-jpeg-dir \</span><br><span class="line">--with-png-dir \</span><br><span class="line">--with-zlib-dir  \</span><br><span class="line">--with-freetype-dir \</span><br><span class="line">--enable-gd-native-ttf \</span><br><span class="line">--enable-gd-jis-conv \</span><br><span class="line">--with-gettext \</span><br><span class="line">--with-gmp \</span><br><span class="line">--with-mhash \</span><br><span class="line">--enable-json \</span><br><span class="line">--enable-mbstring \</span><br><span class="line">--enable-mbregex \</span><br><span class="line">--enable-mbregex-backtrack \</span><br><span class="line">--with-libmbfl \</span><br><span class="line">--with-onig \</span><br><span class="line">--enable-pdo \</span><br><span class="line">--with-mysqli=mysqlnd \</span><br><span class="line">--with-pdo-mysql=mysqlnd \</span><br><span class="line">--with-zlib-dir \</span><br><span class="line">--with-pdo-sqlite \</span><br><span class="line">--with-readline \</span><br><span class="line">--enable-session \</span><br><span class="line">--enable-shmop \</span><br><span class="line">--enable-simplexml \</span><br><span class="line">--enable-sockets  \</span><br><span class="line">--enable-sysvmsg \</span><br><span class="line">--enable-sysvsem \</span><br><span class="line">--enable-sysvshm \</span><br><span class="line">--enable-wddx \</span><br><span class="line">--with-libxml-dir \</span><br><span class="line">--with-xsl \</span><br><span class="line">--enable-zip \</span><br><span class="line">--enable-mysqlnd-compression-support \</span><br><span class="line">--with-pear \</span><br><span class="line">--enable-opcache</span><br><span class="line"></span><br><span class="line">cp php.ini-production /etc/php/php71/php.ini</span><br><span class="line">cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf</span><br><span class="line">cp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf</span><br><span class="line">cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm-71</span><br><span class="line">chmod +x /etc/init.d/php-fpm-71</span><br></pre></td></tr></table></figure><h3 id="指定-php-安装目录"><a href="#指定-php-安装目录" class="headerlink" title="指定 php 安装目录"></a>指定 php 安装目录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--prefix=/usr/local/php</span><br></pre></td></tr></table></figure><h3 id="指定php-ini位置"><a href="#指定php-ini位置" class="headerlink" title="指定php.ini位置"></a>指定php.ini位置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--with-config-file-path=/usr/local/php/etc</span><br></pre></td></tr></table></figure><h3 id="mysql安装目录，对mysql的支持"><a href="#mysql安装目录，对mysql的支持" class="headerlink" title="mysql安装目录，对mysql的支持"></a>mysql安装目录，对mysql的支持</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--with-mysql=/usr/local/mysql</span><br></pre></td></tr></table></figure><p>mysqli扩展技术不仅可以调用MySQL的存储过程、处理MySQL事务，而且还可以使访问数据库工作变得更加稳定。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--with-mysqli=/usr/local/mysql/bin/mysql_config</span><br></pre></td></tr></table></figure><p>整合 apache，apxs功能是使用mod_so中的LoadModule指令，加载指定模块到 apache，要求 apache 要打开SO模块</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--with-apxs2=/usr/local/apache/bin/apxs</span><br></pre></td></tr></table></figure><p>选项指令 <code>--with-iconv-dir</code> 用于 PHP 编译时指定 iconv 在系统里的路径，否则会扫描默认路径。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--with-iconv-dir=/usr/local</span><br><span class="line"></span><br><span class="line">--with-freetype-dir   #打开对freetype字体库的支持</span><br><span class="line"></span><br><span class="line">--with-jpeg-dir   #打开对jpeg图片的支持</span><br><span class="line"></span><br><span class="line">--with-png-dir   #打开对png图片的支持</span><br><span class="line"></span><br><span class="line">--with-zlib-dir   #打开zlib库的支持，用于http压缩传输</span><br><span class="line"></span><br><span class="line">--with-libxml-dir   #打开libxml2库的支持</span><br><span class="line"></span><br><span class="line">--disable-rpath   #关闭额外的运行库文件</span><br><span class="line"></span><br><span class="line">--enable-bcmath    #打开图片大小调整,用到zabbix监控的时候用到了这个模块</span><br><span class="line"></span><br><span class="line">--enable-shmop --enable-sysvsem  #这样就使得你的PHP系统可以处理相关的IPC函数了。</span><br><span class="line"></span><br><span class="line">--enable-inline-optimization  #优化线程</span><br><span class="line"></span><br><span class="line">--with-curl    #打开curl浏览工具的支持 </span><br><span class="line"></span><br><span class="line">--with-curlwrappers    #运用curl工具打开url流 </span><br><span class="line"></span><br><span class="line">--enable-mbregex</span><br><span class="line"></span><br><span class="line">--enable-fpm #打上PHP-fpm 补丁后才有这个参数，CGI方式安装的启动程序</span><br><span class="line"></span><br><span class="line">--enable-mbstring    #多字节，字符串的支持 </span><br><span class="line"></span><br><span class="line">--with-mcrypt                    #mcrypt算法扩展</span><br><span class="line"></span><br><span class="line">--with-mhash                     #mhash算法扩展</span><br><span class="line"></span><br><span class="line">--with-gd    #打开gd库的支持 </span><br><span class="line"></span><br><span class="line">--enable-gd-native-ttf   #支持TrueType字符串函数库</span><br><span class="line"></span><br><span class="line">--with-openssl      #openssl的支持，加密传输https时用到的</span><br><span class="line"></span><br><span class="line">--enable-pcntl   #freeTDS需要用到的，可能是链接mssql 才用到</span><br><span class="line"></span><br><span class="line">--enable-sockets     #打开 sockets 支持</span><br><span class="line"></span><br><span class="line">--with-xmlrpc   # 打开xml-rpc的c语言</span><br><span class="line"></span><br><span class="line">--enable-zip   #打开对zip的支持</span><br><span class="line"></span><br><span class="line">--enable-ftp   #打开ftp的支持</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--with-bz2   # 打开对bz2文件的支持</span><br><span class="line"></span><br><span class="line">--without-iconv   #关闭iconv函数，字符集间的转换</span><br><span class="line"></span><br><span class="line">--with-ttf     #打开freetype1.*的支持，可以不加了</span><br><span class="line"></span><br><span class="line">--with-xsl     #打开XSLT 文件支持，扩展了libXML2库 ，需要libxslt软件 </span><br><span class="line"></span><br><span class="line">--with-gettext    #打开gnu 的gettext 支持，编码库用到 </span><br><span class="line"></span><br><span class="line">--with-pear    #打开pear命令的支持，PHP扩展用的 </span><br><span class="line"></span><br><span class="line">--enable-calendar    #打开日历扩展功能</span><br><span class="line"></span><br><span class="line">--enable-exif   #图片的元数据支持 </span><br><span class="line"></span><br><span class="line">--enable-magic-quotes    #魔术引用的支持 </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">--disable-debug    #关闭调试模式 </span><br><span class="line"></span><br><span class="line">--with-mime-magic=/usr/share/file/magic.mime      #魔术头文件位置</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">CGI方式安装才用的参数</span></span><br><span class="line"></span><br><span class="line">--enable-fastCGI            #支持fastcgi方式启动PHP</span><br><span class="line"></span><br><span class="line">--enable-force-CGI-redirect        #重定向方式启动PHP</span><br><span class="line"></span><br><span class="line">--with-ncurses         #支持ncurses 屏幕绘制以及基于文本终端的图形互动功能的动态库</span><br><span class="line"></span><br><span class="line">--with-gmp  应该是支持一种规范</span><br><span class="line"></span><br><span class="line">--enable-dbase                     #建立DBA 作为共享模块</span><br><span class="line"></span><br><span class="line">--with-pcre-dir=/usr/local/bin/pcre-config      #perl的正则库案安装位置</span><br><span class="line"></span><br><span class="line">--disable-dmalloc</span><br><span class="line"></span><br><span class="line">--with-gdbm                     #dba的gdbm支持</span><br><span class="line"></span><br><span class="line">--enable-sigchild</span><br><span class="line"></span><br><span class="line">--enable-sysvshm</span><br><span class="line"></span><br><span class="line">--enable-zend-multibyte         #支持zend的多字节</span><br><span class="line"></span><br><span class="line">--enable-wddx</span><br><span class="line"></span><br><span class="line">--enable-soap</span><br></pre></td></tr></table></figure><h1 id="shell脚本"><a href="#shell脚本" class="headerlink" title="shell脚本"></a>shell脚本</h1><p>php编译安装<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash">php编译安装php ,Nginx+php使用</span></span><br><span class="line"><span class="meta">#</span><span class="bash">定义函数，默认绿色输出 <span class="string">'#'</span> 开头为红色</span></span><br><span class="line">function echocolor() </span><br><span class="line">&#123;</span><br><span class="line"> [[ $1 = '#' ]] &amp;&amp; echo -e "\033[31m $* \033[0m" || echo -e "\033[32m $* \033[0m" </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">检测网络</span></span><br><span class="line">ping baidu.com -c 2 &amp;&gt;/dev/null || ping qq.com -c 2 &amp;&gt;/dev/null || &#123; echocolor '#' "网络异常！";exit; &#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">设置yum 安装包不删除 目录 /var/cache/yum/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">sed  -i <span class="string">'s/keepcache=0/keepcache=1/g'</span> /etc/yum.conf</span></span><br><span class="line">echocolor '#安装需要的库'</span><br><span class="line">yum install epel-release -y</span><br><span class="line">yum install gcc gcc-c++ bison bison-devel zlib-devel libmcrypt-devel mcrypt mhash-devel openssl-devel libxml2-devel libcurl-devel bzip2-devel readline-devel libedit-devel sqlite-devel jemalloc jemalloc-devel libjpeg-devel libpng-devel libicu-devel openldap-devel ftp -y</span><br><span class="line">echocolor  "#设置目录"</span><br><span class="line">echocolor "#下载目录"</span><br><span class="line">read Ddir</span><br><span class="line">echocolor "#安装版本"</span><br><span class="line">read Sv</span><br><span class="line">Sdir="/usr/local/php/php$Sv"</span><br><span class="line">echocolor "#安装目录:"</span><br><span class="line">echocolor "$Sdir"</span><br><span class="line">[ -d $Ddir ] || mkdir -p $Ddir</span><br><span class="line">[ -d $Sdir/etc ] || mkdir -p $Sdir/etc</span><br><span class="line"><span class="meta">#</span><span class="bash">[ -d <span class="variable">$Sdir</span>/apache/bin/apxs ] || mkdir -p <span class="variable">$Sdir</span>/apache/bin/apxs</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#下载</span></span></span><br><span class="line">echocolor "#请输入下载链接"</span><br><span class="line">read Durl</span><br><span class="line">wget -c $Durl -O $Ddir/php.tar.gz</span><br><span class="line">echocolor "添加用户"</span><br><span class="line">useradd -s /sbin/nologin -M www</span><br><span class="line">id www</span><br><span class="line">echocolor  "解压"</span><br><span class="line">[ -e $Ddir/php.tar.gz ] &amp;&amp; &#123; tar xzvf $Ddir/php*.tar.gz -C $Ddir/;cd $Ddir/php*; &#125; || &#123; echocolor '#' "$Ddir目录无php源码包";exit ; &#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> [ `uname -m` = <span class="string">"x86_64"</span> ] &amp;&amp; LIB=/usr/lib64 || LIB=/usr/lib64</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --with-apxs2=/usr/<span class="built_in">local</span>/apache/bin/apxs <span class="comment">#编译参数，apache+php使用</span></span></span><br><span class="line">make clean</span><br><span class="line">echocolor 编译</span><br><span class="line">./configure \</span><br><span class="line">--prefix=$Sdir/ \</span><br><span class="line">--with-config-file-path=$Sdir/etc \</span><br><span class="line">--enable-inline-optimization \</span><br><span class="line">--disable-debug \</span><br><span class="line">--disable-rpath \</span><br><span class="line">--enable-shared \</span><br><span class="line">--enable-opcache \</span><br><span class="line">--enable-fpm \</span><br><span class="line">--with-fpm-user=www \</span><br><span class="line">--with-fpm-group=www \</span><br><span class="line">--with-mysql=mysqlnd \</span><br><span class="line">--with-mysqli=mysqlnd \</span><br><span class="line">--with-pdo-mysql=mysqlnd \</span><br><span class="line">--with-gettext \</span><br><span class="line">--enable-mbstring \</span><br><span class="line">--with-iconv \</span><br><span class="line">--with-mcrypt \</span><br><span class="line">--with-mhash \</span><br><span class="line">--with-openssl \</span><br><span class="line">--enable-bcmath \</span><br><span class="line">--enable-soap \</span><br><span class="line">--with-libxml-dir \</span><br><span class="line">--enable-pcntl \</span><br><span class="line">--enable-shmop \</span><br><span class="line">--enable-sysvmsg \</span><br><span class="line">--enable-sysvsem \</span><br><span class="line">--enable-sysvshm \</span><br><span class="line">--enable-sockets \</span><br><span class="line">--with-curl \</span><br><span class="line">--with-zlib \</span><br><span class="line">--enable-zip \</span><br><span class="line">--with-bz2 \</span><br><span class="line">--enable-ftp \</span><br><span class="line">--with-ldap-dir=/usr/lib \</span><br><span class="line">--with-png-dir=/usr/lib \</span><br><span class="line">--with-jpeg-dir=/usr/lib \</span><br><span class="line">--with-readline</span><br><span class="line">[ $? = 0 ] || &#123; echocolor '#' "编译出现问题 ！";exit; &#125;</span><br><span class="line">echo 编译安装</span><br><span class="line">make -j4 </span><br><span class="line">make install</span><br><span class="line">make clean</span><br><span class="line">make clean all</span><br><span class="line">echo #配置PHP</span><br><span class="line">cp php.ini-production $Sdir/etc/php.ini</span><br><span class="line">cp $Sdir/etc/php-fpm.conf.default $Sdir/etc/php-fpm.conf</span><br><span class="line">cp sapi/fpm/init.d.php-fpm $Sdir/bin/php-fpm-$Sv</span><br><span class="line">cp $Sdir/etc/php-fpm.d/www.conf.default $Sdir/etc/php-fpm.d/www.conf</span><br><span class="line">chmod +x $Sdir/bin/php-fpm-$Sv</span><br><span class="line">ln -s $Sdir/bin/php-fpm-$Sv /etc/init.d/php-fpm-$Sv</span><br><span class="line">ln -s $Sdir/etc/php-fpm.conf /etc/php-fpm/php-fpm-$Sv.conf</span><br><span class="line">ln -s $Sdir/etc/php.ini /etc/php/php-$Sv.ini</span><br><span class="line">chkconfig --add php-fpm-$Sv</span><br><span class="line">chkconfig php-fpm-$Sv on</span><br><span class="line">chkconfig --list php-fpm-$Sv</span><br><span class="line">echocolor #显示版本</span><br><span class="line"><span class="meta">$</span><span class="bash">Sdir/bin/php -v</span></span><br></pre></td></tr></table></figure><p></p><p>mariadb<br></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash">php编译安装php ,Nginx+php使用</span></span><br><span class="line"><span class="meta">#</span><span class="bash">定义函数，默认绿色输出 <span class="string">'#'</span> 开头为红色</span></span><br><span class="line">function echocolor()</span><br><span class="line">&#123;</span><br><span class="line"> [[ $1 = '#' ]] &amp;&amp; echo -e "\033[31m $* \033[0m" || echo -e "\033[32m $* \033[0m"</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">检测网络</span></span><br><span class="line">ping baidu.com -c 2 &amp;&gt;/dev/null || ping qq.com -c 2 &amp;&gt;/dev/null || &#123; echocolor '#' "网络异常！";exit; &#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">设置yum 安装包不删除 目录 /var/cache/yum/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">sed  -i <span class="string">'s/keepcache=0/keepcache=1/g'</span> /etc/yum.conf</span></span><br><span class="line">echocolor '#安装需要的库'</span><br><span class="line">yum groupinstall -y Development Tools</span><br><span class="line">yum install -y ncurses-devel openssl-devel openssl</span><br><span class="line"></span><br><span class="line">groupadd mysql</span><br><span class="line">useradd -s /sbin/nologin -g mysql -M mysql</span><br><span class="line">id mysql</span><br><span class="line">uid=500(mysql) gid=500(mysql) groups=500(mysql)</span><br><span class="line">echocolor "#创建数据库数据存放目录"</span><br><span class="line">mkdir /mydata/data -pv</span><br><span class="line">chown mysql:mysql /mydata/data/ -R</span><br><span class="line">echocolor "#设置目录"</span><br><span class="line">echocolor "#下载目录"</span><br><span class="line">read Ddir</span><br><span class="line">[ -d $Ddir ] || mkdir -p $Ddir</span><br><span class="line">wget -c http://ftp.utexas.edu/mariadb//mariadb-10.3.8/source/mariadb-10.3.8.tar.gz -O $Ddir/mariadb.tar.gz</span><br><span class="line">echocolor  "解压"</span><br><span class="line">[ -e $Ddir/mariadb.tar.gz ] &amp;&amp; &#123; tar xzvf $Ddir/mariadb*.tar.gz -C $Ddir/;cd $Ddir/mariadb*; &#125; || &#123; echocolor '#' "$Ddir目录无mariadb源码包";exit ; &#125;</span><br></pre></td></tr></table></figure><p></p>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>编译</tag>
      </tags>
  </entry>
  <entry>
    <title>./configure: error: SSL modules require the OpenSSL library.</title>
    <url>/posts/62587966/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>CentOS 7.2 下 ./configure Nginx 时出现以下错误 ./configure: error: SSL modules require the OpenSSL library. 解决方法： 执行以下命令：<br><a id="more"></a><br>yum -y install openssl openssl-devel</p>]]></content>
      <tags>
        <tag>configure</tag>
        <tag>OpenSSL</tag>
      </tags>
  </entry>
  <entry>
    <title>configure: error: You need a C++ compiler for C++ support</title>
    <url>/posts/7519910/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>linux下载安装pcre-8.35</p><pre><code>./configure --prefix=/usr/local/pcre
</code></pre><a id="more"></a><p>报错:</p><p>configure: error: You need a C++ compiler for C++ support</p><p>解决:</p><pre><code>yum install -y gcc gcc-c++
</code></pre>]]></content>
      <tags>
        <tag>编译</tag>
        <tag>报错</tag>
        <tag>gcc-c++</tag>
        <tag>pcre</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx 编译安装</title>
    <url>/posts/e20a094/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="准备过程"><a href="#准备过程" class="headerlink" title="准备过程"></a>准备过程</h3><ol><li>下载<a href="http://www.pcre.org/" target="_blank" rel="noopener">PCRE</a>库，并解压</li><li>下载<a href="http://www.zlib.net/" target="_blank" rel="noopener">zlib</a>库，并解压</li><li>下载<a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">Nginx</a>的最新代码，解压</li></ol><a id="more"></a><h3 id="编译安装过程"><a href="#编译安装过程" class="headerlink" title="编译安装过程"></a>编译安装过程</h3><ul><li><p>写好各种参数，到Nginx的源码目录下运行配置命令。其中，还要使用参数指向刚才下载的PCRE和zlib库的位置:</p><p>./configure \<br>–prefix=/usr/local/nginx \<br>–pid-path=/var/run/nginx.pid \<br>–lock-path=/var/lock/nginx.lock \<br>–with-http_ssl_module \<br>–with-http_dav_module \<br>–with-http_flv_module \<br>–with-http_realip_module \<br>–with-http_gzip_static_module \<br>–with-http_stub_status_module \<br>–with-mail –with-mail_ssl_module \<br>–with-pcre=../pcre-8.37 \<br>–with-zlib=../zlib-1.2.8 \<br>–with-debug \<br>–http-client-body-temp-path=/var/tmp/nginx/client \<br>–http-proxy-temp-path=/var/tmp/nginx/proxy \<br>–http-fastcgi-temp-path=/var/tmp/nginx/fastcgi \<br>–http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \<br>–http-scgi-temp-path=/var/tmp/nginx/scgi</p></li></ul><ul><li><p>编译并安装</p><p>make &amp;&amp; make install</p></li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>链接配置文件</p><pre><code>mkdir -p /etc/nginx/conf.d
ln -s /usr/local/nginx/conf/nginx.conf /etc/nginx/
ln -s /usr/local/nginx/conf/fastcgi_params /etc/nginx/
</code></pre><p>注册成服务脚本 先创建文件/etc/init.d/nginx 内容为:</p><p>#!/bin/sh<br># chkconfig: 2345 85 15<br># description:Nginx Server</p><p>NGINX_HOME=/usr/local/nginx<br>NGINX_SBIN=$NGINX_HOME/sbin/nginx<br>NGINX_CONF=$NGINX_HOME/conf/nginx.conf<br>NGINX_PID=$NGINX_HOME/logs/nginx.pid</p><p>NGINX_NAME=”Nginx”</p><p>. /etc/rc.d/init.d/functions</p><p>if [ ! -f $NGINX_SBIN ]<br>then<br>echo “$NGINX_NAME startup: $NGINX_SBIN not exists! “<br>exit<br>fi</p><p>start() {<br>$NGINX_SBIN -c $NGINX_CONF<br>ret=$?<br>if [ $ret -eq 0 ]; then<br>action $”Starting $NGINX_NAME: “ /bin/true<br>else<br>action $”Starting $NGINX_NAME: “ /bin/false<br>fi<br>}</p><p>stop() {<br>kill `cat $NGINX_PID`<br>ret=$?<br>if [ $ret -eq 0 ]; then<br>action $”Stopping $NGINX_NAME: “ /bin/true<br>else<br>action $”Stopping $NGINX_NAME: “ /bin/false<br>fi<br>}</p><p>restart() {<br>stop<br>start<br>}</p><p>check() {<br>$NGINX_SBIN -c $NGINX_CONF -t<br>}</p><p>reload() {<br>kill -HUP `cat $NGINX_PID` &amp;&amp; echo “reload success!”<br>}</p><p>relog() {<br>kill -USR1 `cat $NGINX_PID` &amp;&amp; echo “relog success!”<br>}</p><p>case “$1” in<br>start)<br>start<br>;;<br>stop)<br>stop<br>;;<br>restart)<br>restart<br>;;<br>check|chk)<br>check<br>;;<br>status)<br>status -p $NGINX_PID<br>;;<br>reload)<br>reload<br>;;<br>relog)<br>relog<br>;;<br>*)<br>echo $”Usage: $0 {start|stop|restart|reload|status|check|relog}”<br>exit 1<br>esac</p><p>通过chkconfig管理:</p><p>chkconfig –add /etc/init.d/nginx</p><p>加入开机自启动:</p><p>chkconfig nginx on</p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p>附上一些常用配置参数的含义：</p><pre><code>--prefix #nginx安装目录，默认在/usr/local/nginx
--pid-path #pid问件位置，默认在logs目录
--lock-path #lock问件位置，默认在logs目录
--with-http_ssl_module #开启HTTP SSL模块，以支持HTTPS请求。
--with-http_dav_module #开启WebDAV扩展动作模块，可为文件和目录指定权限
--with-http_flv_module #支持对FLV文件的拖动播放
--with-http_realip_module #支持显示真实来源IP地址
--with-http_gzip_static_module #预压缩文件传前检查，防止文件被重复压缩
--with-http_stub_status_module #取得一些nginx的运行状态
--with-mail #允许POP3/IMAP4/SMTP代理模块
--with-mail_ssl_module #允许POP3／IMAP／SMTP可以使用SSL／TLS
--with-pcre=../pcre-8.11 #注意是未安装的pcre路径
--with-zlib=../zlib-1.2.5 #注意是未安装的zlib路径
--with-debug #允许调试日志
--http-client-body-temp-path #客户端请求临时文件路径
--http-proxy-temp-path #设置http proxy临时文件路径
--http-fastcgi-temp-path #设置http fastcgi临时文件路径
--http-uwsgi-temp-path=/var/tmp/nginx/uwsgi #设置uwsgi 临时文件路径
--http-scgi-temp-path=/var/tmp/nginx/scgi #设置scgi 临时文件路径
</code></pre>]]></content>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>不重新编译PHP，单独添加扩展模块的方法</title>
    <url>/posts/42280e4b/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3>问题</h3><p>php自身提供了很多扩展，比如curl，gmp, mbstring等等。我们在编译安装php时未必安装了所有扩展。那么在安装完php后，如果想单独安装某个php自身的扩展怎么办呢？</p><p>我们以curl扩展模块的安装为例说明如何单独添加扩展。</p><a id="more"></a><h3>步骤</h3><p>1.进入php源码的<em><strong>扩展</strong></em>目录。本例中我的源码对应目录如下：</p><pre class="wp-block-code"><code>/root/.tmp/php72/php-7.2.7/ext/</code></pre><p>2.进入模块目录，我们安装的是gd扩展，所以进入gd目录。此时，我们所在的目录是</p><pre class="wp-block-code"><code>/root/.tmp/php72/php-7.2.7/ext/gd</code></pre><p>3.执行phpize。注意，如果你的机器上有多个php版本，一定要执行你准备安装扩展的php版本对应的phpize。比如，我的机器上同时有php7.2和php5.6。我当前准备为php7.2安装gd扩展。所以执行php7.2对应的phpize</p><pre class="wp-block-code"><code>/usr/local/php/php72/bin/phpize 

Configuring for:
PHP Api Version:         20170718
Zend Module Api No:      20170718
Zend Extension Api No:   320170718</code></pre><p>4.configure</p><pre class="wp-block-code"><code>./configure --with-php-config=/usr/local/php/php72/bin/php-config</code></pre><p>说明：如果你的机器上只有一个php版本，大多时候不需要特别使用–with-php-config指明相应的php-config所在位置。</p><p>5.执行make，之后会在./modules/目录下生成gd.so文件</p><p>6.执行make install</p><pre class="wp-block-code"><code>结果类似：
Installing shared extensions:     /usr/local/php70/lib/php/20151012/</code></pre><p>7.修改php.ini</p><pre class="wp-block-code"><code>extension=gd.so</code></pre>]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>编译</tag>
        <tag>nginx</tag>
        <tag>模块添加</tag>
      </tags>
  </entry>
</search>
