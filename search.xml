<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo 配置gitalk]]></title>
    <url>%2Fposts%2F44125ab6%2F</url>
    <content type="text"><![CDATA[我现在用的博客是静态网页，没有独立的后端服务器来支撑，为了实现评论功能，需要对接第三方的评论插件，经过各种考虑，决定使用gitalk。这是一个基于GitHub的issues来实现的评论工具。这个功能使用到了以下插件GitHub首先得有一个GitHub账号，然后打开链接↙️New OAuth application注册一个OAuth App具体填写参考如下：1234Application name //应用名称Homepage URL //填自己的博客地址就可以了Application description //应用描述Authorization callback URL //填写自己要用 gitalk 的博客地址在这里填写完成之后你就会得到Client ID和Client Secret。文件修改在主题目录下建立/layout/_third-party/gitalk.swig文件并添加以下代码1234567891011121314151617181920212223&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;&gt; &lt;script src=&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; var gitalk = new Gitalk(&#123; clientID: &apos;&#123;&#123; theme.gitalk.ClientID &#125;&#125;&apos;, clientSecret: &apos;&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;&apos;, repo: &apos;&#123;&#123; theme.gitalk.repo &#125;&#125;&apos;, owner: &apos;&#123;&#123; theme.gitalk.owner &#125;&#125;&apos;, admin: &apos;&#123;&#123; theme.gitalk.adminUser &#125;&#125;&apos;, id: md5(&#123;&#123; theme.gitalk.ID &#125;&#125;), labels: &#123;&#123; theme.gitalk.labels &#125;&#125;, perPage: &#123;&#123; theme.gitalk.perPage &#125;&#125;, pagerDirection: &apos;&#123;&#123; theme.gitalk.pagerDirection &#125;&#125;&apos;, createIssueManually: &#123;&#123; theme.gitalk.createIssueManually &#125;&#125;, distractionFreeMode: &#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125; &#125;) gitalk.render(&apos;gitalk-container&apos;) &lt;/script&gt;&#123;% endif %&#125;在主题的/layout/_scripts/commons.swig中添加以下代码1&#123;% include &apos;../_third-party/comments/gitalk.swig&apos; %&#125;接着，在主题的/layout/_partials/comments.swig中找到1234&#123;% elseif theme.valine.appid and theme.valine.appkey %&#125; &lt;div class=&quot;comments&quot; id=&quot;comments&quot;&gt; &lt;/div&gt;&#123;% endif %&#125;并添加以下代码123&#123;% if theme.gitalk.enable %&#125; &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;&#123;% endif %&#125;进行配置在主题的配置文件中，添加一下内容12345678910111213gitalk: enable: true # 是否启动 ClientID: xxxxxx # 之前的Client ID ClientSecret: xxxxxxxxxxxx # 之前的Client Secret repo: gitalk # 留言板内容需要存放的仓库名称 owner: l552121229 # 你 github 的帐号 eg: www.github.com/zhongxia245 ,帐号就是245 adminUser: ['l552121229'] # 管理员用户 ID: location.pathname labels: '["gitalk"]' # issue 的标签 perPage: 15 # 每页展示条数 pagerDirection: last # 排序方式是从旧到新（first）还是从新到旧（last） createIssueManually: true #如果当前页面没有相应的 isssue ，且登录的用户属于 admin，则会自动创建 issue。如果设置为 true，则显示一个初始化页面，创建 issue 需要点击 init 按钮。 distractionFreeMode: true #是否启用快捷键(cmd|ctrl + enter) 提交评论.因为我们上面配置的gitalk是用location.pathname来作为项目标签区分的，如果这个文章名超过50个字就会报错，为了保险起见，我们通过引入md5.min.js来防止lables过长。]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>gitalk</tag>
        <tag>评论</tag>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo 插件]]></title>
    <url>%2Fposts%2F54690ca6%2F</url>
    <content type="text"><![CDATA[搜集整理常用的hexo插件hexo-tag-aplayerAPlayer 播放器的 Hexo 标签插件效果：var options={narrow:!1,autoplay:!1,showlrc:3,mode:"random",mutex:!0,theme:"#e6d0b2",preload:"metadata",listmaxheight:"100%",music:[{title:"トリカゴ",author:"XX:me",url:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/darling.mp3",pic:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/darling.jpg",lrc:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/darling.lrc"},{title:"前前前世",author:"RADWIMPS",url:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/yourname.mp3",pic:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/yourname.jpg",lrc:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/yourname.lrc"},{title:"光るなら",author:"Goose house",url:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.mp3",pic:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.jpg",lrc:"https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.lrc"}]};options.element=document.getElementById("aplayer-TieZUREI");var ap=new APlayer(options);window.aplayers||(window.aplayers=[]),window.aplayers.push(ap)1234#安装yarn add hexo-tag-aplayer#使用&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;标签参数title : 曲目标题author: 曲目作者url: 音乐文件 URL 地址picture_url: (可选) 音乐对应的图片地址narrow: （可选）播放器袖珍风格autoplay: (可选) 自动播放，移动端浏览器暂时不支持此功能width:xxx: (可选) 播放器宽度 (默认: 100%)lrc:xxx: （可选）歌词文件 URL 地址hexo-github-card使用这个插件可以像上面这样👆显示逼格较高的GitHub链接使用时只需要插入下面👇这个🏷️就可以了123&#123;% githubCard user:your_user [repo:your_repo] [width:400] [height:200] [theme:default] [client_id:your_client_id] [client_secret:your_client_secret] [align:text-align_position] %&#125;//这是上面那个卡片🏷️&#123;% githubCard user:Gisonrg repo:hexo-github-card %&#125;这个插件的默认宽度感觉有点不够美观，每次使用都需要自定义宽度也有点费事，而且默认打开方式是在当前页面页打开很不人性化，受不了的话可以选择修改文件node_modules/hexo-github-card/index.js1234567891011121314151617181920const user = argsObj.user, repo = argsObj.repo, width = argsObj.width || '100%',//宽度自适应 height = argsObj.height || '200', theme = argsObj.theme || 'default', client_id = argsObj.client_id || '', client_secret = argsObj.client_secret || '', align = argsObj.align || 'center';const payload = &#123; user, repo, height, width, theme, client_id, client_secret, style: `text-align: $&#123;align&#125;`, target: 'blank',//加上这个可以在其他标签页打开链接&#125;;由于直接在原文件上修改，后面再进行yarn的一些相关操作时yarn总是会自动把代码还原回去，yarn还不支持ignore名单功能，我就在原来的插件基础上进行了小的修改，使它的默认值配置更加人性化一点，有需要的小伙伴可以直接看看这个👇这个修改过的插件可以配置默认设置_config.yml123456github_card: width: 100% height: 200px theme: default align: center target: blank基于next的插件我现在使用的next是7.4.0版本的，下面的几个插件都是基于这个版本确认可用的，其他版本需要具体看相应的GitHub链接的说明theme-next-canvas-nest进入主题目录并clone代码12cd themes/nextgit clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest配置themes/next/_config.yml1234567canvas_nest: enable: true onmobile: true # display on mobile or not color: '0,0,255' # RGB values, use ',' to separate opacity: 0.5 # the opacity of line: 0~1 zIndex: -1 # z-index property of the background count: 99 # the number of lines更新12cd themes/next/source/lib/canvas-nestgit pulltheme-next-pjax在hexo上使用pjax，优化访问速度，这个插件基于主题next实现使用12cd themes/nextgit clone https://github.com/theme-next/theme-next-pjax source/lib/pjax修改文件themes/next/_config.yml12345pjax: true...vendors: ... pjax: //cdn.jsdelivr.net/gh/theme-next/theme-next-pjax@0/pjax.min.js]]></content>
  </entry>
  <entry>
    <title><![CDATA[git本地仓库和裸仓库]]></title>
    <url>%2Fposts%2Fac107f22%2F</url>
    <content type="text"><![CDATA[git 初始化1234git init #git目录初始化git init &lt;repo&gt; #本地初始化，并且建立一个名为repo的空仓库git init --bare #git裸仓库初始化git init --bare &lt;repo&gt; #指定某个目录成为中心仓库（裸仓库）git init这个命令执行后会在本地生成一个 .git 的文件夹，用来追踪仓库的所有变更。--bare: 使用 –bare 参数初始化的仓库，我们一般称之为裸仓库， 因为这样创建的仓库并不包含 工作区 ， 也就是说，我们并不能在这个目录下执行我们一般使用的 Git 命令。对比直接 git init 创建的仓库:1234567[core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true ignorecase = true precomposeunicode = true加了--bare创建的裸仓库:123456[core] repositoryformatversion = 0 filemode = true bare = true ignorecase = true precomposeunicode = true可以看到最直观的差异在于bare配置项是否为true， 此外不加--bare创建的本地仓库配置中有一项logallrefupdates = true, 作用根据名字就可以看出来， 记录所有的ref(引用) 更新， 关于ref的部分之后有时间可以再写，这个配置可以理解为是 Git 的一道防线。功能差异我们可以使用最简单的例子演示一下。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960# 直接创建本地仓库git ➤ git init repo# 创建裸仓库git ➤ git init --bare repo.git# 分别 clone 两个仓库git ➤ git clone repo test1正克隆到 'test1'...warning: 您似乎克隆了一个空版本库。完成。git ➤ git clone repo.git test2正克隆到 'test2'...warning: 您似乎克隆了一个空版本库。完成。git ➤# 进入 test1 仓库git ➤ cd test1test1 ➤ touch test git:mastertest1 ➤ git add . git:master*test1 ➤ git commit -m '测试提交' git:master*[master（根提交） 456cf23] 测试提交 1 file changed, 0 insertions(+), 0 deletions(-) create mode 100644 testtest1 ➤ git push origin master git:masterCounting objects: 3, done.Writing objects: 100% (3/3), 217 bytes | 0 bytes/s, done.Total 3 (delta 0), reused 0 (delta 0)remote: error: refusing to update checked out branch: refs/heads/masterremote: error: By default, updating the current branch in a non-bare repositoryremote: error: is denied, because it will make the index and work tree inconsistentremote: error: with what you pushed, and will require 'git reset --hard' to matchremote: error: the work tree to HEAD.remote: error:remote: error: You can set 'receive.denyCurrentBranch' configuration variable toremote: error: 'ignore' or 'warn' in the remote repository to allow pushing intoremote: error: its current branch; however, this is not recommended unless youremote: error: arranged to update its work tree to match what you pushed in someremote: error: other way.remote: error:remote: error: To squelch this message and still keep the default behaviour, setremote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.To /home/git/repo ! [remote rejected] master -&gt; master (branch is currently checked out)error: 无法推送一些引用到 '/home/git/repo'# 进入 test2 仓库重复执行test1 ➤ cd ../test2 git:mastertest2 ➤ touch test git:mastertest2 ➤ git add . git:master*test2 ➤ git commit -m '再次测试提交' git:master*[master（根提交） c56efe8] 再次测试提交 1 file changed, 0 insertions(+), 0 deletions(-) create mode 100644 testtest2 ➤ git push origin master git:masterCounting objects: 3, done.Writing objects: 100% (3/3), 223 bytes | 0 bytes/s, done.Total 3 (delta 0), reused 0 (delta 0)To /home/git/repo.git * [new branch] master -&gt; mastertest2 ➤从裸仓库中clone下来的本地仓库可以正常的push操作，这也正是裸仓库的存在意义原文链接：Git 本地仓库和裸仓库]]></content>
  </entry>
  <entry>
    <title><![CDATA[git 合并操作]]></title>
    <url>%2Fposts%2F150d1834%2F</url>
    <content type="text"><![CDATA[git 合并操作通过git log查看提交记录及其commitId再通过git reset --soft commitId来回退版本(–soft 和 –hard的区别就是 –soft是软回退，会将你这次commitId之后的提交全部回退到暂存区中，–hard会将你这次commitId之后的提交全部清除掉)此时你这次commitId之后的提交都会回到暂存区中git commit -m 随便写注释]]></content>
  </entry>
  <entry>
    <title><![CDATA[基于Redis的GeoHash在PHP上的应用]]></title>
    <url>%2Fposts%2F3dd74411%2F</url>
    <content type="text"><![CDATA[GeoHash有着以下几个特点GeoHash用一个字符串表示经度和纬度两个坐标,便于加上索引.GeoHash表示的并不是一个点，而是一个矩形区域.编码的前缀可以表示更大的区域, 可以很方便的进行区域检索, 聚合等相关操作.综上所述, GeoHash比直接用经纬度的高效很多.GeoHash算法编码GeoHash首先将精度范围设定为划分成两个区间(-180, 0), (0, 180), 如果经度坐标落到了前一个区间则标记为0, 反之则标记为1.然后再将上一步获得到的区间划分成两个区间, 重复上一步.重复前前两步直到得到自己所需要的精度以此类推来得到纬度的HashBin (关于纬度的初始划分区间, 一般的共用算法里都是±90, 而redis里用的却是±85.05112878)如 (23.17015353059966287, 113.46623629331588745) 通过区间划分可以得到:(1101000010101111111001011110, 101000101101111011011100011)接下来是对划分结果的合并, 按照奇数位是纬度, 偶数位为经度的原则来进行合并.上面的例子合并可得:1110011000000100110110011111111011111001011100101011110之后再按照非标准的base32算法进行字符串的转化, 下面是对照表格十进制0123456789101112131415二进制00000000010001000011001000010100110001110100001001010100101101100011010111001111base320123456789bcdefg十进制16171819202122232425262728293031二进制10000100011001010011101001010110110101111100011001110101101111100111011111011111base32hjkmnpqrstuvwxyz最终(23.17015353059966287, 113.46623629331588745)被转化成’ws2emzrtfby’.解码则和编码正好相反即可.PHP的实现123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215class Geohash&#123; private static $coding = '0123456789bcdefghjkmnpqrstuvwxyz'; private static $codingMap = [ '0' =&gt; '00000', '1' =&gt; '00001', '2' =&gt; '00010', '3' =&gt; '00011', '4' =&gt; '00100', '5' =&gt; '00101', '6' =&gt; '00110', '7' =&gt; '00111', '8' =&gt; '01000', '9' =&gt; '01001', 'b' =&gt; '01010', 'c' =&gt; '01011', 'd' =&gt; '01100', 'e' =&gt; '01101', 'f' =&gt; '01110', 'g' =&gt; '01111', 'h' =&gt; '10000', 'j' =&gt; '10001', 'k' =&gt; '10010', 'm' =&gt; '10011', 'n' =&gt; '10100', 'p' =&gt; '10101', 'q' =&gt; '10110', 'r' =&gt; '10111', 's' =&gt; '11000', 't' =&gt; '11001', 'u' =&gt; '11010', 'v' =&gt; '11011', 'w' =&gt; '11100', 'x' =&gt; '11101', 'y' =&gt; '11110', 'z' =&gt; '11111' ]; public static function decode(string $hash, $number = false) &#123; if ($number) &#123; $binary = base_convert($hash, 10, 2); &#125; else &#123; $binary = ''; $hl = strlen($hash); for($i=0; $i&lt;$hl; $i++) &#123; $binary .= self::$codingMap[substr($hash,$i,1)]; &#125; &#125; $bl = strlen($binary); $blat = ''; $blong = ''; //取出经纬度 for ($i=0; $i&lt;$bl; $i++) &#123; if ($i%2) $blat = $blat.substr($binary,$i,1); else $blong = $blong.substr($binary,$i,1); &#125; //翻译经纬度 list( $lat, $latErr ) = self::binDecode($blat,-85.05112878,85.05112878); list( $long, $longErr ) = self::binDecode($blong,-180,180); //精度处理 $latPlaces = max(1, -round(log10($latErr))) - 1; $longPlaces = max(1, -round(log10($longErr))) - 1; $lat = round($lat, $latPlaces); $long = round($long, $longPlaces); return [$lat, $long]; &#125; public static function hash2num(string $hash, $bin = false) &#123; $binary = ''; $hl = strlen($hash); for($i=0; $i&lt;$hl; $i++) &#123; $binary .= self::$codingMap[substr($hash,$i,1)]; &#125; if ($bin) return $binary; return base_convert(substr($binary, 0, 52), 2, 10); &#125; /** * 坐标转化 * @param $lat * @param $long * @return string */ public static function encode( $lat, $long, bool $number = false ) :string &#123; //计算lat精度 $latbits = 1; $err = 45; $plat = self::precision($lat); //计算计算次数 while($err &gt; $plat) &#123; $err /= 2; $latbits ++; &#125; $longbits = 1; $err = 90; $plong = self::precision($long); while($err &gt; $plong) &#123; $err /= 2; $longbits ++; &#125; $bits = max($latbits, $longbits); $longbits = $bits; $latbits = $bits; $addlong = 1; //为了可以进行合并填充数位 2^5 = 32 while (($longbits+$latbits)%5 != 0) &#123; $longbits += $addlong; $latbits += !$addlong; $addlong = !$addlong; &#125; $blat = self::binEncode($lat,90, 90, $latbits); $blong = self::binEncode($long, -180, 180, $longbits); $binary = ''; $uselong = 1; $strlen = strlen($blat) + strlen($blong); //合并位数 for ($i = 0; $i&lt;$strlen; $i++) &#123; if ($uselong) &#123; $binary .= substr($blong,0,1); $blong = substr($blong,1); &#125; else &#123; $binary .= substr($blat,0,1); $blat = substr($blat,1); &#125; $uselong = !$uselong; &#125; if ($number) return bindec(substr($binary, 0, 52)); $hash = ''; $leng = strlen($binary); for ($i=0; $i&lt;$leng; $i+=5) &#123; $n = bindec(substr($binary,$i,5)); $hash = $hash. self::$coding[$n]; &#125; return $hash; &#125; /** * 计算精度 * @param float $number * @return float|int */ private static function precision(float $number) &#123; $precision = 0; $pt = strpos($number,'.'); if ($pt !== false) &#123; $precision = - (strlen($number) - $pt - 1); &#125; return pow(10, $precision) / 2; &#125; private static function binEncode($number, $min, $max, $bitcount) &#123; if ($bitcount == 0) return ''; $mid = bcdiv(bcadd($min, $max, 52), 2, 52); if (bccomp($number, $mid, 52) == 1) return '1'. self::binEncode( $number, $mid, $max,$bitcount-1 ); else return '0'. self::binEncode( $number, $min, $mid,$bitcount-1 ); &#125; private static function binDecode( $binary, $min, $max ) &#123; $binlen = strlen($binary); $err = bcsub($max, $min, 52); for($i = 0; $i &lt; $binlen; $i++) &#123; $bit = substr($binary,$i,1); $mid = bcdiv(bcadd($min, $max, 52), 2, 52); $err = bcdiv($err, 2, 52); if ($bit == 1) &#123; $min = $mid; &#125; else &#123; $max = $mid; &#125; &#125; return [$mid, $err]; &#125;&#125;Redis上的应用Redis的GEO特性在Redis 3.2版本释出,这个功能可以将用户给定的地理位置信息储存起来,并对这些信息进行操作.GEOADD1GEOADD key longitude latitude name [longitude latitude name ...]GEOADD 命令每次可以添加一个或多个经纬度地理位置。 其中key为储存地理位置的集合， 而 longitude 、 latitude 和 name 则分别为地理位置的经度、纬度、名字.1127.0.0.1:6379&gt; GEOADD geo_test 113.46623629331588745 23.17015353059966287 test_1 113.46620947122573853 23.17010790561879929 test_2GEOPOSGEOPOS 命令可以获取Geo的坐标1GEOPOS key name [name ...]如:123127.0.0.1:6379&gt; geopos geo_test test_21) 1) &quot;113.46620947122573853&quot; 2) &quot;23.17010790561879929&quot;GEODIST计算两个坐标点之间的距离1GEODIST key location-x location-y [unit]其中unit表示单位 默认为 mm 表示单位为米。km 表示单位为千米。mi 表示单位为英里。ft 表示单位为英尺。GEORADIUS 和 GEORADIUSBYMEMBER这两个命令都是获取一定范围内的坐标12GEORADIUS key longitude latitude radius m|km|ft|mi[WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]GEORADIUSBYMEMBER key location radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]WITHCOORD 在返回匹配的位置时会将位置的经纬度一并返回.WITHDIST 指定中心返回项目的距离, 距离以与指定为命令的radius参数的单位相同的单位返回.WITHHASH 还以52位无符号整数的形式返回项的原始geohash编码的有序集分数ASC|DESC ASC 可以让查找结果根据距离从近到远排序， 而 DESC 则可以让查找结果根据从远到近排序COUNT 指定要返回的结果数量STORE key 结果存到新的有序集合中, 以GeoHash值做score, 该选项与WITH[DIST|COORD|HASH]选项冲突STOREDIST key 结果存到新的有序集合中, 以与指定位置的距离作score, 该选项与WITH[DIST|COORD|HASH]选项冲突123456127.0.0.1:6379&gt; georadius key 113.46620947122573853 23.17010790561879929 100 km WITHCOORD WITHDIST1) 1) &quot;test_2&quot; 2) &quot;0.0000&quot; 3) 1) &quot;113.46620947122573853&quot; 2) &quot;23.17010790561879929&quot;127.0.0.1:6379&gt;GEOHASH将redis里的Geo转化为标准的GeoHash输出注意:这里输出的是标准的GeoHash, 不是redis里面存储的HashInt转化出来的1GEOHASH key member [member ...]123127.0.0.1:6379&gt; geohash geo_test test_1 test_21) &quot;7pkg3sdkv40&quot;2) &quot;ws0evczxdm0&quot;存储原理Redis里的Geo坐标在实际存储时是将gps坐标分别按照(-180, 180)和(-85.05112878, 85.05112878)来划分计算成HashInt作为zset集合进行存储的.所以Redis的Geo操作中并没有删除命令, 可以直接使用zrem命令去删除Geo坐标.]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>redis</tag>
        <tag>GeoHash</tag>
        <tag>GPS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nginx服务脚本]]></title>
    <url>%2Fposts%2F5bc4c6e7%2F</url>
    <content type="text"><![CDATA[nginx服务脚本123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106#!/bin/sh## nginx - this script starts and stops the nginx daemin## chkconfig: - 85 15 # description: Nginx is an HTTP(S) server, HTTP(S) reverse \# proxy and IMAP/POP3 proxy server# processname: nginx# config: /usr/local/nginx/conf/nginx.conf# pidfile: /usr/local/nginx/logs/nginx.pid# Source function library.. /etc/rc.d/init.d/functions# Source networking configuration.. /etc/sysconfig/network# Check that networking is up.[ "$NETWORKING" = "no" ] &amp;&amp; exit 0nginx="/usr/local/sbin/nginx"prog=$(basename $nginx)NGINX_CONF_FILE="/usr/local/nginx/conf/nginx.conf"lockfile=/var/lock/subsys/nginxstart() &#123; [ -x $nginx ] || exit 5 [ -f $NGINX_CONF_FILE ] || exit 6 echo -n $"Starting $prog: " daemon $nginx -c $NGINX_CONF_FILE retval=$? echo [ $retval -eq 0 ] &amp;&amp; touch $lockfile return $retval&#125;stop() &#123; echo -n $"Stopping $prog: " killproc $prog -QUIT retval=$? echo [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile return $retval&#125;restart() &#123; configtest || return $? stop start&#125;reload() &#123; configtest || return $? echo -n $"Reloading $prog: " killproc $nginx -HUP RETVAL=$? echo&#125;force_reload() &#123; restart&#125;configtest() &#123; $nginx -t -c $NGINX_CONF_FILE&#125;rh_status() &#123; status $prog&#125;rh_status_q() &#123; rh_status &gt;/dev/null 2&gt;&amp;1&#125;case "$1" in start) rh_status_q &amp;&amp; exit 0 $1 ;; stop) rh_status_q || exit 0 $1 ;; restart|configtest) $1 ;; reload) rh_status_q || exit 7 $1 ;; force-reload) force_reload ;; status) rh_status ;; condrestart|try-restart) rh_status_q || exit 0 ;; *) echo $"Usage: $0 &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;" exit 2esac]]></content>
      <tags>
        <tag>nginx</tag>
        <tag>server</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP动态gif验证码]]></title>
    <url>%2Fposts%2F491b8778%2F</url>
    <content type="text"><![CDATA[最近感觉自己的项目上的验证码太low了,决定换一个有意思的动态gif验证码效果废话不多说,直接上源码源码主函数:comic.ttf12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576function ImageCode( $string='', $frames = 60, $time = 1,$width=75, $height=25, $font = 6, $loops = 0 ) &#123; $authstr = $string?:((time()%2==0)?mt_rand(1000,9999):mt_rand(10000,99999)); $authlen = strlen($authstr); $board_width=$width; $board_height=$height; $delay = $time*100/$frames; // 生成一个n帧的GIF动画 for($i=0;$i&lt;$frames;$i++)&#123; ob_start(); $image=imagecreate($board_width,$board_height); imagecolorallocate($image,0,0,0); // 设定文字颜色数组 $colorList[]=imagecolorallocate($image,15,73,210); $colorList[]=imagecolorallocate($image,0,64,0); $colorList[]=imagecolorallocate($image,0,0,64); $colorList[]=imagecolorallocate($image,0,128,128); $colorList[]=imagecolorallocate($image,27,52,47); $colorList[]=imagecolorallocate($image,51,0,102); $colorList[]=imagecolorallocate($image,0,0,145); $colorList[]=imagecolorallocate($image,0,0,113); $colorList[]=imagecolorallocate($image,0,51,51); $colorList[]=imagecolorallocate($image,158,180,35); $colorList[]=imagecolorallocate($image,59,59,59); $colorList[]=imagecolorallocate($image,0,0,0); $colorList[]=imagecolorallocate($image,1,128,180); $colorList[]=imagecolorallocate($image,0,153,51); $colorList[]=imagecolorallocate($image,60,131,1); $colorList[]=imagecolorallocate($image,0,0,0); $gray=imagecolorallocate($image,245,245,245); imagefill($image,0,0,$gray); $space=$font*0.65;// 字符间距 for($k=0;$k&lt;$authlen;$k++)&#123; $colorRandom=mt_rand(0,sizeof($colorList)-1); $float_top=rand(0,4); $float_left=rand(1,4); imagettftext( $image, $font, 0, $space*$k+$float_left, $font+$float_top, $colorList[$colorRandom], './fonts/comic.ttf', substr($authstr,$k,1) ); &#125; for($k=0;$k&lt;20;$k++)&#123; $colorRandom=mt_rand(0,sizeof($colorList)-1); imagesetpixel($image,rand()%70,rand()%15,$colorList[$colorRandom]); &#125; // 添加干扰线 for($k=0;$k&lt;3;$k++)&#123; $colorRandom=mt_rand(0,sizeof($colorList)-1); $toDrawLine=1; if($toDrawLine)&#123; imageline($image,mt_rand(0,$board_width),mt_rand(0,$board_height),mt_rand(0,$board_width),mt_rand(0,$board_height),$colorList[$colorRandom]); &#125;else&#123; $w=mt_rand(0,$board_width); $h=mt_rand(0,$board_width); imagearc($image,$board_width-floor($w / 2),floor($h / 2),$w,$h, rand(90,180),rand(180,270),$colorList[$colorRandom]); &#125; &#125; imagegif($image); imagedestroy($image); $imagedata[]=ob_get_contents(); $delays[] = $delay; ob_clean(); &#125; return new AnimatedGif($imagedata, $delays, $loops); &#125;AnimatedGif:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227/** *AnimatedGif类 **/class AnimatedGif &#123; /** * The built gif image * @var resource */ private $image = ''; /** * The array of images to stack * @var array */ private $buffer = Array(); /** * How many times to loop? 0 = infinite * @var int */ private $number_of_loops = 0; /** * * @var int */ private $DIS = 2; /** * Which colour is transparent * @var int */ private $transparent_colour = -1; /** * Is this the first frame * @var int */ private $first_frame = TRUE; /** * Encode an animated gif * AnimatedGif constructor. * @param array $source_images * @param array $image_delays * @param $number_of_loops */ function __construct( array $source_images, array $image_delays, $number_of_loops ) &#123; /** * I have no idea what these even do, they appear to do nothing to the image so far */ $transparent_colour_red = 0; $transparent_colour_green = 0; $transparent_colour_blue = 0; $this-&gt;number_of_loops = ( $number_of_loops &gt; -1 ) ? $number_of_loops : 0; $this-&gt;set_transparent_colour($transparent_colour_red, $transparent_colour_green, $transparent_colour_blue); $this-&gt;buffer_images($source_images); $this-&gt;addHeader(); for ($i = 0; $i &lt; count($this-&gt;buffer); $i++) &#123; $this-&gt;addFrame($i, $image_delays [$i]); &#125; &#125; /** * Set the transparent colour * @param int $red * @param int $green * @param int $blue */ private function set_transparent_colour($red, $green, $blue)&#123; $this-&gt;transparent_colour = ( $red &gt; -1 &amp;&amp; $green &gt; -1 &amp;&amp; $blue &gt; -1 ) ? ( $red | ( $green &lt;&lt; 8 ) | ( $blue &lt;&lt; 16 ) ) : -1; &#125; /** * Buffer the images and check to make sure they are vaild * @param $source_images */ private function buffer_images($source_images) &#123; for ($i = 0; $i &lt; count($source_images); $i++) &#123; $this-&gt;buffer [] = $source_images [$i]; if (substr($this-&gt;buffer [$i], 0, 6) != "GIF87a" &amp;&amp; substr($this-&gt;buffer [$i], 0, 6) != "GIF89a") &#123; throw new Exception('Image at position ' . $i. ' is not a gif'); &#125; for ($j = ( 13 + 3 * ( 2 &lt;&lt; ( ord($this-&gt;buffer [$i] &#123; 10 &#125;) &amp; 0x07 ) ) ), $k = TRUE; $k; $j++) &#123; switch ($this-&gt;buffer [$i] &#123; $j &#125;) &#123; case "!": if (( substr($this-&gt;buffer [$i], ( $j + 3), 8) ) == "NETSCAPE") &#123; throw new Exception('You cannot make an animation from an animated gif.'); &#125; break; case ";": $k = FALSE; break; &#125; &#125; &#125; &#125; /** * Add the gif header to the image */ private function addHeader() &#123; $cmap = 0; $this-&gt;image = 'GIF89a'; if (ord($this-&gt;buffer [0] &#123; 10 &#125;) &amp; 0x80) &#123; $cmap = 3 * ( 2 &lt;&lt; ( ord($this-&gt;buffer [0] &#123; 10 &#125;) &amp; 0x07 ) ); $this-&gt;image .= substr($this-&gt;buffer [0], 6, 7); $this-&gt;image .= substr($this-&gt;buffer [0], 13, $cmap); $this-&gt;image .= "!\377\13NETSCAPE2.0\3\1" . $this-&gt;word($this-&gt;number_of_loops) . "\0"; &#125; &#125; /** * Add a frame to the animation * @param int $frame The frame to be added * @param int $delay The delay associated with the frame */ private function addFrame($frame, $delay) &#123; $Locals_str = 13 + 3 * ( 2 &lt;&lt; ( ord($this-&gt;buffer [$frame] &#123; 10 &#125;) &amp; 0x07 ) ); $Locals_end = strlen($this-&gt;buffer [$frame]) - $Locals_str - 1; $Locals_tmp = substr($this-&gt;buffer [$frame], $Locals_str, $Locals_end); $Global_len = 2 &lt;&lt; ( ord($this-&gt;buffer [0] &#123; 10 &#125;) &amp; 0x07 ); $Locals_len = 2 &lt;&lt; ( ord($this-&gt;buffer [$frame] &#123; 10 &#125;) &amp; 0x07 ); $Global_rgb = substr($this-&gt;buffer [0], 13, 3 * ( 2 &lt;&lt; ( ord($this-&gt;buffer [0] &#123; 10 &#125;) &amp; 0x07 ) )); $Locals_rgb = substr($this-&gt;buffer [$frame], 13, 3 * ( 2 &lt;&lt; ( ord($this-&gt;buffer [$frame] &#123; 10 &#125;) &amp; 0x07 ) )); $Locals_ext = "!\xF9\x04" . chr(( $this-&gt;DIS &lt;&lt; 2 ) + 0) . chr(( $delay &gt;&gt; 0 ) &amp; 0xFF) . chr(( $delay &gt;&gt; 8 ) &amp; 0xFF) . "\x0\x0"; if ($this-&gt;transparent_colour &gt; -1 &amp;&amp; ord($this-&gt;buffer [$frame] &#123; 10 &#125;) &amp; 0x80) &#123; for ($j = 0; $j &lt; ( 2 &lt;&lt; ( ord($this-&gt;buffer [$frame] &#123; 10 &#125;) &amp; 0x07 ) ); $j++) &#123; if ( ord($Locals_rgb &#123; 3 * $j + 0 &#125;) == ( ( $this-&gt;transparent_colour &gt;&gt; 16 ) &amp; 0xFF ) &amp;&amp; ord($Locals_rgb &#123; 3 * $j + 1 &#125;) == ( ( $this-&gt;transparent_colour &gt;&gt; 8 ) &amp; 0xFF ) &amp;&amp; ord($Locals_rgb &#123; 3 * $j + 2 &#125;) == ( ( $this-&gt;transparent_colour &gt;&gt; 0 ) &amp; 0xFF ) ) &#123; $Locals_ext = "!\xF9\x04" . chr(( $this-&gt;DIS &lt;&lt; 2 ) + 1) . chr(( $delay &gt;&gt; 0 ) &amp; 0xFF) . chr(( $delay &gt;&gt; 8 ) &amp; 0xFF) . chr($j) . "\x0"; break; &#125; &#125; &#125; switch ($Locals_tmp &#123; 0 &#125;) &#123; case "!": $Locals_img = substr($Locals_tmp, 8, 10); $Locals_tmp = substr($Locals_tmp, 18, strlen($Locals_tmp) - 18); break; case ",": $Locals_img = substr($Locals_tmp, 0, 10); $Locals_tmp = substr($Locals_tmp, 10, strlen($Locals_tmp) - 10); break; &#125; if (ord($this-&gt;buffer [$frame] &#123; 10 &#125;) &amp; 0x80 &amp;&amp; $this-&gt;first_frame === FALSE) &#123; if ($Global_len == $Locals_len) &#123; if ($this-&gt;blockCompare($Global_rgb, $Locals_rgb, $Global_len)) &#123; $this-&gt;image .= ( $Locals_ext . $Locals_img . $Locals_tmp ); &#125; else &#123; $byte = ord($Locals_img &#123; 9 &#125;); $byte |= 0x80; $byte &amp;= 0xF8; $byte |= ( ord($this-&gt;buffer [0] &#123; 10 &#125;) &amp; 0x07 ); $Locals_img &#123; 9 &#125; = chr($byte); $this-&gt;image .= ( $Locals_ext . $Locals_img . $Locals_rgb . $Locals_tmp ); &#125; &#125; else &#123; $byte = ord($Locals_img &#123; 9 &#125;); $byte |= 0x80; $byte &amp;= 0xF8; $byte |= ( ord($this-&gt;buffer [$frame] &#123; 10 &#125;) &amp; 0x07 ); $Locals_img &#123; 9 &#125; = chr($byte); $this-&gt;image .= ( $Locals_ext . $Locals_img . $Locals_rgb . $Locals_tmp ); &#125; &#125; else &#123; $this-&gt;image .= ( $Locals_ext . $Locals_img . $Locals_tmp ); &#125; $this-&gt;first_frame = FALSE; &#125; /** * Add the gif footer */ private function addFooter() &#123; $this-&gt;image .= ";"; &#125; /** * Compare gif blocks? What is a block? * @param $GlobalBlock * @param $LocalBlock * @param $Len * @return int */ private function blockCompare($GlobalBlock, $LocalBlock, $Len) &#123; for ($i = 0; $i &lt; $Len; $i++) &#123; if ( $GlobalBlock &#123; 3 * $i + 0 &#125; != $LocalBlock &#123; 3 * $i + 0 &#125; || $GlobalBlock &#123; 3 * $i + 1 &#125; != $LocalBlock &#123; 3 * $i + 1 &#125; || $GlobalBlock &#123; 3 * $i + 2 &#125; != $LocalBlock &#123; 3 * $i + 2 &#125; ) &#123; return ( 0 ); &#125; &#125; return ( 1 ); &#125; /** * No clue * @param int $int * @return string the char you meant? */ private function word($int) &#123; return ( chr($int &amp; 0xFF) . chr(( $int &gt;&gt; 8 ) &amp; 0xFF) ); &#125; /** * Return the animated gif * @return resource */ function getAnimation() &#123; return $this-&gt;image; &#125; /** * Return the animated gif * @echo image */ function display() &#123; //late footer add $this-&gt;addFooter(); header('Content-type:image/gif'); echo $this-&gt;image; &#125;&#125;使用示例代码:123456789101112$str = 'abcdefghijkmnpqrstuvwxy3456789';$len = strlen($str) - 1;$text = '';for ($i = 0; $i &lt; 6; $i++) &#123; $text .= $str[rand(0, $len)];&#125;$gif = ImageCode( $text, 8, 1, 100, 35, 23);$gif-&gt;display();]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>代码</tag>
        <tag>captcha</tag>
        <tag>gif</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gd-输出图片流]]></title>
    <url>%2Fposts%2Ffaad097e%2F</url>
    <content type="text"><![CDATA[最近在搞laravels项目,由于laravels是通过swoole来加速laravel的,php-fpm模式下的一些输出函数收到了干扰,比如:header(),在laravels下返回输出和header头的设定需要由response()来完成.但是gd的输出就比较特别了,它要么输出网页,要么输出文件.如果想要输出二进制流再交给PHP就比较麻烦了,网上普遍的方案就是先把gd图像输出到缓存文件里,再读取出来.可是在要有占用了太多的磁盘I/O问题gd直接输出到网页我们后台无法很好的设置header来标注文件类型.方案gd先输出到文件,在用file_get_contents读取.缺陷:太过于占用磁盘I/Ogd的输出先由ob缓存下来,再用ob_get_contents获取.代码:12345678910111213141516171819202122232425ob_start();switch ($type) &#123; case 'jpg': case 'jpeg': $type = 'image/jpeg'; imagejpeg($this-&gt;image, '', 0.5); break; case 'png': $type = 'image/png'; imagepng($this-&gt;image); break; case 'bmp': $type = 'image/vnd.wap.wbmp'; imagewbmp($this-&gt;image); break; case 'gif': default: $type = 'image/gif'; imagegif($this-&gt;image); break;&#125;$contents = ob_get_contents();ob_end_clean();return response($content) -&gt;header('Content-type', $type);]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>gd</tag>
        <tag>ob</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在Merlin上安装Entware]]></title>
    <url>%2Fposts%2F32c6b91b%2F</url>
    <content type="text"><![CDATA[在之前安装好Merlin后,接下来就是安装Entware,不过在安装Entware之前需要先挂载U盘并格式化为ext4.安装fdiskfdisk一般的Merlin都是自带的,无需安装,如果还没有安装fdisk而且也还没有Entware的话要么就直接用电脑格式化后挂载进去(这个我没有试过,应该效果一致)检查设备12345fdisk -l# 这里先输出系统分区之类的不用管，外置设备一般在最后# 一般会有类似于这样的,如果没有那你需要检查一下U盘是否正常Disk /dev/sda: 30.7 GB, 30752000000 bytes64 heads, 32 sectors/track, 29327 cylinders上面的信息注意看到和你的存储大小一样的设备，我的是/dev/sda，在它里面有个/dev/sda1的分区删除并建立新的分区12345678910111213141516171819202122232425fdisk /dev/sda # 这是你的设备別打成分区,注意别打成了sda1Welcome to fdisk (util-linux 2.29.2).Changes will remain in memory only, until you decide to write them.Be careful before using the write command.Command (m for help): d # 输入d回车，我只有一个分区，它自动选择了，如果你有多个分区，可以多次使用dSelected partition 1Partition 1 has been deleted.Command (m for help): n # 输入n会车，创建分区Partition typep primary (0 primary, 0 extended, 4 free)e extended (container for logical partitions)Select (default p): p # 选择pPartition number (1-4, default 1): # 回车First sector (2048-2065023, default 2048): #回车Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (2048-2065023, default 2065023): # 回车Created a new partition 1 of type 'Linux' and of size 1007.3 MiB.Command (m for help): w # 输入w回车，保存并退出The partition table has been altered.Calling ioctl() to re-read partition table.Syncing disks.经过以上的操作，你可以用fdisk -l命令查看U盘上是否只有一个Linux分区1234567fdisk -l# 找到你的设备 可以看到ID为83就对了Disk /dev/sda: 30.7 GB, 30752000000 bytes64 heads, 32 sectors/track, 29327 cylindersUnits = cylinders of 2048 * 512 = 1048576 bytesDevice Boot Start End Blocks Id System/dev/sda1 2 29327 30029824 83 Linux格式化分区1234567mkfs.ext4 /dev/sda1# 如果你的硬盘比较大，256G以上的话，是这个命令：mkfs.ext4 -T largefile /dev/sda1mke2fs 1.43.3 (04-Sep-2016)/dev/sda1 contains a ext4 file system labelled 'ONMP'last mounted on Sun Nov 12 09:21:22 2017Proceed anyway? (y,n) y # 输入y回车umount /dev/sda1 # 如果出错，可能是因为已经被挂载了，先执行这个卸载挂载分区123456mkdir /mnt/sda1mount -t ext4 /dev/sda1 /mnt/sda1/df -hFilesystem Size Used Available Use% Mounted on/dev/sda1 975.5M 2.5M 906.6M 0% /tmp/mnt/sda1# 可以看到已经挂载安装和使用Entware1entware-setup.sh注意一下选择分区的时候选择刚才挂载上去的那个参考:在梅林上安装 Entware如何在路由器上格式化 U 盘为 ext4]]></content>
      <tags>
        <tag>Merlin</tag>
        <tag>R7000</tag>
        <tag>路由器</tag>
        <tag>Entware</tag>
        <tag>磁盘管理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[R7000刷Merlin]]></title>
    <url>%2Fposts%2F50136e28%2F</url>
    <content type="text"><![CDATA[之前买了一个Netgear R7000 路由器,到手后就感觉忍受不了它的那个超不好用的web ui,所以就没上手两分钟果断刷机成Merlin了.主要步骤刷机到Merlin和Netgear之间的一个过渡固件(这其实就是一些玩家做的Netgear版的Merlin固件包,是一个完整版的Merlin,只是版本比较老)刷机到最新版的Merlin所需材料R7000_380.70_0-X7.9.1-koolshare.chkR7000_380.70_0-X7.9.1-koolshare.trx刷机方法浏览器输入www.routerlogin.net进入高级—管理—固件更新，上传 R7000_380.70_0-X7.9.1-koolshare.chk 固件，点更新(有很多教程说要在这一步之前恢复出厂设置,不过我这边没有恢复也可以,如果有玩家不放心恢复出厂设置也可以)更新固件过程中路由器可能要重启几次再输入http://router.asus.com/访问新的固件的控制面板恢复一次出厂设置(这一次恢复出厂设置和格式化jffs分区也不是是必须的)格式化jffs分区 进入路由管理界面 -系统管理- 系统设置，勾选Format JFFS partition at next boot，点击应用本页面设置后重启路由器进入路由器设置。系统管理—固件升级，选择 R7000_380.70_0-X7.9.1-koolshare.trx 上传后更新。再恢复一次出厂设置就可以正常使用了清配置说明A 刷 B（B）X6.x（B）X7.x（B）X7.9.1（A）X6.x保持清配置+格式化jffs清配置+格式化jffs（A）X7.x清配置+格式化jffs保持保持（A）X7.9.1清配置+格式化jffs仅格式化jffs保持固件双清方法如果固件出现问题,一时找不到解决办法,可以尝试双清并手动配置,方法如下格式化jffs分区：方法同上；恢复出厂设置：进入路由管理界面 -【【系统管理】- 【恢复/导出/上传设置】- 【原厂默认值】，点击原厂默认值一栏的【恢复】按钮；建议完成双清后手动配置路由，而不是用以前备份的配置，以避免可能的问题；资源下载X7.9.1 固件 (trx)R6300V2R6400R6900/R7000R8000R8500X7.9.1 过渡固件 (chk)R6300V2R6400R6900/R7000R8000R8500X7.9R6300V2R6400R6900/R7000R8000R8500]]></content>
      <tags>
        <tag>Merlin</tag>
        <tag>R7000</tag>
        <tag>路由器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[测试Emoji表情]]></title>
    <url>%2Fposts%2F5cd7067a%2F</url>
    <content type="text"><![CDATA[🐰 🐨 🐸 🐞 🐾 😄 💙✈️👶🐤🎈🐻🌵👯😰🍂💋🎃🐙]]></content>
      <tags>
        <tag>emoji</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaravelS开发记录]]></title>
    <url>%2Fposts%2F45ef7ac%2F</url>
    <content type="text"><![CDATA[主要记录了由普通PHP开发者初步接触laravelS是所遇到的一些小坑LaravelS介绍123456 _ _ _____| | | |/ ____|| | __ _ _ __ __ ___ _____| | (___| | / _` | &apos;__/ _` \ \ / / _ \ |\___ \| |___| (_| | | | (_| |\ V / __/ |____) ||______\__,_|_| \__,_| \_/ \___|_|_____/LaravelS是一个能够使普通的laravel项目尽快的享受上swoole的优势的laravel插件官方描述:🚀LaravelS是一个胶水项目，用于快速集成Swoole到Laravel或Lumen，然后赋予它们更好的性能、更多可能性。GitHub地址:文档地址:laravel-s/README-CN.mdLaravel-China地址:LaravelS - 基于 Swoole 加速 Laravel/Lumen - 带你飞 🚀安装安装要求依赖说明PHP&gt;= 5.5.9 推荐PHP7+Swoole&gt;= 1.7.19 从2.0.12开始不再支持PHP5 推荐4.2.3+Laravel/Lumen&gt;= 5.1 推荐5.6+安装swoole详细请参考 swoole安装安装laravel可以通过composer直接安装,或者安装安装器或者直接从GitHub拷贝源代码来安装安装laravelS通过Composer安装12composer require "hhxsv5/laravel-s:~3.0" -vvv# 确保你的composer.lock文件是在版本控制中注册Service ProviderLaravel: 修改文件config/app.php，Laravel 5.5+支持包自动发现，你应该跳过这步1234'providers' =&gt; [ //... Hhxsv5\LaravelS\Illuminate\LaravelSServiceProvider::class,],Lumen: 修改文件bootstrap/app.php1$app-&gt;register(Hhxsv5\LaravelS\Illuminate\LaravelSServiceProvider::class);发布配置文件.1php artisan laravels publish如果你用的是lumen,不需要加载config/laravels.php12//这个可有可无$app-&gt;configure('laravels');修改配置config/laravels.php请参考laravelS配置项运行1php artisan laravels &#123;start|stop|restart|reload|publish&#125;命令说明start启动LaravelS。选项-d或--daemonize以守护进程的方式运行，此选项将覆盖laravels.php中swoole.daemonize设置stop停止LaravelSrestart重启LaravelS，支持选项-d或--daemonizereload平滑重启所有worker进程，这些worker进程内包含你的业务代码和框架(Laravel/Lumen)代码，不会重启master/manger进程publish发布配置文件到你的项目中config/laravels.phpps:展示已经启动的项目:ps -ef|grep laravels配置nginx1234567891011121314151617181920212223242526272829303132333435363738394041gzip on;gzip_min_length 1024;gzip_comp_level 2;gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml;gzip_vary on;gzip_disable "msie6";upstream laravels &#123; # By IP:Port server 127.0.0.1:9100 weight=5 max_fails=3 fail_timeout=30s; #这里配置的是laravelS监听的接口参数 # By UnixSocket Stream file #server unix:/xxxpath/laravel-s-test/storage/laravels.sock weight=5 max_fails=3 fail_timeout=30s; #server 192.168.1.1:5200 weight=3 max_fails=3 fail_timeout=30s; #server 192.168.1.2:5200 backup;&#125;server &#123; listen 80; server_name laravels.com; #为了给nginx定位静态资源 root /xxxpath/laravel-s-test/public; # Nginx处理静态资源(建议开启gzip)，LaravelS处理动态资源。 location / &#123; try_files $uri @laravels; &#125; location @laravels &#123; proxy_connect_timeout 60s; proxy_send_timeout 60s; proxy_read_timeout 120s; proxy_set_header Connection "keep-alive"; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Real-PORT $remote_port; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; proxy_set_header Scheme $scheme; proxy_set_header Server-Protocol $server_protocol; proxy_set_header Server-Name $server_name; proxy_set_header Server-Addr $server_addr; proxy_set_header Server-Port $server_port; proxy_pass http://laravels; &#125;&#125;配置Apacheps:我用的是nginx,没有实际配置过,就直接把官方文档里的拿过来了12345678910111213141516171819202122232425262728293031323334353637383940414243444546LoadModule proxy_module /yyypath/modules/mod_deflate.so&lt;IfModule deflate_module&gt; SetOutputFilter DEFLATE DeflateCompressionLevel 2 AddOutputFilterByType DEFLATE text/html text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml&lt;/IfModule&gt;&lt;VirtualHost *:80&gt; # 别忘了绑Host哟 ServerName www.laravels.com ServerAdmin hhxsv5@sina.com DocumentRoot /xxxpath/laravel-s-test/public; DirectoryIndex index.html index.htm &lt;Directory "/"&gt; AllowOverride None Require all granted &lt;/Directory&gt; LoadModule proxy_module /yyypath/modules/mod_proxy.so LoadModule proxy_module /yyypath/modules/mod_proxy_balancer.so LoadModule proxy_module /yyypath/modules/mod_lbmethod_byrequests.so.so LoadModule proxy_module /yyypath/modules/mod_proxy_http.so.so LoadModule proxy_module /yyypath/modules/mod_slotmem_shm.so LoadModule proxy_module /yyypath/modules/mod_rewrite.so ProxyRequests Off ProxyPreserveHost On &lt;Proxy balancer://laravels&gt; BalancerMember http://192.168.1.1:8011 loadfactor=7 #BalancerMember http://192.168.1.2:8011 loadfactor=3 #BalancerMember http://192.168.1.3:8011 loadfactor=1 status=+H ProxySet lbmethod=byrequests &lt;/Proxy&gt; #ProxyPass / balancer://laravels/ #ProxyPassReverse / balancer://laravels/ # Apache处理静态资源，LaravelS处理动态资源。 RewriteEngine On RewriteCond %&#123;DOCUMENT_ROOT&#125;%&#123;REQUEST_FILENAME&#125; !-d RewriteCond %&#123;DOCUMENT_ROOT&#125;%&#123;REQUEST_FILENAME&#125; !-f RewriteRule ^/(.*)$ balancer://laravels/%&#123;REQUEST_URI&#125; [P,L] ErrorLog $&#123;APACHE_LOG_DIR&#125;/www.laravels.com.error.log CustomLog $&#123;APACHE_LOG_DIR&#125;/www.laravels.com.access.log combined&lt;/VirtualHost&gt;自定义的异步任务此特性依赖Swoole的AsyncTask，必须先设置config/laravels.php的swoole.task_worker_num。异步事件的处理能力受Task进程数影响，需合理设置task_worker_num。任务结构12345678910111213141516171819202122namespace App\Task\Message;use App\Traits\Push;use Hhxsv5\LaravelS\Swoole\Task\Task;class Reply extends Task&#123; private $data; public function __construct($data) &#123; $this-&gt;data = $data; &#125; /** * 任务逻辑 */ public function handle() &#123; //Do something &#125;&#125;ps: 任务里没有依赖注入这种便捷的东西投递任务123456// 实例化$action并通过deliver投递//此操作是异步的，投递后立即返回//由Task进程继续处理$action中的handle逻辑$task = new \App\Task\Message\Reply($dat);// $task-&gt;delay(3);// 延迟3秒投放任务\Hhxsv5\LaravelS\Swoole\Task\Task::deliver($task);laravelS配置项listen_ip：string 监听的IP，监听本机127.0.0.1(IPv4) ::1(IPv6)，监听所有地址 0.0.0.0(IPv4) ::(IPv6)， 默认127.0.0.1。listen_port：int 监听的端口，如果端口小于1024则需要root权限，default 5200。socket_type：默认SWOOLE_SOCK_TCP。通常情况下，无需关心这个配置。若需Nginx代理至UnixSocket Stream文件，则需修改为SWOOLE_SOCK_UNIX_STREAM，此时listen_ip则是UnixSocket Stream文件的路径。enable_gzip：bool 当通过LaravelS响应数据时，是否启用gzip压缩响应的内容，依赖库zlib，通过命令php --ri swoole|grep zlib检查gzip是否可用。如果开启则会自动加上头部Content-Encoding，默认false。如果存在代理服务器（例如Nginx），建议代理服务器开启gzip，LaravelS关闭gzip，避免重复gzip压缩。server：string 当通过LaravelS响应数据时，设置HTTP头部Server的值，若为空则不设置，default LaravelS。handle_static：bool 是否开启LaravelS处理静态资源(要求 Swoole &gt;= 1.7.21，若Swoole &gt;= 1.9.17则由Swoole自己处理)，默认false，建议Nginx处理静态资源，LaravelS仅处理动态资源。静态资源的默认路径为base_path(&#39;public&#39;)，可通过修改swoole.document_root变更。laravel_base_path：string Laravel/Lumen的基础路径，默认base_path()，可用于配置符号链接。inotify_reload.enable：bool 是否开启Inotify Reload，用于当修改代码后实时Reload所有worker进程，依赖库inotify，通过命令php --ri inotify检查是否可用，默认false，建议仅开发环境开启，修改监听数上限。inotify_reload.watch_path：string Inotify 监控的文件路径，默认有base_path()。inotify_reload.file_types：array Inotify 监控的文件类型，默认有.php。inotify_reload.log：bool 是否输出Reload的日志，默认true。websocket.enable：bool 是否启用WebSocket服务器。启用后WebSocket服务器监听的IP和端口与Http服务器相同，默认false。websocket.handler：string WebSocket逻辑处理的类名，需实现接口WebSocketHandlerInterface，参考示例。sockets：array 配置TCP/UDP套接字列表，参考示例。processes：array 配置自定义进程列表，参考示例。events：array 自定义的异步事件和监听的绑定列表，参考示例。swoole_tables：array 定义的swoole_table列表，参考示例。register_providers：array 每次请求需要重新注册的Service Provider列表，若存在boot()方法，会自动执行。一般用于清理注册了单例的ServiceProvider。123456//...'register_providers' =&gt; [ //例如：重新注册jwt的ServiceProvider \Tymon\JWTAuth\Providers\LaravelServiceProvider::class,],//...swoole：array Swoole的原始配置项，请参考Swoole配置项。]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>异步</tag>
        <tag>laravel</tag>
        <tag>LaravelS</tag>
        <tag>Lumen</tag>
        <tag>swoole</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php在linux下call to undefined function imagettftext()]]></title>
    <url>%2Fposts%2Fd90db6f7%2F</url>
    <content type="text"><![CDATA[在线上环境测试图片生成的时候报错:call to undefined function imagettftext()解决方案下载安装freetype123./configure --prefix=/usr/local/freetype/2.7.1 --without-harfbuzz //编译makemake install再重新编译安装gd12345phpizemake clean./configure --with-php-config=/usr/local/php/php72/bin/php-config--with-freetype-dir=/usr/local/freetype/2.7.1/ --enable-gd-native-ttfmakemake install]]></content>
      <tags>
        <tag>gd</tag>
        <tag>freetype</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php操作redis]]></title>
    <url>%2Fposts%2Fa8f30b9a%2F</url>
    <content type="text"><![CDATA[这里主要是用的predis123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143//验证是否安装OK:打开dos窗口-&gt;输入redis-server 在打开一个dos窗口--&gt;输入redis-cli 显示：127.0.0.1:6379&gt;则成功！ $redis = new redis(); $redis-&gt;connect('127.0.0.1', '6379') || die("连接失败！"); $redis-&gt;auth("admin"); //授权 //******************************string类型********************************************************** //String 是最简单的类型，一个Key对应一个Value，String类型是二进制安全的。Redis的String可以包含任何数据，比如jpg图片或者序列化的对象 $redis-&gt;set('test', 200); //赋值 $redis-&gt;mset(array('key0' =&gt; 'value0', 'key1' =&gt; 'value1'));//批量赋值 $redis-&gt;mget(array('key0', 'key1', 'key2'));//批量获取值 $redis-&gt;setnx('key',value);//设置key对应的值为string类型的value,如果key已经存在，返回0,nx是not exist的意思 $redis-&gt;msetnx(array('key0' =&gt; 'value0', 'key1' =&gt; 'value1'));//全部成功返回1，否则失败一个也返回0 $redis-&gt;getset("key",'newvalue');//getset设置key的值，并返回key的旧值 $redis-&gt;setex('key',10,'value10');//带生存时间的写入值单位s $redis-&gt;setrange('key',0,'hello');//设置子字符串替换，key，开始位置，替换值 $redis-&gt;getrange("key",0,2);//getrange获取子字符串，getrange key start end $redis-&gt;ttl('key');//获取key的生存时间,没设置的为-1 $redis-&gt;keys("*a*");//获取所有key，也可获取具体key，模糊匹配key $redis-&gt;get("test"); //根据key获取value $redis-&gt;getMultiple(array('key1', 'key2', 'key3')); $exits = $redis-&gt;exists('test'); //判断key是否存在。存在 true 不存在 false echo $exists?$res2:"null"; echo $res1?$res2:"null";die; $redis-&gt;delete('key1', 'key2'); //删除,可删除多个 $redis-&gt;delete(array('key3', 'key4', 'key5'));//删除,可删除多个 $redis-&gt;delete( $redis-&gt;keys("*"));//传数组，删除所有key $redis-&gt;incr("key",1);//自增，默认值1 $redis-&gt;incrBy('key',10);//必须给定参数值 $redis-&gt;decr("key",10);//自减，默认值1 $redis-&gt;decrBy('key',10);//必须给定参数值 $redis-&gt;append("key","appendvalue");//给指定的key的字符串追加value,返回新字符串的长度 $redis-&gt;strlen('key');//获取指定key的字符串长度 //******************************string类型********************************************************** //******************************hash类型********************************************************** // Redis hash是一个string类型的field和value的映射表。它的添加删除都是0(1) // hash特别适合用于存储对象。相对于将对象的每个字段存成单个string类型。 //将一个对象存储在hash类型中会占用更少的内存，并且可以更方便的存取整个对象。 $redis-&gt;flushall();die;//清空所有数据库 $redis-&gt;flushdb();die;//清空当前数据库 $redis-&gt;hset("test","username","admin");//单个设置 $redis-&gt;hget("test","username");//单个获取 $redis-&gt;hsetnx("test","username","admin@qq.com");//设置hash field 为指定的值value,如果feild已经存在，返回0,nx是not exist的意思 $redis-&gt;hmset("testabc",array("a"=&gt;1,"b"=&gt;2,"c"=&gt;3,'d'=&gt;4));//批量设置 $redis-&gt;hmget("testabc",array("a","b","c"));//批量获取 $redis-&gt;hincrBy("test","password","123456");//设置hash field 添加key和value $redis-&gt;hexists("test","usernames");//测试hash field 存在1，不存在0 $redis-&gt;hlen("test"); //返回hash 里所有的 field 的数量 $redis-&gt;hdel("test","key");//删除指定hash的field $redis-&gt;hkeys("test"); //返回hash 所有 field $redis-&gt;hvals("test");//返回hash 所有 field values $redis-&gt;hgetall("test");//获取hash中全部的field和value //******************************hash类型********************************************************** //******************************list链表********************************************************** //栈先进后出；队列先进先出； //List 是一个链表结构，主要功能是push,pop,获取一个范围的所有值等等，操作中key理解为链表的名字。 //Redis的list类型其实就是一个每个子元素都是string类型的双向链表。我们可以通过push,pop操作从链表的头部或者尾部添加删除元素，这样LIST既可以作为栈，又可以作为队列。 $redis-&gt;lrange("list",0,-1);//取链表list 从0位开始取到最后位置；0代表头 -1代表尾 $redis-&gt;lpush("list","1"); //在key对应的list的头部添加字符串元素 $redis-&gt;rpush("list","test"); //在key对应的list的尾部添加字符串元素 $redis-&gt;lpop("list");//在key对应的list的头部删除字符串元素，并返回删除字符 $redis-&gt;rpop("list");//在key对应的list的尾部删除字符串元素，并返回删除字符 echo $redis-&gt;lrem("list",2,'key');//在list中删除N个和value相同的元素(n&lt;0从尾删除,n=0全部删除),返回的值为删除的个数 $redis-&gt;lset("list",-1,"啊");//设置list中指定下标的元素值 lset(list,位置，值)，位置可以从头或者从尾 $redis-&gt;lindex("list",0);//返回list中index位置的元素 $redis-&gt;llen("list");//返回list的长度 $redis-&gt;ltrim("list",0,1);//保留指定key的值的范围内的数据 0为头 -1为尾 $redis-&gt;linsert("list");//******** $redis-&gt;rpoplpush("list","listt");//从第一个LIST的尾部移除元素并添加到第二个LIST的头部 //******************************list链表********************************************************** //******************************set集合********************************************************** // Set是集合，它是string类型的无序集合。set是通过hash table实现的，添加，删除和查找的复杂程度都是0(1) // 对集合我们可以取并集，交集，差集。通过这些操作我们可以实现SNS中的好友推荐和blog的tag功能 $redis-&gt;sadd("col","a","b","c");//向集合中添加元素 $redis-&gt;smembers("col");//集合元素列表 $redis-&gt;srem("col",'d');//集合移除元素 $redis-&gt;spop("col");//随机删除集合元素并返回删除的元素。删除最后一个元素时，则集合也被删除 $redis-&gt;sdiff("set1","set2");//取多个集合的差集，谁在前面已谁为标准（差集就是前面第一个集合有而后面所有集合都没有） $redis-&gt;sdiffstore("dif","set1","set2");//返回多个集合的差集，存在第三个集合里面 $redis-&gt;sinter("set","set1",'set2');//交集（所有集合都有的元素） $res = $redis-&gt;sinterstore("inter","set","set1");///取多个集合的交集,存在第三个集合里面 $redis-&gt;sunion("set","set1",'set2');//并集（所有集合合并去重的元素） $redis-&gt;sunionstore("union","set","set1");///取多个集合的并集,存在第三个集合里面 $redis-&gt;smove("set1","set2","value");///第一个集合元素剪切到第二个集合里面。 $redis-&gt;scard("set");//返回集合中元素的个数 $redis-&gt;sismember("set","value");//判断某个元素是否为集合的元素 $redis-&gt;srandmember("set");//随机返回集合内的一个元素，不会删除元素 $redis-&gt;keys("*"); //返回所有key $redis-&gt;keys("*t"); //返回所有s开头的key $res = $redis-&gt;keys("*"); foreach ($res as $k =&gt; $v) &#123; echo $v."=&gt;".$redis-&gt;get($v)."&lt;br&gt;"; &#125; $redis-&gt;exists("set"); //判断该key是否存在 $redis-&gt;del("inter"); //删除该key $redis-&gt;expire("set2",100); //设置key 过期时间10s $redis-&gt;ttl("set3");//查看过期剩余时间s $redis-&gt;select("1");// 选择数据库 $redis-&gt;set("name","test");// 设置key=&gt;value $redis-&gt;get("name");// 根据key获取value $redis-&gt;move("get",1);// 把key移到另一个数据库 $redis-&gt;persist("set2");// 移除过期时间 $redis-&gt;randomkey();//随机返回一个key $redis-&gt;rename("names","newname");//重命名key $redis-&gt;type("zset");//获取key类型 $redis-&gt;dbsize();//获取数据库key个数 $redis-&gt;info();//获取redis服务信息 $redis-&gt;echo("hello，world");//输出函数 //******************************set集合********************************************************** //redis有五大数据类型 //字符串 string //hash 表 //链表结构 list //set 集合(无序) //zset 有序集合 //string来存储用户的最大id,用来id的自增 //hash 表来存储用户的详细信息 //list链表结构来存储用户的id号 $uid = $redis-&gt;incr("blog:id"); //自增长 $res = $redis-&gt;hmset('blog:user:' . $uid, array('id' =&gt; $uid, 'username' =&gt;'admin'.time() . time(), 'password' =&gt; md5(time()))); //hash表插入一条记录 $redis-&gt;rpush("blog:uid", $uid); $res = $redis-&gt;hgetall("blog:user:".$uid); $redis-&gt;del("blog:user:".$uid);//删除用户 $redis-&gt;lrem("blog:uid",$uid);//删除链表中的id print_R($res);die; $count = $redis-&gt;lsize("blog:uid"); //list类型count总数 $page_size = 3; $page_num = !empty($_GET['page']) ? $_GET['page'] : 1; $page_count = ceil($count / $page_size); $ids = $redis-&gt;lrange("blog:uid", ($page_num - 1) * $page_size, (($page_num - 1) * $page_size + $page_size - 1)); foreach ($ids as $v) &#123; $ress[] = $redis-&gt;hgetall("blog:user:" . $v); //获取记录 &#125; echo"&lt;pre&gt;"; print_r($ress);原文链接:php操作redis笔记！]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[laravel-admin安装]]></title>
    <url>%2Fposts%2F16eb654d%2F</url>
    <content type="text"><![CDATA[1.5版本需要安装PHP 7+和Laravel 5.5首先确保安装好了laravel，并且数据库连接设置正确。1composer require encore/laravel-admin "1.5.*"然后运行下面的命令来发布资源：1php artisan vendor:publish --provider="Encore\Admin\AdminServiceProvider"在该命令会生成配置文件config/admin.php，可以在里面修改安装的地址、数据库连接、以及表名，都可以用默认配置不修改。然后运行下面的命令完成安装：1php artisan admin:install启动服务后，在浏览器打开 http://localhost/admin/ ,使用用户名 admin 和密码 admin登陆.ps 如果报一下错误1Specified key was too long error需要在/app/Providers/AppServiceProvider.php文件中修改123456789101112131415161718namespace App\Providers;use Illuminate\Support\&#123; ServiceProvider, Facades\Schema&#125;;class AppServiceProvider extends ServiceProvider&#123; public function boot() &#123; Schema::defaultStringLength(191); &#125; public function register() &#123; // &#125;&#125;]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>laravel</tag>
        <tag>laravel-admin</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hash索引和B-Tree索引]]></title>
    <url>%2Fposts%2F294f33b7%2F</url>
    <content type="text"><![CDATA[索引是帮助mysql获取数据的数据结构。最常见的索引是Btree索引和Hash索引。不同的引擎对于索引有不同的支持：Innodb和MyISAM默认的索引是Btree索引；而Mermory默认的索引是Hash索引。原文链接：Hash索引和BTree索引Hash索引所谓Hash索引，当我们要给某张表某列增加索引时，将这张表的这一列进行哈希算法计算，得到哈希值，排序在哈希数组上。所以Hash索引可以一次定位，其效率很高，而Btree索引需要经过多次的磁盘IO，但是innodb和myisam之所以没有采用它，是因为它存在着好多缺点：因为Hash索引比较的是经过Hash计算的值，所以只能进行等式比较，不能用于范围查询每次都要全表扫描由于哈希值是按照顺序排列的，但是哈希值映射的真正数据在哈希表中就不一定按照顺序排列，所以无法利用Hash索引来加速任何排序操作不能用部分索引键来搜索，因为组合索引在计算哈希值的时候是一起计算的。当哈希值大量重复且数据量非常大时，其检索效率并没有Btree索引高的。B-Tree索引至于Btree索引，它是以B+树为存储结构实现的。但是Btree索引的存储结构在Innodb和MyISAM中有很大区别。在MyISAM中，我们如果要对某张表的某列建立Btree索引的话，如图：所以我们经常会说MyISAM中数据文件和索引文件是分开的。因此MyISAM的索引方式也称为非聚集，Innodb的索引方式成为聚集索引。至于辅助索引，类似于主索引，唯一区别就是主索引上的值不能重复，而辅助索引可以重复。]]></content>
      <tags>
        <tag>MySQL</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sar 找出系统瓶颈的利器]]></title>
    <url>%2Fposts%2F3d56cf7f%2F</url>
    <content type="text"><![CDATA[sar是System Activity Reporter（系统活动情况报告）的缩写。sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当前运行状态。它的特点是可以连续对系统取样，获得大量的取样数据；取样数据和分析的结果都可以存入文件，所需的负载很小。sar是目前Linux上最为全面的系统性能分析工具之一，可以从14个大方面对系统的活动进行报告，包括文件的读写情况、系统调用的使用情况、串口、CPU效率、内存使用状况、进程活动及IPC有关的活动等，使用也是较为复杂。原文链接:sar 找出系统瓶颈的利器sar是查看操作系统报告指标的各种工具中，最为普遍和方便的；它有两种用法；追溯过去的统计数据（默认）周期性的查看当前数据查看CPU使用率sar -u 默认情况下显示的cpu使用率等信息就是sar -u;12345678910111213[root@lilis ~]# sar -uLinux 3.10.0-862.9.1.el7.x86_64 (lilis) 08/23/2018 _x86_64_ (1 CPU)12:00:01 AM CPU %user %nice %system %iowait %steal %idle12:10:01 AM all 0.85 0.00 0.29 0.04 0.00 98.8312:20:01 AM all 1.63 0.00 0.34 0.07 0.00 97.9612:30:01 AM all 0.73 0.00 0.25 0.04 0.00 98.9812:40:01 AM all 0.28 0.00 0.25 0.01 0.00 99.4612:50:01 AM all 0.31 0.00 0.26 0.01 0.00 99.4301:00:01 AM all 1.63 0.00 0.34 0.10 0.00 97.9401:10:01 AM all 0.66 0.00 0.29 0.03 0.00 99.0201:20:01 AM all 1.27 0.00 0.30 0.06 0.00 98.3701:30:01 AM all 0.29 0.00 0.27 0.01 0.00 99.44%user 用户模式下消耗的CPU时间的比例；%nice 通过nice改变了进程调度优先级的进程，在用户模式下消耗的CPU时间的比例%system 系统模式下消耗的CPU时间的比例；%iowait CPU等待磁盘I/O导致空闲状态消耗的时间比例；%steal 利用Xen等操作系统虚拟化技术，等待其它虚拟CPU计算占用的时间比例；%idle CPU空闲时间比例；查看平均负载sar -q 查看平均负载指定-q后，就能查看运行队列中的进程数、系统上的进程大小、平均负载等；与其它命令相比，它能查看各项指标随时间变化的情况；1234567891011121314151617[root@lilis ~]# sar -qLinux 3.10.0-862.9.1.el7.x86_64 (lilis) 08/23/2018 _x86_64_ (1 CPU)12:00:01 AM runq-sz plist-sz ldavg-1 ldavg-5 ldavg-15 blocked12:10:01 AM 3 187 0.00 0.02 0.05 012:20:01 AM 4 190 0.06 0.03 0.05 012:30:01 AM 4 187 0.00 0.01 0.05 112:40:01 AM 3 187 0.00 0.01 0.05 012:50:01 AM 3 187 0.07 0.10 0.08 101:00:01 AM 2 190 0.24 0.08 0.06 001:10:01 AM 2 187 0.08 0.03 0.05 001:20:01 AM 1 187 0.00 0.03 0.05 101:30:01 AM 3 187 0.00 0.01 0.05 001:40:01 AM 2 187 0.01 0.03 0.05 101:50:01 AM 3 187 0.00 0.01 0.05 102:00:01 AM 2 187 0.00 0.01 0.05 002:10:01 AM 3 190 0.00 0.04 0.05 0runq-sz：运行队列的长度（等待运行的进程数）plist-sz：进程列表中进程（processes）和线程（threads）的数量ldavg-1：最后1分钟的系统平均负载 ldavg-5：过去5分钟的系统平均负载ldavg-15：过去15分钟的系统平均负载查看页面交换发生状况sar -W 查看页面交换发生状况页面发生交换时，服务器的吞吐量会大幅下降；服务器状况不良时，如果怀疑因为内存不足而导致了页面交换的发生，可以使用这个命令来确认是否发生了大量的交换；123456789101112131415[root@lilis ~]# sar -W 1 10Linux 3.10.0-862.9.1.el7.x86_64 (lilis) 08/23/2018 _x86_64_ (1 CPU)11:43:35 AM pswpin/s pswpout/s11:43:36 AM 0.00 0.0011:43:37 AM 0.00 0.0011:43:38 AM 0.00 0.0011:43:39 AM 0.00 0.0011:43:40 AM 0.00 0.0011:43:41 AM 0.00 0.0011:43:42 AM 0.00 0.0011:43:43 AM 0.00 0.0011:43:44 AM 0.00 0.0011:43:45 AM 0.00 0.00Average: 0.00 0.00pswpin/s：每秒系统换入的交换页面（swap page）数量pswpout/s：每秒系统换出的交换页面（swap page）数量要判断系统瓶颈问题，有时需几个 sar 命令选项结合起来；怀疑CPU存在瓶颈，可用 sar -u 和 sar -q 等来查看怀疑内存存在瓶颈，可用sar -B、sar -r 和 sar -W 等来查看怀疑I/O存在瓶颈，可用 sar -b、sar -u 和 sar -d 等来查看安装有的linux系统下，默认可能没有安装这个包，使用yum install sysstat 来安装；安装完毕，将性能收集工具的开关打开： vim /etc/default/sysstat设置 ENABLED=”true”sar参数说明-A 汇总所有的报告-a 报告文件读写使用情况-B 报告附加的缓存的使用情况-b 报告缓存的使用情况-c 报告系统调用的使用情况-d 报告磁盘的使用情况-g 报告串口的使用情况-h 报告关于buffer使用的统计数据-m 报告IPC消息队列和信号量的使用情况-n 报告命名cache的使用情况-p 报告调页活动的使用情况-q 报告运行队列和交换队列的平均长度-R 报告进程的活动情况-r 报告没有使用的内存页面和硬盘块-u 报告CPU的利用率-v 报告进程、i节点、文件和锁表状态-w 报告系统交换活动状况-y 报告TTY设备活动状况]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scp 跨机远程拷贝]]></title>
    <url>%2Fposts%2Fe90a0b6e%2F</url>
    <content type="text"><![CDATA[scp是secure copy的简写，用于在Linux下进行远程拷贝文件的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的。当你服务器硬盘变为只读 read only system时，用scp可以帮你把文件移出来。原文链接:scp 跨机远程拷贝命令格式1scp [参数] [原路径] [目标路径]命令参数-1 强制scp命令使用协议ssh1-2 强制scp命令使用协议ssh2-4 强制scp命令只使用IPv4寻址-6 强制scp命令只使用IPv6寻址-B 使用批处理模式（传输过程中不询问传输口令或短语）-C 允许压缩。（将-C标志传递给ssh，从而打开压缩功能）-p 留原文件的修改时间，访问时间和访问权限。-q 不显示传输进度条。-r 递归复制整个目录。-v 详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。-c cipher 以cipher将数据传输进行加密，这个选项将直接传递给ssh。-F ssh_config 指定一个替代的ssh配置文件，此参数直接传递给ssh。-i identity_file 从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。-l limit 限定用户所能使用的带宽，以Kbit/s为单位。-o ssh_option 如果习惯于使用ssh_config(5)中的参数传递方式，-P port 注意是大写的P, port是指定数据传输用到的端口号-S program 指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。使用说明123scp local_file remote_username@remote_ip:remote_folderscp remote_username@remote_ip:remote_folder local_filescp remote_username@remote_ip:remote_folder remote_username@remote_ip:remote_folder]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WordPress获取文章所有信息]]></title>
    <url>%2Fposts%2F9cdcaf4d%2F</url>
    <content type="text"><![CDATA[首先得得知当前请求的文章ID：1get_the_ID(); //会返回当前文章ID那么我们得知文章ID后，可以使用wordpress内置函数来获取文章的所有信息:1get_post($id); //会返回id文章的所有信息获取到了些什么信息，我们可以看看获取的结果意义，可以得到你想要的文章任何信息：1234567891011121314151617181920212223242526272829303132333435363738394041post_author：（整数）文章作者的编号post_date：（字符）文章发表的日期和时间（YYYY-MM-DD HH-MM-SS）post_date_gmt：（字符）文章发表的格林尼治标准时间（GMT） （YYYY-MM-DD HH-MM-SS）post_content：（字符）文章内容post_title：（字符）文章标题post_category：（整数）文章类别的编号。注意：该值在WordPress 2.1之后的版本总为0。定义文章的类别时可使用 get_the_category（）函数。post_excerpt：（字符）文章摘要post_status：（字符）文章状态（publish|pending|draft|private|static|object|attachment|inherit|future）comment_status：（字符）评论状态（open|closed|registered_only）ping_status：（字符）pingback/trackback状态（open|closed）post_password：（字符）文章密码post_name：（字符）文章的URL嵌套to_ping：（字符）要引用的URL链接pinged：（字符）引用过的链接post_modified：（字符）文章最后修改时间（YYYY-MM-DD HH-MM-SS）post_modified_gmt：（字符）文章最后修改GMT时间（YYYY-MM-DD HH-MM-SS）post_parent：（整数）父级文章编号（供附件等） guid：（字符）文章的一个链接。注意：不能将GUID作为永久链接（虽然在2.5之前的版本中它的确被当作永久链接），也不能将它作为文章的可用链接。GUID是一种独有的标识符，只是目前恰巧成为文章的一个链接。 post_type：（字符）（日志 | 页面 | 附件） post_mime_type：（字符）Mime类型（供附件等） comment_count：（整数）评论总数原文链接:WordPress获取文章所有信息]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>WordPress</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos修改Hostname]]></title>
    <url>%2Fposts%2Fe0a8795%2F</url>
    <content type="text"><![CDATA[hostname主要用于区分自己所连接的服务器当自己连接在多台服务器是不至于只能看ip区分服务器临时修改hostname:1hostname lilis永久修改hostname123vim /etc/sysconfig/network# 修改或添加 HOSTNAME=lilis]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ps 进程查看器]]></title>
    <url>%2Fposts%2Ff1c6d624%2F</url>
    <content type="text"><![CDATA[ps 进程查看器Linux中的ps命令是Process Status的缩写。ps命令用来列出系统中当前运行的那些进程。ps命令列出的是当前那些进程的快照，就是执行ps命令的那个时刻的那些进程，如果想要动态的显示进程信息，就可以使用top命令。要对进程进行监测和控制，首先必须要了解当前进程的情况，也就是需要查看当前进程，而 ps 命令就是最基本同时也是非常强大的进程查看命令。使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等。总之大部分信息都是可以通过执行该命令得到的。ps 为我们提供了进程的一次性的查看，它所提供的查看结果并不动态连续的；如果想对进程时间监控，应该用 top linux下的任务管理器 工具。注：kill -9 命令用于杀死进程。原文地址:ps 进程查看器linux上进程有5种状态:运行(正在运行或在运行队列中等待)中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)不可中断(收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)僵死(进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放)停止(进程收到SIGSTOP, SIGTSTP, SIGTTIN, SIGTTOU信号后停止运行运行)ps工具标识进程的5种状态码:D 不可中断 uninterruptible sleep (usually IO)R 运行 runnable (on run queue)S 中断 sleepingT 停止 traced or stoppedZ 僵死 a defunct (”zombie”) process命令参数a 显示所有进程-a 显示同一终端下的所有程序-A 显示所有进程c 显示进程的真实名称-N 反向选择-e 等于“-A”e 显示环境变量f 显示程序间的关系-H 显示树状结构r 显示当前终端的进程T 显示当前终端的所有程序u 指定用户的所有进程-au 显示较详细的资讯-aux 显示所有包含其他使用者的行程-C&lt;命令&gt; 列出指定命令的状况–lines&lt;行数&gt; 每页显示的行数–width&lt;字符数&gt; 每页显示的字符数–help 显示帮助信息–version 显示版本显示输出列的含义F 代表这个程序的旗标 (flag)， 4 代表使用者为 super userS 代表这个程序的状态 (STAT)，关于各 STAT 的意义将在内文介绍UID 程序被该 UID 所拥有PID 进程的IDPPID 则是其上级父程序的IDC CPU 使用的资源百分比PRI 这个是 Priority (优先执行序) 的缩写，详细后面介绍NI 这个是 Nice 值，在下一小节我们会持续介绍ADDR 这个是 kernel function，指出该程序在内存的那个部分。如果是个 running的程序，一般就是 “-“SZ 使用掉的内存大小WCHAN 目前这个程序是否正在运作当中，若为 - 表示正在运作TTY 登入者的终端机位置TIME 使用掉的 CPU 时间。CMD 所下达的指令为何实例显示所有进程信息12345678910[root@lilis ~]# ps -A PID TTY TIME CMD 1 ? 00:00:02 systemd 2 ? 00:00:00 kthreadd 3 ? 00:00:00 ksoftirqd/0 5 ? 00:00:00 kworker/0:0H 7 ? 00:00:00 migration/0 8 ? 00:00:00 rcu_bh 9 ? 00:00:03 rcu_sched 10 ? 00:00:00 lru-add-drain显示指定用户信息12345678910[root@lilis ~]# ps -u root PID TTY TIME CMD 1 ? 00:00:02 systemd 2 ? 00:00:00 kthreadd 3 ? 00:00:00 ksoftirqd/0 5 ? 00:00:00 kworker/0:0H 7 ? 00:00:00 migration/0 8 ? 00:00:00 rcu_bh 9 ? 00:00:03 rcu_sched 10 ? 00:00:00 lru-add-drain显示所有进程信息，连同命令行12345678910[root@lilis ~]# ps -efUID PID PPID C STIME TTY TIME CMDroot 1 0 0 Aug16 ? 00:00:02 /usr/lib/systemd/systemd --switched-root --system --deserialize 22root 2 0 0 Aug16 ? 00:00:00 [kthreadd]root 3 2 0 Aug16 ? 00:00:00 [ksoftirqd/0]root 5 2 0 Aug16 ? 00:00:00 [kworker/0:0H]root 7 2 0 Aug16 ? 00:00:00 [migration/0]root 8 2 0 Aug16 ? 00:00:00 [rcu_bh]root 9 2 0 Aug16 ? 00:00:03 [rcu_sched]root 10 2 0 Aug16 ? 00:00:00 [lru-add-drain]ps 与grep 组合使用，查找特定进程123456789101112[root@lilis ~]# ps -ef | grep phproot 899 1 0 Aug16 ? 00:00:03 php-fpm: master process (/usr/local/php/php71/etc/php-fpm.conf)www 900 899 0 Aug16 ? 00:00:00 php-fpm: pool wwwwww 901 899 0 Aug16 ? 00:00:00 php-fpm: pool wwwroot 906 1 0 Aug16 ? 00:00:03 php-fpm: master process (/usr/local/php/php56/etc/php-fpm.conf)www 907 906 0 Aug16 ? 00:00:00 php-fpm: pool wwwwww 908 906 0 Aug16 ? 00:00:00 php-fpm: pool wwwroot 3801 1 0 16:59 ? 00:00:00 php-fpm: master process (/usr/local/php/php72/etc/php-fpm.conf)www 3803 3801 0 16:59 ? 00:00:01 php-fpm: pool wwwwww 3908 3801 0 17:02 ? 00:00:01 php-fpm: pool wwwwww 4137 3801 0 17:08 ? 00:00:00 php-fpm: pool wwwroot 4173 18277 0 17:09 pts/0 00:00:00 grep --color=auto php将与这次登入的 PID 与相关信息列示出来1234[root@lilis ~]# ps -lF S UID PID PPID C PRI NI ADDR SZ WCHAN TTY TIME CMD0 R 0 4334 18277 0 80 0 - 38292 - pts/0 00:00:00 ps4 S 0 18277 18275 0 80 0 - 28892 do_wai pts/0 00:00:00 bash列出目前所有的正在内存中的程序12345678910[root@lilis ~]# ps auxUSER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMANDroot 1 0.0 0.2 43416 2500 ? Ss Aug16 0:02 /usr/lib/systemd/systemd --switched-root --system --deserialize 22root 2 0.0 0.0 0 0 ? S Aug16 0:00 [kthreadd]root 3 0.0 0.0 0 0 ? S Aug16 0:00 [ksoftirqd/0]root 5 0.0 0.0 0 0 ? S&lt; Aug16 0:00 [kworker/0:0H]root 7 0.0 0.0 0 0 ? S Aug16 0:00 [migration/0]root 8 0.0 0.0 0 0 ? S Aug16 0:00 [rcu_bh]root 9 0.0 0.0 0 0 ? R Aug16 0:03 [rcu_sched]root 10 0.0 0.0 0 0 ? S&lt; Aug16 0:00 [lru-add-drain]]]></content>
  </entry>
  <entry>
    <title><![CDATA[PHP的非swoole异步操作]]></title>
    <url>%2Fposts%2F398018bd%2F</url>
    <content type="text"><![CDATA[在前几天对WordPress进行同步更新文章的改造之后,每次更新文章都需要花费较长的时间,这很显然是不合理的.更新文章主要都把时间花费在了一条shell指令上面.1exec('cd 目录 &amp;&amp; hexo clean &amp;&amp; hexo d &amp;&amp; pm2 reload app');引用原文地址:PHP实现异步调用方法研究PHP异步的的玩法先说说鸟哥文章中的几种玩法：通过渲染前端页面，使用js执行Ajax，这种方式现在还适用。只是受限于业务场景，因为只能在浏览器中调用，遇到接口请求就不行了。通过popen()方法打开一个指向进程的管道，每个请求会多起一个进程。忽略进程来看最主要的原因是数据的传输特别不方便，使用场景有限。使用CURL扩展，通过设置timeout超时参数，能实现离弦之箭的效果。不过这种方法会主动断开连接。被调用的服务如果有做连接检测，也会中断服务端脚本的执行。比如我们请求 微信的某个费时接口（20s），我们调用1s就断开连接，微信端是否会维持请求执行20S是不可控的。所以在curl别的网站的时候这种方法不推荐大家使用，但如果只是curl自己还是很好用的。与CURL类似，通过fsockopen创建socket连接访问远程服务，不循环获取请求结果。一样会有三中连接被断开的问题。PHP关于异步的改进CURL扩展已支持毫秒配置，将 CURLOPT_TIMEOUT 改为 CURLOPT_TIMEOUT_MS 即可生效（cURL 版本 &gt;= libcurl/7.21.0，老服务器要检查版本），但还是我前面说的需要服务端配合，不然接口的调用成功失败不可控。CURL扩展已支持并发，我们能一次访问N个接口，执行时间取最长接口的时间。比如我们能一次访问 京东支付（1s），微信支付(1.2s)，支付宝(0.8s)不同服务的三个接口,总耗时才1.2s。详细用法 curl_multi_init类似Node.js的异步IO框架Swoole，能很好的实现异步调用；不过Swoole理论上不能算PHP框架，他算是PHP功能的扩展。所以除非项目都用Swoole写，不然也是享受不到异步IO的福利。对yield的支持，能实现调度器的功能，写单进程的服务时能大展拳脚，特别是实现协程，异步更不在话下。不过在多进程的web服务上没有太大的使用场景，看未来会不会有新的玩法吧。关于web异步的解决方案这个主要是针对那些需要异步而且并不太看中异步操作的结果的特殊场景curl配合较短的等待时间.写一个swoole项目,需要异步时发送相应指令到相关端口使用以下插件123456789101112131415161718192021222324252627282930313233343536373839class Arrow&#123; static $instance; /** * @return static */ public static function getInstance()&#123; if (null == Arrow::$instance) Arrow::$instance = new Arrow(); return Arrow::$instance; &#125; public function run($rb)&#123; $pid = pcntl_fork(); if($pid &gt; 0)&#123; pcntl_wait($status); &#125;elseif($pid == 0)&#123; $cid = pcntl_fork(); if($cid == 0)&#123; $rb(); &#125; exit(); &#125;else &#123; return true; &#125; &#125;&#125;/***调用*/$time_out = 30;Arrow::getInstance()-&gt;run(function() use ($time_out)&#123; //这里写我们要执行的代码 sleep($time_out);&#125;);最终事实证明还是curl稳定,通过pcntl_fork()拉出的子进程和孙进程会影响到web的正常返回]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>异步</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WordPress使用前置钩子同步文章更新到hexo]]></title>
    <url>%2Fposts%2Fc84bbf5b%2F</url>
    <content type="text"><![CDATA[WordPress使用前置钩子同步文章更新到hexo这是借助WordPress的钩子系统来实现的操作由于WordPress官方对定义钩子的位置设定不够明确,我就自己在/wp-admin/post.php文件位置自己做了一个引入1234/** * 引入hooks文件 */include dirname( __FILE__ ) . '/user/hooks.php';并且在/wp-admin/user/下新建了一个hooks.php文件.这样前期钩子的准备就准备好了12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061add_action( 'save_post', 'usr_admin_add_content_before', $priority = 10, $accepted_args =1);/** * 添加文章的前置钩子 */function usr_admin_add_content_before($post_ID)&#123; $hexoRoot = '';//这里填写自己的hexo路径 $more = '';//由于WordPress没有more标签,这里填写自己自定义的替换more标签用的标签 $content = get_post($post_ID); $path = $hexoRoot . '/source/_posts' . '/'.date('Y-m-d', strtotime($content-&gt;post_date)) . preg_replace('/[\x&#123;4e00&#125;-\x&#123;9fa5&#125;]+/u', '-', $content-&gt;post_title) . '.md'; $title = $content-&gt;post_title; $url = $post_ID.'.com'; $id = $post_ID; $date = $content-&gt;post_date; $category = ''; foreach (get_the_category($post_ID) as $v) &#123; $category .= ' - '.$v-&gt;name; &#125; $tags = ''; foreach (wp_get_post_tags($post_ID) as $v) &#123; $tags .= ' - '.$v-&gt;name; &#125; //这里填more标签 $content = str_replace($more, '&lt;!--more--&gt;', $content-&gt;post_content_filtered); $con = &lt;&lt;&lt;con---title: $titletags: $tagsurl: $urlid: $idcategories: $categorydate: $date---$contentcon; if(file_exists($path))&#123; unlink($path); &#125; file_put_contents($path, $con); $reload = 'cd $hexoRoot &amp;&amp;'//这里填写需要执行的hexo命令 . ' hexo clean &amp;&amp;' . ' hexo d &amp;&amp;' . ' pm2 reload app'; exec($reload);&#125;]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>WordPress</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WordPress使用pjax]]></title>
    <url>%2Fposts%2Fa474e038%2F</url>
    <content type="text"><![CDATA[借助pjax可以使一个网页的所有页面变成单页面搞定一切的模式,同时还能让页面中的一些小部件不受用户切换页面的影响 首先是引入pjax&lt;script src=&apos;https://cdnjs.cloudflare.com/ajax/libs/jquery.pjax/2.0.1/jquery.pjax.min.js&apos;&gt;&lt;/script&gt; 调用pjax$(document).pjax(&apos;a[href^=&quot;https://blog.lilis.xin&quot;]:not(a[target=&quot;_blank&quot;], a[no-pjax])&apos;, { container: &apos;#page&apos;,//需要刷新的标签 fragment: &apos;#page&apos;,//容器 timeout: 8000 });]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[和谐代码]]></title>
    <url>%2Fposts%2F43788fe5%2F</url>
    <content type="text"><![CDATA[和谐代码var a_idx = 0; jQuery(document).ready(function ($) { $(&quot;body&quot;).click(function (e) { var a = [ &quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;,&quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot; ]; var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]); a_idx = (a_idx + 1) % a.length; var x = e.pageX, y = e.pageY; $i.css({ &quot;z-index&quot;: 9999999, &quot;top&quot;: y - 20, &quot;left&quot;: x, &quot;position&quot;: &quot;absolute&quot;, &quot;font-weight&quot;: &quot;bold&quot;, &quot;color&quot;: &quot;#ff6651&quot; }); $(&quot;body&quot;).append($i); $i.animate({ &quot;top&quot;: y - 180, &quot;opacity&quot;: 0 }, 1500, function () { $i.remove(); }); }); });]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git常用命令]]></title>
    <url>%2Fposts%2Fcaff8000%2F</url>
    <content type="text"><![CDATA[Workspace：工作区Index / Stage：暂存区Repository：仓库区（或本地仓库）Remote：远程仓库Git常用命令清单Git常用命令清单新建代码库# 在当前目录新建一个Git代码库 git init # 新建一个目录，将其初始化为Git代码库 git init [project-name] # 下载一个项目和它的整个代码历史 git clone [url] 配置Git的设置文件为 .gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）# 显示当前的Git配置 git config --list # 编辑Git配置文件 git config -e [--global] # 设置提交代码时的用户信息 git config [--global] user.name &quot;[name]&quot; git config [--global] user.email &quot;[email address]&quot; 增加/删除文件# 添加指定文件到暂存区 git add [file1] [file2] ... # 添加指定目录到暂存区，包括子目录 git add [dir] # 添加当前目录的所有文件到暂存区 git add . # 添加每个变化前，都会要求确认 # 对于同一个文件的多处变化，可以实现分次提交 git add -p # 删除工作区文件，并且将这次删除放入暂存区 git rm [file1] [file2] ... # 停止追踪指定文件，但该文件会保留在工作区 git rm --cached [file] # 改名文件，并且将这个改名放入暂存区 git mv [file-original] [file-renamed] 代码提交# 提交暂存区到仓库区 git commit -m [message] # 提交暂存区的指定文件到仓库区 git commit [file1] [file2] ... -m [message] # 提交工作区自上次commit之后的变化，直接到仓库区 git commit -a # 提交时显示所有diff信息 git commit -v # 使用一次新的commit，替代上一次提交 # 如果代码没有任何新变化，则用来改写上一次commit的提交信息 git commit --amend -m [message] # 重做上一次commit，并包括指定文件的新变化 git commit --amend [file1] [file2] ... 分支# 列出所有本地分支 git branch # 列出所有远程分支 git branch -r # 列出所有本地分支和远程分支 git branch -a # 新建一个分支，但依然停留在当前分支 git branch [branch-name] # 新建一个分支，并切换到该分支 git checkout -b [branch] # 新建一个分支，指向指定commit git branch [branch] [commit] # 新建一个分支，与指定的远程分支建立追踪关系 git branch --track [branch] [remote-branch] # 切换到指定分支，并更新工作区 git checkout [branch-name] # 切换到上一个分支 git checkout - # 建立追踪关系，在现有分支与指定的远程分支之间 git branch --set-upstream [branch] [remote-branch] # 合并指定分支到当前分支 git merge [branch] # 选择一个commit，合并进当前分支 git cherry-pick [commit] # 删除分支 git branch -d [branch-name] # 删除远程分支 git push origin --delete [branch-name] git branch -dr [remote/branch] 标签# 列出所有tag git tag # 新建一个tag在当前commit git tag [tag] # 新建一个tag在指定commit git tag [tag] [commit] # 删除本地tag git tag -d [tag] # 删除远程tag git push origin :refs/tags/[tagName] # 查看tag信息 git show [tag] # 提交指定tag git push [remote] [tag] # 提交所有tag git push [remote] --tags # 新建一个分支，指向某个tag git checkout -b [branch] [tag] 查看信息# 显示有变更的文件 git status # 显示当前分支的版本历史 git log # 显示commit历史，以及每次commit发生变更的文件 git log --stat # 搜索提交历史，根据关键词 git log -S [keyword] # 显示某个commit之后的所有变动，每个commit占据一行 git log [tag] HEAD --pretty=format:%s # 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件 git log [tag] HEAD --grep feature # 显示某个文件的版本历史，包括文件改名 git log --follow [file] git whatchanged [file] # 显示指定文件相关的每一次diff git log -p [file] # 显示过去5次提交 git log -5 --pretty --oneline # 显示所有提交过的用户，按提交次数排序 git shortlog -sn # 显示指定文件是什么人在什么时间修改过 git blame [file] # 显示暂存区和工作区的差异 git diff # 显示暂存区和上一个commit的差异 git diff --cached [file] # 显示工作区与当前分支最新commit之间的差异 git diff HEAD # 显示两次提交之间的差异 git diff [first-branch]...[second-branch] # 显示今天你写了多少行代码 git diff --shortstat &quot;@{0 day ago}&quot; # 显示某次提交的元数据和内容变化 git show [commit] # 显示某次提交发生变化的文件 git show --name-only [commit] # 显示某次提交时，某个文件的内容 git show [commit]:[filename] # 显示当前分支的最近几次提交 git reflog 远程同步# 下载远程仓库的所有变动 git fetch [remote] # 显示所有远程仓库 git remote -v # 显示某个远程仓库的信息 git remote show [remote] # 增加一个新的远程仓库，并命名 git remote add [shortname] [url] # 取回远程仓库的变化，并与本地分支合并 git pull [remote] [branch] # 上传本地指定分支到远程仓库 git push [remote] [branch] # 强行推送当前分支到远程仓库，即使有冲突 git push [remote] --force # 推送所有分支到远程仓库 git push [remote] --all 撤销# 恢复暂存区的指定文件到工作区 git checkout [file] # 恢复某个commit的指定文件到暂存区和工作区 git checkout [commit] [file] # 恢复暂存区的所有文件到工作区 git checkout . # 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变 git reset [file] # 重置暂存区与工作区，与上一次commit保持一致 git reset --hard # 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变 git reset [commit] # 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致 git reset --hard [commit] # 重置当前HEAD为指定commit，但保持暂存区和工作区不变 git reset --keep [commit] # 新建一个commit，用来撤销指定commit # 后者的所有变化都将被前者抵消，并且应用到当前分支 git revert [commit] # 暂时将未提交的变化移除，稍后再移入 git stash git stash pop 其他# 生成一个可供发布的压缩包 git archive Git 设置邮箱和密码git config --global user.email &quot;code0809@163.com&quot; git config --global user.name &quot;SoulMate94&quot; 需要注意的是，如果以前全局配置后，再次执行该操作会覆盖原用户名。 如果配置了全局账号，多个 Git 账号的情况下执行 remote、pull、push 的时候会出现问题，因为要 pull 的时候识别的是邮箱，多个 git 账号，必然对应多个邮箱，那自然就不能使用 global 的 user.email 了。 这时候可以为每个 repo 设置自己的 user.email。# 取消 global git config --global --unset user.name git config --global --unset user.email # 设置每个项目 repo 的 user.email git config user.email &quot;xxx@xxx.com&quot; git config user.name &quot;username&quot; SSH keyssh-keygen -t rsa -C &quot;552121229l@gmail.com&quot; 一直回车，成功的话会在 ~/ 下生成 .ssh 文件夹，进去，打开 id_rsa.pub，复制里面的 key，然后进入 GitHub 的 Account Settings，选择 SSH Keys -&gt; Add SSH Key，粘贴在你电脑上生成的 key。（title 随便填） 验证是否成功：$ ssh -T git@github.com # 成功: Hi Tessttt! You&apos;ve successfully authenticated, but GitHub does not provide shell access. 配置多个 Git 远程仓库的 SSH-Key 我机器上的 Git 会在 GitHub、GitCafe、Coding.NET 、以及树莓派上的私有 Git 仓库之间来回切换，所以如果不配置 SSH-Key 光输入密码就得浪费不少时间。 在默认情况下，ssh 总是使用 id_rsa 密钥文件进行链接，即是第一次执行 ssh-keygen 后默认生成的，这样对于多个账号的认证肯定是不行的。 因此，要实现多帐号下的 SSH Key 的切换需要在客户端做一些配置：cd ~/.ssh # 必须进入这个路径否则生成的密钥路径容易遗忘 ssh-keygen -t rsa -C &apos;username@github.com&apos; -f id_rsa_github # -C 后面跟的是注释 ssh-keygen -t rsa -C &apos;username@gitcafe.com&apos; -f id_rsa_gitcafe ssh-keygen -t rsa -C &apos;username@coding.net&apos; -f id_rsa_coding # 如果还有多个 Git 远程仓库地址就继续执行 ... 然后复制 ~/.ssh/ 下面的相应的公钥到你的 Git 远程仓库服务器上即可，这个步骤和 GitHub 上的操作是一样的。 然后在 ~/.ssh/ 下面创建一个 config 文件，填入你刚刚配置的 SSH 密钥信息，内容应类似于如下：Host github.com HostName github.com User SoulMate94 Port 22 IdentityFile ~/.ssh/id_rsa_github Host gitcafe.com HostName gitcafe.com User SoulMate94 Port 22 IdentityFile ~/.ssh/id_rsa_gitcafe Host git.coding.net # 注意 Coding.NET 的 HostName 是 git.coding.net HostName git.coding.net User SoulMate94 Port 22 IdentityFile ~/.ssh/id_rsa_coding 然后可以测试一下是否配置 OK：ssh -T git@github.com ssh -T git@gitcafe.com ssh -T git@git.coding.net ssh -T git@git.keensword.net 如果没有提示错误就说明 SSH 配置好了。 然后克隆 SSH 协议的 Git 仓库即可，此后便不用每次输入用户名密码了，比如：git clone git@gitcafe.com:SoulMate94/soulmate94.git git clone git@git.coding.net:SoulMate94/SoulMate94.git 然后还可以为不同远程 Git 仓库起不同的别名，就算是为同一内容的不同 Git 仓库提交代码，也可以通过别名来区分，比如：git remote add gitcafe git@gitcafe.com:SoulMate94/soulmate94.git git remote add coding git@git.coding.net:SoulMate94/SoulMate94.git 这样修改了同一个仓库后就算已经 push 到了一个远程仓库地址，也可以继续 push 到另一个的同一分支或不同分支，其区别就是别名：git push gitcafe master git push coding master 注意只有克隆 SSH 协议的 Git 仓库才能使 SSH 密钥机制生效，如果克隆的是 HTTPS 协议的则每次依然需要输入用户名和密码。GIT 分支操作添加远程仓库地址和推送到远程仓库git remote add origin git@lilis.xin:/home/git/blog.git git push -u origin master origin 是为远程仓库地址起的别名。-u 只在第一次推送时使用，作用是把本地的 master 分支和远程的 master 分支关联起来，之后的推送不再需要这个参数。为远程仓库起别名# 移除现有分支别名 git remote rm origin # 为远程仓库地址重新起别名 git remote add caoxl git@github.com:SoulMate94/SM94.git 创建分支如果 clone 了一个空仓库，那么在执行 git branch master 的时候会报错： fatal: Not a valid object name: ‘master’. 这时候只需添加一些文件 commit 就行了, 比如：git add README.md git commit -m &quot;test&quot; git branch dev 切换分支git checkout --orphan gh-pages git checkout -b test # 从当前分支中分出一个 test 分支并切换到新 test 分支 查看分支git branch -a # 查看远程分支 git branch # 查看本地分支 git remote show origin 删除分支git branch -d branch_name # 删除本地分支 git push origin --delete &lt;branch_name&gt; # 删除远程分支版本( 类似的有删除标签：git push origin --delete tag &lt;tagname&gt; ) git push origin :&lt;branchName&gt; # 推送一个空分支到远程分支, 其实就相当于删除远程分支 git remote prune origin # 删除不存在对应远程分支的本地分支 git fetch -p #在 fetch 之后删除掉没有与远程分支对应的本地分支 重命名本地分支git branch -m devel develop Git 移除已经 add 的文件git reset --hard 需要回退的那次 commit 的哈希值 每次 commit 的哈希值可以通过 git log 命令查看 上述命令执行成功之后，会彻底返回到回退到的版本状态，新发生的变更将会丢失。 对于部分发生了变更，但是变更部分的文件夹存在未提交的文件可能导致目录非空而删除失败，此时需要自行处置 完成之后，使用 –force 或 -f 参数强制 push：git push origin HEAD --force - `HEAD` 最近一个提交。 - `HEAD^` 上一次。 查看远程 Git 仓库git remote -v FAQ为什么删不了 master 分支？需要先更改默认分支为非 master 分支。再执行删除操作：# 删除本地分支 git branch -d [branch-name] git branch -D master # 删除远程分支 git push origin :master git push origin --delete [branch-name] git branch -dr [remote/branch] 将 .gitignore.txt 修改为 .gitignore 时提示 “必须键入文件名” 怎么办？rename .gitignore.txt .gitignore Git忽略规则及 .gitignore 规则不生效的解决办法已知在 git 中如果想忽略掉某个文件，不让这个文件提交到版本库中，可以使用修改根目录中 .gitignore 文件的方法（如无，则需自己手工建立此文件）。 这个文件每一行保存了一个匹配的规则例如：# 此为注释 – 将被 Git 忽略 *.a # 忽略所有 .a 结尾的文件 !lib.a # 但 lib.a 除外 /TODO # 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO build/ # 忽略 build/ 目录下的所有文件 doc/*.txt # 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt 规则很简单，不做过多解释，但是有时候在项目开发过程中，突然心血来潮想把某些目录或文件加入忽略规则，按照上述方法定义后发现并未生效，原因是 .gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改 .gitignore 是无效的。那么解决方法就是先把本地缓存删除（改变成未track状态），然后再提交：git rm -r --cached . git add . git commit -m &apos;update .gitignore&apos; # 如果 cache 暂存区的内容和 HEAD 不一致，请使用： git rm rf --cache . 强制删除 Git 停止追踪文件权限git config core.filemode false cat .git/config .gitkeep 有什么用 ?“.gitkeep” isn’t documented, because it’s not a feature of Git. Git cannot add a completely empty directory. People who want to track empty directories in Git have created the convention of putting files called “.gitkeep” in these directories. The file could be called anything; Git assigns no special significance to this name. There is a competing convention of adding a “.gitignore” file to the empty directories to get them tracked, but some people see this as confusing since the goal is to keep the empty directories, not ignore them; “.gitignore” is also used to list files that should be ignored by Git when looking for untracked files. or you can use like this to except for this one: !.gitignore. git fetch repo 和 git fetch repo branch 的区别 ? git fetch, 理解fetch的含义, 是远程协作的关键，而理解fetch的关键, 是理解FETCH_HEAD。 FETCH_HEAD指的是: 某个branch在服务器上的最新状态。 每一个执行过fetch操作的项目，都会存在一个FETCH_HEAD列表，这个列表保存在 .git/FETCH_HEAD 文件中, 其中每一行对应于远程服务器的一个分支。 当前分支指向的 FETCH_HEAD, 就是这个文件第一行对应的那个分支。 一般来说, 存在两种情况: 如果没有显式的指定远程分支, 则远程分支的 master 将作为默认的 FETCH_HEAD。 .如果指定了远程分支, 就将这个远程分支作为 FETCH_HEAD。 常见的 git fetch 使用方式包含以下四种:git fetch 这一步其实是执行了两个关键操作: 1.创建并更新所有远程分支的本地远程分支。 2.设定当前分支的 FETCH_HEAD 为远程服务器的 master 分支 (上面说的第一种情况)。 需要注意的是，和 push 不同, fetch 会自动获取远程 新加入的分支。git fetch origin 同上, 只不过手动指定了 remote。git fetch origin branch1 设定当前分支的 FETCH_HEAD 为远程服务器的 branch1 分支。 注意: 在这种情况下, 不会在本地创建本地远程分支, 这是因为: 这个操作是 git pull origin branch1 的第一步, 而对应的 pull 操作,并不会在本地创建新的 branch。 一个附加效果是：这个命令可以用来测试远程主机的远程分支 branch1 是否存在, 如果存在, 返回0, 如果不存在, 返回128, 抛出一个异常。git fetch origin branch1:branch2 只要明白了上面的含义, 这个就很简单了: 1. 首先执行上面的 fetch 操作 2. 使用远程 branch1 分支在本地创建 branch2 (但不会切换到该分支)，如果本地不存在branch2分支, 则会自动创建一个新的 branch2 分支。 如果本地存在 branch2 分支, 并且是 fast forward，则自动合并两个分支, 否则, 会阻止以上操作.git fetch origin :branch2 # 等价于: git fetch origin master:branch2。 git pull 只要理解了 git fetch git pull就太简单了。 git pull 等价于以下两步: 1. 经命令中的pull换成fetch, 执行之。 2. git merge FETCH_HEAD 唯一需要提及的一点是: 我认为 pull 操作, 不应该涉及三方合并 或 衍合 操作。 换个说法: pull 应该总是 fast forward 的. 为了达到这样一个效果, 在真正 push 操作之前, 我倾向于使用衍合, 在本地对代码执行合并操作。 关于 git 不区分文件名大小写的处理 处理办法： windows 下在 git 中修改文件的大小写git mv --force myfile MyFile # 或者 git mv -f myfile MyFile 然后 commit 就好了。当然也可以配置一下 git：Add ignorecase = false to [core] in .git/config; 其他创建版本号为 1 的 master 分支git push sina master:1 删除 master 分支上版本号为 1 的 代码git push sina :1 # 或 git push sina master :1 有空格则为删除版本，无空格则为新建版本。git push origin :branch 表示将一个内容为空的同名分支推送到远程的分支，说白了, 即删除远程主机的 branch 分支, 但是这并不会消除之前的 comment 内容, 而且你一旦提交了一些大的文件(例如: 图片之类的), 通过这个操作, 是不会将这些文件占用的空间消除的. 如果要真正的删除一个文件, 除了删除整个项目, Github网站也有提供办法。]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[生成ssh公钥]]></title>
    <url>%2Fposts%2Fc5865ac%2F</url>
    <content type="text"><![CDATA[生成ssh公钥ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /root/.ssh/id_rsa. Your public key has been saved in /root/.ssh/id_rsa.pub. The key fingerprint is: SHA256:FnCdJPMa8nGV1PeSuFs/QnwPq+R+QySEbbot694J20s root@lilis The key&apos;s randomart image is: +---[RSA 2048]----+ | . +o.=oo | | o ++.= . .| | . + o+ . o.| | o *. o + .| | S o.+ . | | . o oo+. | | .oE+.+.| | .O.o+.o| | o+.O+...| +----[SHA256]-----+ cat ~/.ssh/id_rsa.pub ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDkxXUiZDVLIx8wXegCXFEfpZ6pU4Dek fYleuQIw0Xo1epEqVzolKEjvjyp6qseav7ZV7buWijvelwo9iiX244Il70BnNIM3q/W/9 jQHaJoC69PgLNcw8Wmzdh4oPykc6UeXXRKaA9GqWpzNDb4bvCCMtTM/cyG+9Pc9/Vm+cq s3FMs04WaLP6a0E9r37GBW95GJnx5ky05uxXGmdK+tTE85oQm15X9P/w5yAPxWjexIZpI /ogBN/GNBgjKcY8Wdt9/yfwxyB0ov1CIkHfAEylpZcEyMtYAbOZdpiTAyMzeeaQ8Qyct9 PzdoGeORLCy3OGjZft8fMqr4djK7uXli+cb root@lilis]]></content>
      <tags>
        <tag>代码</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[管理远程库]]></title>
    <url>%2Fposts%2Fa7f0d6d%2F</url>
    <content type="text"><![CDATA[添加远程库git remote add origin git@lilis.xin:/home/git/laravel-s.git 删除远程仓库git remote remove origin]]></content>
      <tags>
        <tag>代码</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[根据银行卡号获取银行名称]]></title>
    <url>%2Fposts%2F6cfcf2cc%2F</url>
    <content type="text"><![CDATA[根据银行卡号获取银行名称(PHP)&lt;?php header(&quot;content-type:text/html;charset=utf-8&quot;); /** * */ class GetBank { public static $bankBin = array( 621098, 622150, 622151, 622181, 622188, 955100, 621095, 620062, 621285, 621798, 621799, 621797, 620529, 622199, 621096, 621622, 623219, 621674, 623218, 621599, 370246, 370248, 370249, 427010, 427018, 427019, 427020, 427029, 427030, 427039, 370247, 438125, 438126, 451804, 451810, 451811, 458071, 489734, 489735, 489736, 510529, 427062, 524091, 427064, 530970, 530990, 558360, 620200, 620302, 620402, 620403, 620404, 524047, 620406, 620407, 525498, 620409, 620410, 620411, 620412, 620502, 620503, 620405, 620408, 620512, 620602, 620604, 620607, 620611, 620612, 620704, 620706, 620707, 620708, 620709, 620710, 620609, 620712, 620713, 620714, 620802, 620711, 620904, 620905, 621001, 620902, 621103, 621105, 621106, 621107, 621102, 621203, 621204, 621205, 621206, 621207, 621208, 621209, 621210, 621302, 621303, 621202, 621305, 621306, 621307, 621309, 621311, 621313, 621211, 621315, 621304, 621402, 621404, 621405, 621406, 621407, 621408, 621409, 621410, 621502, 621317, 621511, 621602, 621603, 621604, 621605, 621608, 621609, 621610, 621611, 621612, 621613, 621614, 621615, 621616, 621617, 621607, 621606, 621804, 621807, 621813, 621814, 621817, 621901, 621904, 621905, 621906, 621907, 621908, 621909, 621910, 621911, 621912, 621913, 621915, 622002, 621903, 622004, 622005, 622006, 622007, 622008, 622010, 622011, 622012, 621914, 622015, 622016, 622003, 622018, 622019, 622020, 622102, 622103, 622104, 622105, 622013, 622111, 622114, 622200, 622017, 622202, 622203, 622208, 622210, 622211, 622212, 622213, 622214, 622110, 622220, 622223, 622225, 622229, 622230, 622231, 622232, 622233, 622234, 622235, 622237, 622215, 622239, 622240, 622245, 622224, 622303, 622304, 622305, 622306, 622307, 622308, 622309, 622238, 622314, 622315, 622317, 622302, 622402, 622403, 622404, 622313, 622504, 622505, 622509, 622513, 622517, 622502, 622604, 622605, 622606, 622510, 622703, 622715, 622806, 622902, 622903, 622706, 623002, 623006, 623008, 623011, 623012, 622904, 623015, 623100, 623202, 623301, 623400, 623500, 623602, 623803, 623901, 623014, 624100, 624200, 624301, 624402, 62451804, 62451810, 62451811, 62458071, 623700, 628288, 624000, 628286, 622206, 621225, 526836, 513685, 543098, 458441, 620058, 621281, 622246, 900000, 544210, 548943, 370267, 621558, 621559, 621722, 621723, 620086, 621226, 402791, 427028, 427038, 548259, 356879, 356880, 356881, 356882, 528856, 621618, 620516, 621227, 621721, 900010, 625330, 625331, 625332, 623062, 622236, 621670, 524374, 550213, 374738, 374739, 621288, 625708, 625709, 622597, 622599, 360883, 360884, 625865, 625866, 625899, 621376, 620054, 620142, 621428, 625939, 621434, 625987, 621761, 621749, 620184, 621300, 621378, 625114, 622159, 621720, 625021, 625022, 621379, 620114, 620146, 621724, 625918, 621371, 620143, 620149, 621414, 625914, 621375, 620187, 621433, 625986, 621370, 625925, 622926, 622927, 622928, 622929, 622930, 622931, 620124, 620183, 620561, 625116, 622227, 621372, 621464, 625942, 622158, 625917, 621765, 620094, 620186, 621719, 621719, 621750, 621377, 620148, 620185, 621374, 621731, 621781, 552599, 623206, 621671, 620059, 403361, 404117, 404118, 404119, 404120, 404121, 463758, 514027, 519412, 519413, 520082, 520083, 558730, 621282, 621336, 621619, 622821, 622822, 622823, 622824, 622825, 622826, 622827, 622828, 622836, 622837, 622840, 622841, 622843, 622844, 622845, 622846, 622847, 622848, 622849, 623018, 625996, 625997, 625998, 628268, 625826, 625827, 548478, 544243, 622820, 622830, 622838, 625336, 628269, 620501, 621660, 621661, 621662, 621663, 621665, 621667, 621668, 621669, 621666, 625908, 625910, 625909, 356833, 356835, 409665, 409666, 409668, 409669, 409670, 409671, 409672, 456351, 512315, 512316, 512411, 512412, 514957, 409667, 518378, 518379, 518474, 518475, 518476, 438088, 524865, 525745, 525746, 547766, 552742, 553131, 558868, 514958, 622752, 622753, 622755, 524864, 622757, 622758, 622759, 622760, 622761, 622762, 622763, 601382, 622756, 628388, 621256, 621212, 620514, 622754, 622764, 518377, 622765, 622788, 621283, 620061, 621725, 620040, 558869, 621330, 621331, 621332, 621333, 621297, 377677, 621568, 621569, 625905, 625906, 625907, 628313, 625333, 628312, 623208, 621620, 621756, 621757, 621758, 621759, 621785, 621786, 621787, 621788, 621789, 621790, 621672, 625337, 625338, 625568, 621648, 621248, 621249, 622750, 622751, 622771, 622772, 622770, 625145, 620531, 620210, 620211, 622479, 622480, 622273, 622274, 621231, 621638, 621334, 625140, 621395, 622725, 622728, 621284, 421349, 434061, 434062, 436728, 436742, 453242, 491031, 524094, 526410, 544033, 552245, 589970, 620060, 621080, 621081, 621466, 621467, 621488, 621499, 621598, 621621, 621700, 622280, 622700, 622707, 622966, 622988, 625955, 625956, 553242, 621082, 621673, 623211, 356896, 356899, 356895, 436718, 436738, 436745, 436748, 489592, 531693, 532450, 532458, 544887, 552801, 557080, 558895, 559051, 622166, 622168, 622708, 625964, 625965, 625966, 628266, 628366, 625362, 625363, 628316, 628317, 620021, 620521, 405512, 601428, 405512, 434910, 458123, 458124, 520169, 522964, 552853, 601428, 622250, 622251, 521899, 622254, 622255, 622256, 622257, 622258, 622259, 622253, 622261, 622284, 622656, 628216, 622252, 66405512, 622260, 66601428, 955590, 955591, 955592, 955593, 628218, 622262, 621069, 620013, 625028, 625029, 621436, 621002, 621335, 433670, 433680, 442729, 442730, 620082, 622690, 622691, 622692, 622696, 622698, 622998, 622999, 433671, 968807, 968808, 968809, 621771, 621767, 621768, 621770, 621772, 621773, 620527, 356837, 356838, 486497, 622660, 622662, 622663, 622664, 622665, 622666, 622667, 622669, 622670, 622671, 622672, 622668, 622661, 622674, 622673, 620518, 621489, 621492, 620535, 623156, 621490, 621491, 620085, 623155, 623157, 623158, 623159, 999999, 621222, 623020, 623021, 623022, 623023, 622630, 622631, 622632, 622633, 622615, 622616, 622618, 622622, 622617, 622619, 415599, 421393, 421865, 427570, 427571, 472067, 472068, 622620, 621691, 545392, 545393, 545431, 545447, 356859, 356857, 407405, 421869, 421870, 421871, 512466, 356856, 528948, 552288, 622600, 622601, 622602, 517636, 622621, 628258, 556610, 622603, 464580, 464581, 523952, 545217, 553161, 356858, 622623, 625911, 377152, 377153, 377158, 377155, 625912, 625913, 356885, 356886, 356887, 356888, 356890, 402658, 410062, 439188, 439227, 468203, 479228, 479229, 512425, 521302, 524011, 356889, 545620, 545621, 545947, 545948, 552534, 552587, 622575, 622576, 622577, 622579, 622580, 545619, 622581, 622582, 622588, 622598, 622609, 690755, 690755, 545623, 621286, 620520, 621483, 621485, 621486, 628290, 622578, 370285, 370286, 370287, 370289, 439225, 518710, 518718, 628362, 439226, 628262, 625802, 625803, 621299, 966666, 622909, 622908, 438588, 438589, 461982, 486493, 486494, 486861, 523036, 451289, 527414, 528057, 622901, 622902, 622922, 628212, 451290, 524070, 625084, 625085, 625086, 625087, 548738, 549633, 552398, 625082, 625083, 625960, 625961, 625962, 625963, 356851, 356852, 404738, 404739, 456418, 498451, 515672, 356850, 517650, 525998, 622177, 622277, 622516, 622517, 622518, 622520, 622521, 622522, 622523, 628222, 628221, 984301, 984303, 622176, 622276, 622228, 621352, 621351, 621390, 621792, 625957, 625958, 621791, 620530, 625993, 622519, 621793, 621795, 621796, 622500, 623078, 622384, 940034, 940015, 622886, 622391, 940072, 622359, 940066, 622857, 940065, 621019, 622309, 621268, 622884, 621453, 622684, 621016, 621015, 622950, 622951, 621072, 623183, 623185, 621005, 622172, 622985, 622987, 622267, 622278, 622279, 622468, 622892, 940021, 621050, 620522, 356827, 356828, 356830, 402673, 402674, 438600, 486466, 519498, 520131, 524031, 548838, 622148, 622149, 622268, 356829, 622300, 628230, 622269, 625099, 625953, 625350, 625351, 625352, 519961, 625839, 421317, 602969, 621030, 621420, 621468, 623111, 422160, 422161, 622865, 940012, 623131, 622178, 622179, 628358, 622394, 940025, 621279, 622281, 622316, 940022, 621418, 512431, 520194, 621626, 623058, 602907, 622986, 622989, 622298, 622338, 940032, 623205, 621977, 990027, 622325, 623029, 623105, 621244, 623081, 623108, 566666, 622455, 940039, 622466, 628285, 622420, 940041, 623118, 603708, 622993, 623070, 623069, 623172, 623173, 622383, 622385, 628299, 603506, 603367, 622878, 623061, 623209, 628242, 622595, 622303, 622305, 621259, 622596, 622333, 940050, 621439, 623010, 621751, 628278, 625502, 625503, 625135, 622476, 621754, 622143, 940001, 623026, 623086, 628291, 621532, 621482, 622135, 622152, 622153, 622154, 622996, 622997, 940027, 623099, 623007, 940055, 622397, 622398, 940054, 622331, 622426, 625995, 621452, 628205, 628214, 625529, 622428, 621529, 622429, 621417, 623089, 623200, 940057, 622311, 623119, 622877, 622879, 621775, 623203, 603601, 622137, 622327, 622340, 622366, 622134, 940018, 623016, 623096, 940049, 622425, 622425, 621577, 622485, 623098, 628329, 621538, 940006, 621269, 622275, 621216, 622465, 940031, 621252, 622146, 940061, 621419, 623170, 622440, 940047, 940017, 622418, 623077, 622413, 940002, 623188, 622310, 940068, 622321, 625001, 622427, 940069, 623039, 628273, 622370, 683970, 940074, 621437, 628319, 990871, 622308, 621415, 623166, 622132, 621340, 621341, 622140, 623073, 622147, 621633, 622301, 623171, 621422, 622335, 622336, 622165, 622315, 628295, 625950, 621760, 622337, 622411, 623102, 622342, 623048, 622367, 622392, 623085, 622395, 622441, 622448, 621413, 622856, 621037, 621097, 621588, 623032, 622644, 623518, 622870, 622866, 623072, 622897, 628279, 622864, 621403, 622561, 622562, 622563, 622167, 622777, 621497, 622868, 622899, 628255, 625988, 622566, 622567, 622625, 622626, 625946, 628200, 621076, 504923, 622173, 622422, 622447, 622131, 940076, 621579, 622876, 622873, 622962, 622936, 623060, 622937, 623101, 621460, 622939, 622960, 623523, 621591, 622961, 628210, 622283, 625902, 621010, 622980, 623135, 621726, 621088, 620517, 622740, 625036, 621014, 621004, 622972, 623196, 621028, 623083, 628250, 623121, 621070, 628253, 622979, 621035, 621038, 621086, 621498, 621296, 621448, 622945, 621755, 622940, 623120, 628355, 621089, 623161, 628339, 621074, 621515, 623030, 621345, 621090, 623178, 621091, 623168, 621057, 623199, 621075, 623037, 628303, 621233, 621235, 621223, 621780, 621221, 623138, 628389, 621239, 623068, 621271, 628315, 621272, 621738, 621273, 623079, 621263, 621325, 623084, 621327, 621753, 628331, 623160, 621366, 621388, 621348, 621359, 621360, 621217, 622959, 621270, 622396, 622511, 623076, 621391, 621339, 621469, 621625, 623688, 623113, 621601, 621655, 621636, 623182, 623087, 621696, 622955, 622478, 940013, 621495, 621688, 623162, 622462, 628272, 625101, 622323, 623071, 603694, 622128, 622129, 623035, 623186, 621522, 622271, 940037, 940038, 985262, 622322, 628381, 622481, 622341, 940058, 623115, 621258, 621465, 621528, 622328, 940062, 625288, 623038, 625888, 622332, 940063, 623123, 622138, 621066, 621560, 621068, 620088, 621067, 622531, 622329, 623103, 622339, 620500, 621024, 622289, 622389, 628300, 625516, 621516, 622859, 622869, 623075, 622895, 623125, 622947, 621561, 623095, 621073, 623109, 621361, 623033, 623207, 622891, 621363, 623189, 623510, 622995, 621053, 621230, 621229, 622218, 628267, 621392, 621481, 621310, 621396, 623251, 628351, 627066,627066,627067,627068,627069,412962,412963,415752,415753,622535,622536,622538,622539,622983,998800); // &quot;发卡行.卡种名称&quot;, public static $bankName = array( &quot;邮储银行·绿卡通&quot;, &quot;邮储银行·绿卡银联标准卡&quot;, &quot;邮储银行·绿卡银联标准卡&quot;, &quot;邮储银行·绿卡专用卡&quot;, &quot;邮储银行·绿卡银联标准卡&quot;, &quot;邮储银行·绿卡(银联卡)&quot;, &quot;邮储银行·绿卡VIP卡&quot;, &quot;邮储银行·银联标准卡&quot;, &quot;邮储银行·中职学生资助卡&quot;, &quot;邮政储蓄银行·IC绿卡通VIP卡&quot;, &quot;邮政储蓄银行·IC绿卡通&quot;, &quot;邮政储蓄银行·IC联名卡&quot;, &quot;邮政储蓄银行·IC预付费卡&quot;, &quot;邮储银行·绿卡银联标准卡&quot;, &quot;邮储银行·绿卡通&quot;, &quot;邮政储蓄银行·武警军人保障卡&quot;, &quot;邮政储蓄银行·中国旅游卡（金卡）&quot;, &quot;邮政储蓄银行·普通高中学生资助卡&quot;, &quot;邮政储蓄银行·中国旅游卡（普卡）&quot;, &quot;邮政储蓄银行·福农卡&quot;, &quot;工商银行·牡丹运通卡金卡&quot;, &quot;工商银行·牡丹运通卡金卡&quot;, &quot;工商银行·牡丹运通卡金卡&quot;, &quot;工商银行·牡丹VISA卡(单位卡)&quot;, &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·牡丹VISA卡(单位卡)&quot;, &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·牡丹运通卡普通卡&quot;, &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·牡丹VISA白金卡&quot;, &quot;工商银行·牡丹贷记卡(银联卡)&quot;, &quot;工商银行·牡丹贷记卡(银联卡)&quot;, &quot;工商银行·牡丹贷记卡(银联卡)&quot;, &quot;工商银行·牡丹贷记卡(银联卡)&quot;, &quot;工商银行·牡丹欧元卡&quot;, &quot;工商银行·牡丹欧元卡&quot;, &quot;工商银行·牡丹欧元卡&quot;, &quot;工商银行·牡丹万事达国际借记卡&quot;, &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·海航信用卡&quot;, &quot;工商银行·牡丹VISA信用卡&quot;, &quot;工商银行·牡丹万事达信用卡&quot;, &quot;工商银行·牡丹万事达信用卡&quot;, &quot;工商银行·牡丹万事达信用卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹万事达白金卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·海航信用卡个人普卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·E时代卡&quot;, &quot;工商银行·E时代卡&quot;, &quot;工商银行·理财金卡&quot;, &quot;工商银行·准贷记卡(个普)&quot;, &quot;工商银行·准贷记卡(个普)&quot;, &quot;工商银行·准贷记卡(个普)&quot;, &quot;工商银行·准贷记卡(个普)&quot;, &quot;工商银行·准贷记卡(个普)&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·准贷记卡(商普)&quot;, &quot;工商银行·牡丹卡(商务卡)&quot;, &quot;工商银行·准贷记卡(商金)&quot;, &quot;工商银行·牡丹卡(商务卡)&quot;, &quot;工商银行·贷记卡(个普)&quot;, &quot;工商银行·牡丹卡(个人卡)&quot;, &quot;工商银行·牡丹卡(个人卡)&quot;, &quot;工商银行·牡丹卡(个人卡)&quot;, &quot;工商银行·牡丹卡(个人卡)&quot;, &quot;工商银行·贷记卡(个金)&quot;, &quot;工商银行·牡丹交通卡&quot;, &quot;工商银行·准贷记卡(个金)&quot;, &quot;工商银行·牡丹交通卡&quot;, &quot;工商银行·贷记卡(商普)&quot;, &quot;工商银行·贷记卡(商金)&quot;, &quot;工商银行·牡丹卡(商务卡)&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹交通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·牡丹贷记卡&quot;, &quot;工商银行·牡丹贷记卡&quot;, &quot;工商银行·牡丹贷记卡&quot;, &quot;工商银行·牡丹贷记卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·中央预算单位公务卡&quot;, &quot;工商银行·牡丹灵通卡&quot;, &quot;工商银行·财政预算单位公务卡&quot;, &quot;工商银行·牡丹卡白金卡&quot;, &quot;工商银行·牡丹卡普卡&quot;, &quot;工商银行·国航知音牡丹信用卡&quot;, &quot;工商银行·国航知音牡丹信用卡&quot;, &quot;工商银行·国航知音牡丹信用卡&quot;, &quot;工商银行·国航知音牡丹信用卡&quot;, &quot;工商银行·银联标准卡&quot;, &quot;工商银行·中职学生资助卡&quot;, &quot;工商银行·专用信用消费卡&quot;, &quot;工商银行·牡丹社会保障卡&quot;, &quot;中国工商银行·牡丹东航联名卡&quot;, &quot;中国工商银行·牡丹东航联名卡&quot;, &quot;中国工商银行·牡丹运通白金卡&quot;, &quot;中国工商银行·福农灵通卡&quot;, &quot;中国工商银行·福农灵通卡&quot;, &quot;工商银行·灵通卡&quot;, &quot;工商银行·灵通卡&quot;, &quot;中国工商银行·中国旅行卡&quot;, &quot;工商银行·牡丹卡普卡&quot;, &quot;工商银行·国际借记卡&quot;, &quot;工商银行·国际借记卡&quot;, &quot;工商银行·国际借记卡&quot;, &quot;工商银行·国际借记卡&quot;, &quot;中国工商银行·牡丹JCB信用卡&quot;, &quot;中国工商银行·牡丹JCB信用卡&quot;, &quot;中国工商银行·牡丹JCB信用卡&quot;, &quot;中国工商银行·牡丹JCB信用卡&quot;, &quot;中国工商银行·牡丹多币种卡&quot;, &quot;中国工商银行·武警军人保障卡&quot;, &quot;工商银行·预付芯片卡&quot;, &quot;工商银行·理财金账户金卡&quot;, &quot;工商银行·灵通卡&quot;, &quot;工商银行·牡丹宁波市民卡&quot;, &quot;中国工商银行·中国旅游卡&quot;, &quot;中国工商银行·中国旅游卡&quot;, &quot;中国工商银行·中国旅游卡&quot;, &quot;中国工商银行·借记卡&quot;, &quot;中国工商银行·借贷合一卡&quot;, &quot;中国工商银行·普通高中学生资助卡&quot;, &quot;中国工商银行·牡丹多币种卡&quot;, &quot;中国工商银行·牡丹多币种卡&quot;, &quot;中国工商银行·牡丹百夫长信用卡&quot;, &quot;中国工商银行·牡丹百夫长信用卡&quot;, &quot;工商银行·工银财富卡&quot;, &quot;中国工商银行·中小商户采购卡&quot;, &quot;中国工商银行·中小商户采购卡&quot;, &quot;中国工商银行·环球旅行金卡&quot;, &quot;中国工商银行·环球旅行白金卡&quot;, &quot;中国工商银行·牡丹工银大来卡&quot;, &quot;中国工商银行·牡丹工银大莱卡&quot;, &quot;中国工商银行·IC金卡&quot;, &quot;中国工商银行·IC白金卡&quot;, &quot;中国工商银行·工行IC卡（红卡）&quot;, &quot;中国工商银行布鲁塞尔分行·借记卡&quot;, &quot;中国工商银行布鲁塞尔分行·预付卡&quot;, &quot;中国工商银行布鲁塞尔分行·预付卡&quot;, &quot;中国工商银行金边分行·借记卡&quot;, &quot;中国工商银行金边分行·信用卡&quot;, &quot;中国工商银行金边分行·借记卡&quot;, &quot;中国工商银行金边分行·信用卡&quot;, &quot;中国工商银行加拿大分行·借记卡&quot;, &quot;中国工商银行加拿大分行·借记卡&quot;, &quot;中国工商银行加拿大分行·预付卡&quot;, &quot;中国工商银行巴黎分行·借记卡&quot;, &quot;中国工商银行巴黎分行·借记卡&quot;, &quot;中国工商银行巴黎分行·贷记卡&quot;, &quot;中国工商银行法兰克福分行·贷记卡&quot;, &quot;中国工商银行法兰克福分行·借记卡&quot;, &quot;中国工商银行法兰克福分行·贷记卡&quot;, &quot;中国工商银行法兰克福分行·贷记卡&quot;, &quot;中国工商银行法兰克福分行·借记卡&quot;, &quot;中国工商银行法兰克福分行·预付卡&quot;, &quot;中国工商银行法兰克福分行·预付卡&quot;, &quot;中国工商银行印尼分行·借记卡&quot;, &quot;中国工商银行印尼分行·信用卡&quot;, &quot;中国工商银行米兰分行·借记卡&quot;, &quot;中国工商银行米兰分行·预付卡&quot;, &quot;中国工商银行米兰分行·预付卡&quot;, &quot;中国工商银行阿拉木图子行·借记卡&quot;, &quot;中国工商银行阿拉木图子行·贷记卡&quot;, &quot;中国工商银行阿拉木图子行·借记卡&quot;, &quot;中国工商银行阿拉木图子行·预付卡&quot;, &quot;中国工商银行万象分行·借记卡&quot;, &quot;中国工商银行万象分行·贷记卡&quot;, &quot;中国工商银行卢森堡分行·借记卡&quot;, &quot;中国工商银行卢森堡分行·贷记卡&quot;, &quot;中国工商银行澳门分行·E时代卡&quot;, &quot;中国工商银行澳门分行·E时代卡&quot;, &quot;中国工商银行澳门分行·E时代卡&quot;, &quot;中国工商银行澳门分行·理财金账户&quot;, &quot;中国工商银行澳门分行·理财金账户&quot;, &quot;中国工商银行澳门分行·理财金账户&quot;, &quot;中国工商银行澳门分行·预付卡&quot;, &quot;中国工商银行澳门分行·预付卡&quot;, &quot;中国工商银行澳门分行·工银闪付预付卡&quot;, &quot;中国工商银行澳门分行·工银银联公司卡&quot;, &quot;中国工商银行澳门分行·Diamond&quot;, &quot;中国工商银行阿姆斯特丹·借记卡&quot;, &quot;中国工商银行卡拉奇分行·借记卡&quot;, &quot;中国工商银行卡拉奇分行·贷记卡&quot;, &quot;中国工商银行新加坡分行·贷记卡&quot;, &quot;中国工商银行新加坡分行·贷记卡&quot;, &quot;中国工商银行新加坡分行·借记卡&quot;, &quot;中国工商银行新加坡分行·预付卡&quot;, &quot;中国工商银行新加坡分行·预付卡&quot;, &quot;中国工商银行新加坡分行·借记卡&quot;, &quot;中国工商银行新加坡分行·借记卡&quot;, &quot;中国工商银行马德里分行·借记卡&quot;, &quot;中国工商银行马德里分行·借记卡&quot;, &quot;中国工商银行马德里分行·预付卡&quot;, &quot;中国工商银行马德里分行·预付卡&quot;, &quot;中国工商银行伦敦子行·借记卡&quot;, &quot;中国工商银行伦敦子行·工银伦敦借记卡&quot;, &quot;中国工商银行伦敦子行·借记卡&quot;, &quot;农业银行·金穗贷记卡&quot;, &quot;农业银行·中国旅游卡&quot;, &quot;农业银行·普通高中学生资助卡&quot;, &quot;农业银行·银联标准卡&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·VISA白金卡&quot;, &quot;农业银行·万事达白金卡&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡(银联卡)&quot;, &quot;农业银行·金穗贷记卡&quot;, &quot;农业银行·中职学生资助卡&quot;, &quot;农业银行·专用惠农卡&quot;, &quot;农业银行·武警军人保障卡&quot;, &quot;农业银行·金穗校园卡(银联卡)&quot;, &quot;农业银行·金穗星座卡(银联卡)&quot;, &quot;农业银行·金穗社保卡(银联卡)&quot;, &quot;农业银行·金穗旅游卡(银联卡)&quot;, &quot;农业银行·金穗青年卡(银联卡)&quot;, &quot;农业银行·复合介质金穗通宝卡&quot;, &quot;农业银行·金穗海通卡&quot;, &quot;农业银行·退役金卡&quot;, &quot;农业银行·金穗贷记卡&quot;, &quot;农业银行·金穗贷记卡&quot;, &quot;农业银行·金穗通宝卡(银联卡)&quot;, &quot;农业银行·金穗惠农卡&quot;, &quot;农业银行·金穗通宝银卡&quot;, &quot;农业银行·金穗通宝卡(银联卡)&quot;, &quot;农业银行·金穗通宝卡(银联卡)&quot;, &quot;农业银行·金穗通宝卡&quot;, &quot;农业银行·金穗通宝卡(银联卡)&quot;, &quot;农业银行·金穗通宝卡(银联卡)&quot;, &quot;农业银行·金穗通宝钻石卡&quot;, &quot;农业银行·掌尚钱包&quot;, &quot;农业银行·银联IC卡金卡&quot;, &quot;农业银行·银联预算单位公务卡金卡&quot;, &quot;农业银行·银联IC卡白金卡&quot;, &quot;农业银行·金穗公务卡&quot;, &quot;中国农业银行贷记卡·IC普卡&quot;, &quot;中国农业银行贷记卡·IC金卡&quot;, &quot;中国农业银行贷记卡·澳元卡&quot;, &quot;中国农业银行贷记卡·欧元卡&quot;, &quot;中国农业银行贷记卡·金穗通商卡&quot;, &quot;中国农业银行贷记卡·金穗通商卡&quot;, &quot;中国农业银行贷记卡·银联白金卡&quot;, &quot;中国农业银行贷记卡·中国旅游卡&quot;, &quot;中国农业银行贷记卡·银联IC公务卡&quot;, &quot;宁波市农业银行·市民卡B卡&quot;, &quot;中国银行·联名卡&quot;, &quot;中国银行·个人普卡&quot;, &quot;中国银行·个人金卡&quot;, &quot;中国银行·员工普卡&quot;, &quot;中国银行·员工金卡&quot;, &quot;中国银行·理财普卡&quot;, &quot;中国银行·理财金卡&quot;, &quot;中国银行·理财银卡&quot;, &quot;中国银行·理财白金卡&quot;, &quot;中国银行·中行金融IC卡白金卡&quot;, &quot;中国银行·中行金融IC卡普卡&quot;, &quot;中国银行·中行金融IC卡金卡&quot;, &quot;中国银行·中银JCB卡金卡&quot;, &quot;中国银行·中银JCB卡普卡&quot;, &quot;中国银行·员工普卡&quot;, &quot;中国银行·个人普卡&quot;, &quot;中国银行·中银威士信用卡员&quot;, &quot;中国银行·中银威士信用卡员&quot;, &quot;中国银行·个人白金卡&quot;, &quot;中国银行·中银威士信用卡&quot;, &quot;中国银行·长城公务卡&quot;, &quot;中国银行·长城电子借记卡&quot;, &quot;中国银行·中银万事达信用卡&quot;, &quot;中国银行·中银万事达信用卡&quot;, &quot;中国银行·中银万事达信用卡&quot;, &quot;中国银行·中银万事达信用卡&quot;, &quot;中国银行·中银万事达信用卡&quot;, &quot;中国银行·中银威士信用卡员&quot;, &quot;中国银行·长城万事达信用卡&quot;, &quot;中国银行·长城万事达信用卡&quot;, &quot;中国银行·长城万事达信用卡&quot;, &quot;中国银行·长城万事达信用卡&quot;, &quot;中国银行·长城万事达信用卡&quot;, &quot;中国银行·中银奥运信用卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·长城万事达信用卡&quot;, &quot;中国银行·长城公务卡&quot;, &quot;中国银行·长城公务卡&quot;, &quot;中国银行·中银万事达信用卡&quot;, &quot;中国银行·中银万事达信用卡&quot;, &quot;中国银行·长城人民币信用卡&quot;, &quot;中国银行·长城人民币信用卡&quot;, &quot;中国银行·长城人民币信用卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·长城人民币信用卡&quot;, &quot;中国银行·长城人民币信用卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·银联单币贷记卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·长城信用卡&quot;, &quot;中国银行·长城电子借记卡&quot;, &quot;中国银行·长城人民币信用卡&quot;, &quot;中国银行·银联标准公务卡&quot;, &quot;中国银行·一卡双账户普卡&quot;, &quot;中国银行·财互通卡&quot;, &quot;中国银行·电子现金卡&quot;, &quot;中国银行·长城人民币信用卡&quot;, &quot;中国银行·长城单位信用卡普卡&quot;, &quot;中国银行·中银女性主题信用卡&quot;, &quot;中国银行·长城单位信用卡金卡&quot;, &quot;中国银行·白金卡&quot;, &quot;中国银行·中职学生资助卡&quot;, &quot;中国银行·银联标准卡&quot;, &quot;中国银行·金融IC卡&quot;, &quot;中国银行·长城社会保障卡&quot;, &quot;中国银行·世界卡&quot;, &quot;中国银行·社保联名卡&quot;, &quot;中国银行·社保联名卡&quot;, &quot;中国银行·医保联名卡&quot;, &quot;中国银行·医保联名卡&quot;, &quot;中国银行·公司借记卡&quot;, &quot;中国银行·银联美运顶级卡&quot;, &quot;中国银行·长城福农借记卡金卡&quot;, &quot;中国银行·长城福农借记卡普卡&quot;, &quot;中国银行·中行金融IC卡普卡&quot;, &quot;中国银行·中行金融IC卡金卡&quot;, &quot;中国银行·中行金融IC卡白金卡&quot;, &quot;中国银行·长城银联公务IC卡白金卡&quot;, &quot;中国银行·中银旅游信用卡&quot;, &quot;中国银行·长城银联公务IC卡金卡&quot;, &quot;中国银行·中国旅游卡&quot;, &quot;中国银行·武警军人保障卡&quot;, &quot;中国银行·社保联名借记IC卡&quot;, &quot;中国银行·社保联名借记IC卡&quot;, &quot;中国银行·医保联名借记IC卡&quot;, &quot;中国银行·医保联名借记IC卡&quot;, &quot;中国银行·借记IC个人普卡&quot;, &quot;中国银行·借记IC个人金卡&quot;, &quot;中国银行·借记IC个人普卡&quot;, &quot;中国银行·借记IC白金卡&quot;, &quot;中国银行·借记IC钻石卡&quot;, &quot;中国银行·借记IC联名卡&quot;, &quot;中国银行·普通高中学生资助卡&quot;, &quot;中国银行·长城环球通港澳台旅游金卡&quot;, &quot;中国银行·长城环球通港澳台旅游白金卡&quot;, &quot;中国银行·中银福农信用卡&quot;, &quot;中国银行金边分行·借记卡&quot;, &quot;中国银行雅加达分行·借记卡&quot;, &quot;中国银行首尔分行·借记卡&quot;, &quot;中国银行澳门分行·人民币信用卡&quot;, &quot;中国银行澳门分行·人民币信用卡&quot;, &quot;中国银行澳门分行·中银卡&quot;, &quot;中国银行澳门分行·中银卡&quot;, &quot;中国银行澳门分行·中银卡&quot;, &quot;中国银行澳门分行·中银银联双币商务卡&quot;, &quot;中国银行澳门分行·预付卡&quot;, &quot;中国银行澳门分行·澳门中国银行银联预付卡&quot;, &quot;中国银行澳门分行·澳门中国银行银联预付卡&quot;, &quot;中国银行澳门分行·熊猫卡&quot;, &quot;中国银行澳门分行·财富卡&quot;, &quot;中国银行澳门分行·银联港币卡&quot;, &quot;中国银行澳门分行·银联澳门币卡&quot;, &quot;中国银行马尼拉分行·双币种借记卡&quot;, &quot;中国银行胡志明分行·借记卡&quot;, &quot;中国银行曼谷分行·借记卡&quot;, &quot;中国银行曼谷分行·长城信用卡环球通&quot;, &quot;中国银行曼谷分行·借记卡&quot;, &quot;建设银行·龙卡准贷记卡&quot;, &quot;建设银行·龙卡准贷记卡金卡&quot;, &quot;建设银行·中职学生资助卡&quot;, &quot;建设银行·乐当家银卡VISA&quot;, &quot;建设银行·乐当家金卡VISA&quot;, &quot;建设银行·乐当家白金卡&quot;, &quot;建设银行·龙卡普通卡VISA&quot;, &quot;建设银行·龙卡储蓄卡&quot;, &quot;建设银行·VISA准贷记卡(银联卡)&quot;, &quot;建设银行·VISA准贷记金卡&quot;, &quot;建设银行·乐当家&quot;, &quot;建设银行·乐当家&quot;, &quot;建设银行·准贷记金卡&quot;, &quot;建设银行·乐当家白金卡&quot;, &quot;建设银行·金融复合IC卡&quot;, &quot;建设银行·银联标准卡&quot;, &quot;建设银行·银联理财钻石卡&quot;, &quot;建设银行·金融IC卡&quot;, &quot;建设银行·理财白金卡&quot;, &quot;建设银行·社保IC卡&quot;, &quot;建设银行·财富卡私人银行卡&quot;, &quot;建设银行·理财金卡&quot;, &quot;建设银行·福农卡&quot;, &quot;建设银行·武警军人保障卡&quot;, &quot;建设银行·龙卡通&quot;, &quot;建设银行·银联储蓄卡&quot;, &quot;建设银行·龙卡储蓄卡(银联卡)&quot;, &quot;建设银行·准贷记卡&quot;, &quot;建设银行·理财白金卡&quot;, &quot;建设银行·理财金卡&quot;, &quot;建设银行·准贷记卡普卡&quot;, &quot;建设银行·准贷记卡金卡&quot;, &quot;建设银行·龙卡信用卡&quot;, &quot;建设银行·建行陆港通龙卡&quot;, &quot;中国建设银行·普通高中学生资助卡&quot;, &quot;中国建设银行·中国旅游卡&quot;, &quot;中国建设银行·龙卡JCB金卡&quot;, &quot;中国建设银行·龙卡JCB白金卡&quot;, &quot;中国建设银行·龙卡JCB普卡&quot;, &quot;中国建设银行·龙卡贷记卡公司卡&quot;, &quot;中国建设银行·龙卡贷记卡&quot;, &quot;中国建设银行·龙卡国际普通卡VISA&quot;, &quot;中国建设银行·龙卡国际金卡VISA&quot;, &quot;中国建设银行·VISA白金信用卡&quot;, &quot;中国建设银行·龙卡国际白金卡&quot;, &quot;中国建设银行·龙卡国际普通卡MASTER&quot;, &quot;中国建设银行·龙卡国际金卡MASTER&quot;, &quot;中国建设银行·龙卡万事达金卡&quot;, &quot;中国建设银行·龙卡贷记卡&quot;, &quot;中国建设银行·龙卡万事达白金卡&quot;, &quot;中国建设银行·龙卡贷记卡&quot;, &quot;中国建设银行·龙卡万事达信用卡&quot;, &quot;中国建设银行·龙卡人民币信用卡&quot;, &quot;中国建设银行·龙卡人民币信用金卡&quot;, &quot;中国建设银行·龙卡人民币白金卡&quot;, &quot;中国建设银行·龙卡IC信用卡普卡&quot;, &quot;中国建设银行·龙卡IC信用卡金卡&quot;, &quot;中国建设银行·龙卡IC信用卡白金卡&quot;, &quot;中国建设银行·龙卡银联公务卡普卡&quot;, &quot;中国建设银行·龙卡银联公务卡金卡&quot;, &quot;中国建设银行·中国旅游卡&quot;, &quot;中国建设银行·中国旅游卡&quot;, &quot;中国建设银行·龙卡IC公务卡&quot;, &quot;中国建设银行·龙卡IC公务卡&quot;, &quot;交通银行·交行预付卡&quot;, &quot;交通银行·世博预付IC卡&quot;, &quot;交通银行·太平洋互连卡&quot;, &quot;交通银行·太平洋万事顺卡&quot;, &quot;交通银行·太平洋互连卡(银联卡)&quot;, &quot;交通银行·太平洋白金信用卡&quot;, &quot;交通银行·太平洋双币贷记卡&quot;, &quot;交通银行·太平洋双币贷记卡&quot;, &quot;交通银行·太平洋双币贷记卡&quot;, &quot;交通银行·太平洋白金信用卡&quot;, &quot;交通银行·太平洋双币贷记卡&quot;, &quot;交通银行·太平洋万事顺卡&quot;, &quot;交通银行·太平洋人民币贷记卡&quot;, &quot;交通银行·太平洋人民币贷记卡&quot;, &quot;交通银行·太平洋双币贷记卡&quot;, &quot;交通银行·太平洋准贷记卡&quot;, &quot;交通银行·太平洋准贷记卡&quot;, &quot;交通银行·太平洋准贷记卡&quot;, &quot;交通银行·太平洋准贷记卡&quot;, &quot;交通银行·太平洋借记卡&quot;, &quot;交通银行·太平洋借记卡&quot;, &quot;交通银行·太平洋人民币贷记卡&quot;, &quot;交通银行·太平洋借记卡&quot;, &quot;交通银行·太平洋MORE卡&quot;, &quot;交通银行·白金卡&quot;, &quot;交通银行·交通银行公务卡普卡&quot;, &quot;交通银行·太平洋人民币贷记卡&quot;, &quot;交通银行·太平洋互连卡&quot;, &quot;交通银行·太平洋借记卡&quot;, &quot;交通银行·太平洋万事顺卡&quot;, &quot;交通银行·太平洋贷记卡(银联卡)&quot;, &quot;交通银行·太平洋贷记卡(银联卡)&quot;, &quot;交通银行·太平洋贷记卡(银联卡)&quot;, &quot;交通银行·太平洋贷记卡(银联卡)&quot;, &quot;交通银行·交通银行公务卡金卡&quot;, &quot;交通银行·交银IC卡&quot;, &quot;交通银行香港分行·交通银行港币借记卡&quot;, &quot;交通银行香港分行·港币礼物卡&quot;, &quot;交通银行香港分行·双币种信用卡&quot;, &quot;交通银行香港分行·双币种信用卡&quot;, &quot;交通银行香港分行·双币卡&quot;, &quot;交通银行香港分行·银联人民币卡&quot;, &quot;交通银行澳门分行·银联借记卡&quot;, &quot;中信银行·中信借记卡&quot;, &quot;中信银行·中信借记卡&quot;, &quot;中信银行·中信国际借记卡&quot;, &quot;中信银行·中信国际借记卡&quot;, &quot;中信银行·中国旅行卡&quot;, &quot;中信银行·中信借记卡(银联卡)&quot;, &quot;中信银行·中信借记卡(银联卡)&quot;, &quot;中信银行·中信贵宾卡(银联卡)&quot;, &quot;中信银行·中信理财宝金卡&quot;, &quot;中信银行·中信理财宝白金卡&quot;, &quot;中信银行·中信钻石卡&quot;, &quot;中信银行·中信钻石卡&quot;, &quot;中信银行·中信借记卡&quot;, &quot;中信银行·中信理财宝(银联卡)&quot;, &quot;中信银行·中信理财宝(银联卡)&quot;, &quot;中信银行·中信理财宝(银联卡)&quot;, &quot;中信银行·借记卡&quot;, &quot;中信银行·理财宝IC卡&quot;, &quot;中信银行·理财宝IC卡&quot;, &quot;中信银行·理财宝IC卡&quot;, &quot;中信银行·理财宝IC卡&quot;, &quot;中信银行·理财宝IC卡&quot;, &quot;中信银行·主账户复合电子现金卡&quot;, &quot;光大银行·阳光商旅信用卡&quot;, &quot;光大银行·阳光商旅信用卡&quot;, &quot;光大银行·阳光商旅信用卡&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·阳光卡(银联卡)&quot;, &quot;光大银行·借记卡普卡&quot;, &quot;光大银行·社会保障IC卡&quot;, &quot;光大银行·IC借记卡普卡&quot;, &quot;光大银行·手机支付卡&quot;, &quot;光大银行·联名IC卡普卡&quot;, &quot;光大银行·借记IC卡白金卡&quot;, &quot;光大银行·借记IC卡金卡&quot;, &quot;光大银行·阳光旅行卡&quot;, &quot;光大银行·借记IC卡钻石卡&quot;, &quot;光大银行·联名IC卡金卡&quot;, &quot;光大银行·联名IC卡白金卡&quot;, &quot;光大银行·联名IC卡钻石卡&quot;, &quot;华夏银行·华夏卡(银联卡)&quot;, &quot;华夏银行·华夏白金卡&quot;, &quot;华夏银行·华夏普卡&quot;, &quot;华夏银行·华夏金卡&quot;, &quot;华夏银行·华夏白金卡&quot;, &quot;华夏银行·华夏钻石卡&quot;, &quot;华夏银行·华夏卡(银联卡)&quot;, &quot;华夏银行·华夏至尊金卡(银联卡)&quot;, &quot;华夏银行·华夏丽人卡(银联卡)&quot;, &quot;华夏银行·华夏万通卡&quot;, &quot;民生银行·民生借记卡(银联卡)&quot;, &quot;民生银行·民生银联借记卡－金卡&quot;, &quot;民生银行·钻石卡&quot;, &quot;民生银行·民生借记卡(银联卡)&quot;, &quot;民生银行·民生借记卡(银联卡)&quot;, &quot;民生银行·民生借记卡(银联卡)&quot;, &quot;民生银行·民生借记卡&quot;, &quot;民生银行·民生国际卡&quot;, &quot;民生银行·民生国际卡(银卡)&quot;, &quot;民生银行·民生国际卡(欧元卡)&quot;, &quot;民生银行·民生国际卡(澳元卡)&quot;, &quot;民生银行·民生国际卡&quot;, &quot;民生银行·民生国际卡&quot;, &quot;民生银行·薪资理财卡&quot;, &quot;民生银行·借记卡普卡&quot;, &quot;民生银行·民生MasterCard&quot;, &quot;民生银行·民生MasterCard&quot;, &quot;民生银行·民生MasterCard&quot;, &quot;民生银行·民生MasterCard&quot;, &quot;民生银行·民生JCB信用卡&quot;, &quot;民生银行·民生JCB金卡&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生JCB普卡&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生信用卡(银联卡)&quot;, &quot;民生银行·民生信用卡(银联卡)&quot;, &quot;民生银行·民生银联白金信用卡&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生银联个人白金卡&quot;, &quot;民生银行·公务卡金卡&quot;, &quot;民生银行·民生贷记卡(银联卡)&quot;, &quot;民生银行·民生银联商务信用卡&quot;, &quot;民生银行·民VISA无限卡&quot;, &quot;民生银行·民生VISA商务白金卡&quot;, &quot;民生银行·民生万事达钛金卡&quot;, &quot;民生银行·民生万事达世界卡&quot;, &quot;民生银行·民生万事达白金公务卡&quot;, &quot;民生银行·民生JCB白金卡&quot;, &quot;民生银行·银联标准金卡&quot;, &quot;民生银行·银联芯片普卡&quot;, &quot;民生银行·民生运通双币信用卡普卡&quot;, &quot;民生银行·民生运通双币信用卡金卡&quot;, &quot;民生银行·民生运通双币信用卡钻石卡&quot;, &quot;民生银行·民生运通双币标准信用卡白金卡&quot;, &quot;民生银行·银联芯片金卡&quot;, &quot;民生银行·银联芯片白金卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·两地一卡通&quot;, &quot;招商银行·招行国际卡(银联卡)&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·VISA商务信用卡&quot;, &quot;招商银行·招行国际卡(银联卡)&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招行国际卡(银联卡)&quot;, &quot;招商银行·世纪金花联名信用卡&quot;, &quot;招商银行·招行国际卡(银联卡)&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·万事达信用卡&quot;, &quot;招商银行·万事达信用卡&quot;, &quot;招商银行·万事达信用卡&quot;, &quot;招商银行·万事达信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·一卡通(银联卡)&quot;, &quot;招商银行·万事达信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行·一卡通(银联卡)&quot;, &quot;招商银行·公司卡(银联卡)&quot;, &quot;招商银行·金卡&quot;, &quot;招商银行·招行一卡通&quot;, &quot;招商银行·招行一卡通&quot;, &quot;招商银行·万事达信用卡&quot;, &quot;招商银行·金葵花卡&quot;, &quot;招商银行·电子现金卡&quot;, &quot;招商银行·银联IC普卡&quot;, &quot;招商银行·银联IC金卡&quot;, &quot;招商银行·银联金葵花IC卡&quot;, &quot;招商银行·IC公务卡&quot;, &quot;招商银行·招商银行信用卡&quot;, &quot;招商银行信用卡中心·美国运通绿卡&quot;, &quot;招商银行信用卡中心·美国运通金卡&quot;, &quot;招商银行信用卡中心·美国运通商务绿卡&quot;, &quot;招商银行信用卡中心·美国运通商务金卡&quot;, &quot;招商银行信用卡中心·VISA信用卡&quot;, &quot;招商银行信用卡中心·MASTER信用卡&quot;, &quot;招商银行信用卡中心·MASTER信用金卡&quot;, &quot;招商银行信用卡中心·银联标准公务卡(金卡)&quot;, &quot;招商银行信用卡中心·VISA信用卡&quot;, &quot;招商银行信用卡中心·银联标准财政公务卡&quot;, &quot;招商银行信用卡中心·芯片IC信用卡&quot;, &quot;招商银行信用卡中心·芯片IC信用卡&quot;, &quot;招商银行香港分行·香港一卡通&quot;, &quot;兴业银行·兴业卡(银联卡)&quot;, &quot;兴业银行·兴业卡(银联标准卡)&quot;, &quot;兴业银行·兴业自然人生理财卡&quot;, &quot;兴业银行·兴业智能卡(银联卡)&quot;, &quot;兴业银行·兴业智能卡&quot;, &quot;兴业银行·visa标准双币个人普卡&quot;, &quot;兴业银行·VISA商务普卡&quot;, &quot;兴业银行·VISA商务金卡&quot;, &quot;兴业银行·VISA运动白金信用卡&quot;, &quot;兴业银行·万事达信用卡(银联卡)&quot;, &quot;兴业银行·VISA信用卡(银联卡)&quot;, &quot;兴业银行·加菲猫信用卡&quot;, &quot;兴业银行·个人白金卡&quot;, &quot;兴业银行·银联信用卡(银联卡)&quot;, &quot;兴业银行·银联信用卡(银联卡)&quot;, &quot;兴业银行·银联白金信用卡&quot;, &quot;兴业银行·银联标准公务卡&quot;, &quot;兴业银行·VISA信用卡(银联卡)&quot;, &quot;兴业银行·万事达信用卡(银联卡)&quot;, &quot;兴业银行·银联标准贷记普卡&quot;, &quot;兴业银行·银联标准贷记金卡&quot;, &quot;兴业银行·银联标准贷记金卡&quot;, &quot;兴业银行·银联标准贷记金卡&quot;, &quot;兴业银行·兴业信用卡&quot;, &quot;兴业银行·兴业信用卡&quot;, &quot;兴业银行·兴业信用卡&quot;, &quot;兴业银行·银联标准贷记普卡&quot;, &quot;兴业银行·银联标准贷记普卡&quot;, &quot;兴业银行·兴业芯片普卡&quot;, &quot;兴业银行·兴业芯片金卡&quot;, &quot;兴业银行·兴业芯片白金卡&quot;, &quot;兴业银行·兴业芯片钻石卡&quot;, &quot;浦东发展银行·浦发JCB金卡&quot;, &quot;浦东发展银行·浦发JCB白金卡&quot;, &quot;浦东发展银行·信用卡VISA普通&quot;, &quot;浦东发展银行·信用卡VISA金卡&quot;, &quot;浦东发展银行·浦发银行VISA年青卡&quot;, &quot;浦东发展银行·VISA白金信用卡&quot;, &quot;浦东发展银行·浦发万事达白金卡&quot;, &quot;浦东发展银行·浦发JCB普卡&quot;, &quot;浦东发展银行·浦发万事达金卡&quot;, &quot;浦东发展银行·浦发万事达普卡&quot;, &quot;浦东发展银行·浦发单币卡&quot;, &quot;浦东发展银行·浦发银联单币麦兜普卡&quot;, &quot;浦东发展银行·东方轻松理财卡&quot;, &quot;浦东发展银行·东方-轻松理财卡普卡&quot;, &quot;浦东发展银行·东方轻松理财卡&quot;, &quot;浦东发展银行·东方轻松理财智业金卡&quot;, &quot;浦东发展银行·东方卡(银联卡)&quot;, &quot;浦东发展银行·东方卡(银联卡)&quot;, &quot;浦东发展银行·东方卡(银联卡)&quot;, &quot;浦东发展银行·公务卡金卡&quot;, &quot;浦东发展银行·公务卡普卡&quot;, &quot;浦东发展银行·东方卡&quot;, &quot;浦东发展银行·东方卡&quot;, &quot;浦东发展银行·浦发单币卡&quot;, &quot;浦东发展银行·浦发联名信用卡&quot;, &quot;浦东发展银行·浦发银联白金卡&quot;, &quot;浦东发展银行·轻松理财普卡&quot;, &quot;浦东发展银行·移动联名卡&quot;, &quot;浦东发展银行·轻松理财消贷易卡&quot;, &quot;浦东发展银行·轻松理财普卡（复合卡）&quot;, &quot;浦东发展银行·贷记卡&quot;, &quot;浦东发展银行·贷记卡&quot;, &quot;浦东发展银行·东方借记卡（复合卡）&quot;, &quot;浦东发展银行·电子现金卡（IC卡）&quot;, &quot;浦东发展银行·移动浦发联名卡&quot;, &quot;浦东发展银行·东方-标准准贷记卡&quot;, &quot;浦东发展银行·轻松理财金卡（复合卡）&quot;, &quot;浦东发展银行·轻松理财白金卡（复合卡）&quot;, &quot;浦东发展银行·轻松理财钻石卡（复合卡）&quot;, &quot;浦东发展银行·东方卡&quot;, &quot;恒丰银行·九州IC卡&quot;, &quot;恒丰银行·九州借记卡(银联卡)&quot;, &quot;恒丰银行·九州借记卡(银联卡)&quot;, &quot;天津市商业银行·银联卡(银联卡)&quot;, &quot;烟台商业银行·金通卡&quot;, &quot;潍坊银行·鸢都卡(银联卡)&quot;, &quot;潍坊银行·鸳都卡(银联卡)&quot;, &quot;临沂商业银行·沂蒙卡(银联卡)&quot;, &quot;临沂商业银行·沂蒙卡(银联卡)&quot;, &quot;日照市商业银行·黄海卡&quot;, &quot;日照市商业银行·黄海卡(银联卡)&quot;, &quot;浙商银行·商卡&quot;, &quot;浙商银行·商卡&quot;, &quot;渤海银行·浩瀚金卡&quot;, &quot;渤海银行·渤海银行借记卡&quot;, &quot;渤海银行·金融IC卡&quot;, &quot;渤海银行·渤海银行公司借记卡&quot;, &quot;星展银行·星展银行借记卡&quot;, &quot;星展银行·星展银行借记卡&quot;, &quot;恒生银行·恒生通财卡&quot;, &quot;恒生银行·恒生优越通财卡&quot;, &quot;新韩银行·新韩卡&quot;, &quot;上海银行·慧通钻石卡&quot;, &quot;上海银行·慧通金卡&quot;, &quot;上海银行·私人银行卡&quot;, &quot;上海银行·综合保险卡&quot;, &quot;上海银行·申卡社保副卡(有折)&quot;, &quot;上海银行·申卡社保副卡(无折)&quot;, &quot;上海银行·白金IC借记卡&quot;, &quot;上海银行·慧通白金卡(配折)&quot;, &quot;上海银行·慧通白金卡(不配折)&quot;, &quot;上海银行·申卡(银联卡)&quot;, &quot;上海银行·申卡借记卡&quot;, &quot;上海银行·银联申卡(银联卡)&quot;, &quot;上海银行·单位借记卡&quot;, &quot;上海银行·首发纪念版IC卡&quot;, &quot;上海银行·申卡贷记卡&quot;, &quot;上海银行·申卡贷记卡&quot;, &quot;上海银行·J分期付款信用卡&quot;, &quot;上海银行·申卡贷记卡&quot;, &quot;上海银行·申卡贷记卡&quot;, &quot;上海银行·上海申卡IC&quot;, &quot;上海银行·申卡贷记卡&quot;, &quot;上海银行·申卡贷记卡普通卡&quot;, &quot;上海银行·申卡贷记卡金卡&quot;, &quot;上海银行·万事达白金卡&quot;, &quot;上海银行·万事达星运卡&quot;, &quot;上海银行·申卡贷记卡金卡&quot;, &quot;上海银行·申卡贷记卡普通卡&quot;, &quot;上海银行·安融卡&quot;, &quot;上海银行·分期付款信用卡&quot;, &quot;上海银行·信用卡&quot;, &quot;上海银行·个人公务卡&quot;, &quot;上海银行·安融卡&quot;, &quot;上海银行·上海银行银联白金卡&quot;, &quot;上海银行·贷记IC卡&quot;, &quot;上海银行·中国旅游卡（IC普卡）&quot;, &quot;上海银行·中国旅游卡（IC金卡）&quot;, &quot;上海银行·中国旅游卡（IC白金卡）&quot;, &quot;上海银行·万事达钻石卡&quot;, &quot;上海银行·淘宝IC普卡&quot;, &quot;北京银行·京卡借记卡&quot;, &quot;北京银行·京卡(银联卡)&quot;, &quot;北京银行·京卡借记卡&quot;, &quot;北京银行·京卡&quot;, &quot;北京银行·京卡&quot;, &quot;北京银行·借记IC卡&quot;, &quot;北京银行·京卡贵宾金卡&quot;, &quot;北京银行·京卡贵宾白金卡&quot;, &quot;吉林银行·君子兰一卡通(银联卡)&quot;, &quot;吉林银行·君子兰卡(银联卡)&quot;, &quot;吉林银行·长白山金融IC卡&quot;, &quot;吉林银行·信用卡&quot;, &quot;吉林银行·信用卡&quot;, &quot;吉林银行·公务卡&quot;, &quot;镇江市商业银行·金山灵通卡(银联卡)&quot;, &quot;镇江市商业银行·金山灵通卡(银联卡)&quot;, &quot;宁波银行·银联标准卡&quot;, &quot;宁波银行·汇通借记卡&quot;, &quot;宁波银行·汇通卡(银联卡)&quot;, &quot;宁波银行·明州卡&quot;, &quot;宁波银行·汇通借记卡&quot;, &quot;宁波银行·汇通国际卡银联双币卡&quot;, &quot;宁波银行·汇通国际卡银联双币卡&quot;, &quot;平安银行·新磁条借记卡&quot;, &quot;平安银行·平安银行IC借记卡&quot;, &quot;平安银行·万事顺卡&quot;, &quot;平安银行·平安银行借记卡&quot;, &quot;平安银行·平安银行借记卡&quot;, &quot;平安银行·万事顺借记卡&quot;, &quot;焦作市商业银行·月季借记卡(银联卡)&quot;, &quot;焦作市商业银行·月季城市通(银联卡)&quot;, &quot;焦作市商业银行·中国旅游卡&quot;, &quot;温州银行·金鹿卡&quot;, &quot;汉口银行·九通卡(银联卡)&quot;, &quot;汉口银行·九通卡&quot;, &quot;汉口银行·借记卡&quot;, &quot;汉口银行·借记卡&quot;, &quot;盛京银行·玫瑰卡&quot;, &quot;盛京银行·玫瑰IC卡&quot;, &quot;盛京银行·玫瑰IC卡&quot;, &quot;盛京银行·玫瑰卡&quot;, &quot;盛京银行·玫瑰卡&quot;, &quot;盛京银行·玫瑰卡(银联卡)&quot;, &quot;盛京银行·玫瑰卡(银联卡)&quot;, &quot;盛京银行·盛京银行公务卡&quot;, &quot;洛阳银行·都市一卡通(银联卡)&quot;, &quot;洛阳银行·都市一卡通(银联卡)&quot;, &quot;洛阳银行·--&quot;, &quot;大连银行·北方明珠卡&quot;, &quot;大连银行·人民币借记卡&quot;, &quot;大连银行·金融IC借记卡&quot;, &quot;大连银行·大连市社会保障卡&quot;, &quot;大连银行·借记IC卡&quot;, &quot;大连银行·借记IC卡&quot;, &quot;大连银行·大连市商业银行贷记卡&quot;, &quot;大连银行·大连市商业银行贷记卡&quot;, &quot;大连银行·银联标准公务卡&quot;, &quot;苏州市商业银行·姑苏卡&quot;, &quot;杭州商业银行·西湖卡&quot;, &quot;杭州商业银行·西湖卡&quot;, &quot;杭州商业银行·借记IC卡&quot;, &quot;杭州商业银行·&quot;, &quot;南京银行·梅花信用卡公务卡&quot;, &quot;南京银行·梅花信用卡商务卡&quot;, &quot;南京银行·梅花贷记卡(银联卡)&quot;, &quot;南京银行·梅花借记卡(银联卡)&quot;, &quot;南京银行·白金卡&quot;, &quot;南京银行·商务卡&quot;, &quot;东莞市商业银行·万顺通卡(银联卡)&quot;, &quot;东莞市商业银行·万顺通卡(银联卡)&quot;, &quot;东莞市商业银行·万顺通借记卡&quot;, &quot;东莞市商业银行·社会保障卡&quot;, &quot;乌鲁木齐市商业银行·雪莲借记IC卡&quot;, &quot;乌鲁木齐市商业银行·乌鲁木齐市公务卡&quot;, &quot;乌鲁木齐市商业银行·福农卡贷记卡&quot;, &quot;乌鲁木齐市商业银行·福农卡准贷记卡&quot;, &quot;乌鲁木齐市商业银行·雪莲准贷记卡&quot;, &quot;乌鲁木齐市商业银行·雪莲贷记卡(银联卡)&quot;, &quot;乌鲁木齐市商业银行·雪莲借记IC卡&quot;, &quot;乌鲁木齐市商业银行·雪莲借记卡(银联卡)&quot;, &quot;乌鲁木齐市商业银行·雪莲卡(银联卡)&quot;, &quot;绍兴银行·兰花IC借记卡&quot;, &quot;绍兴银行·社保IC借记卡&quot;, &quot;绍兴银行·兰花公务卡&quot;, &quot;成都商业银行·芙蓉锦程福农卡&quot;, &quot;成都商业银行·芙蓉锦程天府通卡&quot;, &quot;成都商业银行·锦程卡(银联卡)&quot;, &quot;成都商业银行·锦程卡金卡&quot;, &quot;成都商业银行·锦程卡定活一卡通金卡&quot;, &quot;成都商业银行·锦程卡定活一卡通&quot;, &quot;成都商业银行·锦程力诚联名卡&quot;, &quot;成都商业银行·锦程力诚联名卡&quot;, &quot;成都商业银行·锦程卡(银联卡)&quot;, &quot;抚顺银行·借记IC卡&quot;, &quot;临商银行·借记卡&quot;, &quot;宜昌市商业银行·三峡卡(银联卡)&quot;, &quot;宜昌市商业银行·信用卡(银联卡)&quot;, &quot;葫芦岛市商业银行·一通卡&quot;, &quot;葫芦岛市商业银行·一卡通(银联卡)&quot;, &quot;天津市商业银行·津卡&quot;, &quot;天津市商业银行·津卡贷记卡(银联卡)&quot;, &quot;天津市商业银行·贷记IC卡&quot;, &quot;天津市商业银行·--&quot;, &quot;天津银行·商务卡&quot;, &quot;宁夏银行·宁夏银行公务卡&quot;, &quot;宁夏银行·宁夏银行福农贷记卡&quot;, &quot;宁夏银行·如意卡(银联卡)&quot;, &quot;宁夏银行·宁夏银行福农借记卡&quot;, &quot;宁夏银行·如意借记卡&quot;, &quot;宁夏银行·如意IC卡&quot;, &quot;宁夏银行·宁夏银行如意借记卡&quot;, &quot;宁夏银行·中国旅游卡&quot;, &quot;齐商银行·金达卡(银联卡)&quot;, &quot;齐商银行·金达借记卡(银联卡)&quot;, &quot;齐商银行·金达IC卡&quot;, &quot;徽商银行·黄山卡&quot;, &quot;徽商银行·黄山卡&quot;, &quot;徽商银行·借记卡&quot;, &quot;徽商银行·徽商银行中国旅游卡（安徽）&quot;, &quot;徽商银行合肥分行·黄山卡&quot;, &quot;徽商银行芜湖分行·黄山卡(银联卡)&quot;, &quot;徽商银行马鞍山分行·黄山卡(银联卡)&quot;, &quot;徽商银行淮北分行·黄山卡(银联卡)&quot;, &quot;徽商银行安庆分行·黄山卡(银联卡)&quot;, &quot;重庆银行·长江卡(银联卡)&quot;, &quot;重庆银行·长江卡(银联卡)&quot;, &quot;重庆银行·长江卡&quot;, &quot;重庆银行·借记IC卡&quot;, &quot;哈尔滨银行·丁香一卡通(银联卡)&quot;, &quot;哈尔滨银行·丁香借记卡(银联卡)&quot;, &quot;哈尔滨银行·丁香卡&quot;, &quot;哈尔滨银行·福农借记卡&quot;, &quot;无锡市商业银行·太湖金保卡(银联卡)&quot;, &quot;丹东银行·借记IC卡&quot;, &quot;丹东银行·丹东银行公务卡&quot;, &quot;兰州银行·敦煌卡&quot;, &quot;南昌银行·金瑞卡(银联卡)&quot;, &quot;南昌银行·南昌银行借记卡&quot;, &quot;南昌银行·金瑞卡&quot;, &quot;晋商银行·晋龙一卡通&quot;, &quot;晋商银行·晋龙一卡通&quot;, &quot;晋商银行·晋龙卡(银联卡)&quot;, &quot;青岛银行·金桥通卡&quot;, &quot;青岛银行·金桥卡(银联卡)&quot;, &quot;青岛银行·金桥卡(银联卡)&quot;, &quot;青岛银行·金桥卡&quot;, &quot;青岛银行·借记IC卡&quot;, &quot;吉林银行·雾凇卡(银联卡)&quot;, &quot;吉林银行·雾凇卡(银联卡)&quot;, &quot;南通商业银行·金桥卡(银联卡)&quot;, &quot;南通商业银行·金桥卡(银联卡)&quot;, &quot;日照银行·黄海卡、财富卡借记卡&quot;, &quot;鞍山银行·千山卡(银联卡)&quot;, &quot;鞍山银行·千山卡(银联卡)&quot;, &quot;鞍山银行·千山卡&quot;, &quot;青海银行·三江银行卡(银联卡)&quot;, &quot;青海银行·三江卡&quot;, &quot;台州银行·大唐贷记卡&quot;, &quot;台州银行·大唐准贷记卡&quot;, &quot;台州银行·大唐卡(银联卡)&quot;, &quot;台州银行·大唐卡&quot;, &quot;台州银行·借记卡&quot;, &quot;台州银行·公务卡&quot;, &quot;泉州银行·海峡银联卡(银联卡)&quot;, &quot;泉州银行·海峡储蓄卡&quot;, &quot;泉州银行·海峡银联卡(银联卡)&quot;, &quot;泉州银行·海峡卡&quot;, &quot;泉州银行·公务卡&quot;, &quot;昆明商业银行·春城卡(银联卡)&quot;, &quot;昆明商业银行·春城卡(银联卡)&quot;, &quot;昆明商业银行·富滇IC卡（复合卡）&quot;, &quot;阜新银行·借记IC卡&quot;, &quot;嘉兴银行·南湖借记卡(银联卡)&quot;, &quot;廊坊银行·白金卡&quot;, &quot;廊坊银行·金卡&quot;, &quot;廊坊银行·银星卡(银联卡)&quot;, &quot;廊坊银行·龙凤呈祥卡&quot;, &quot;内蒙古银行·百灵卡(银联卡)&quot;, &quot;内蒙古银行·成吉思汗卡&quot;, &quot;湖州市商业银行·百合卡&quot;, &quot;湖州市商业银行·&quot;, &quot;沧州银行·狮城卡&quot;, &quot;南宁市商业银行·桂花卡(银联卡)&quot;, &quot;包商银行·雄鹰卡(银联卡)&quot;, &quot;包商银行·包头市商业银行借记卡&quot;, &quot;包商银行·雄鹰贷记卡&quot;, &quot;包商银行·包商银行内蒙古自治区公务卡&quot;, &quot;包商银行·贷记卡&quot;, &quot;包商银行·借记卡&quot;, &quot;连云港市商业银行·金猴神通借记卡&quot;, &quot;威海商业银行·通达卡(银联卡)&quot;, &quot;威海市商业银行·通达借记IC卡&quot;, &quot;攀枝花市商业银行·攀枝花卡(银联卡)&quot;, &quot;攀枝花市商业银行·攀枝花卡&quot;, &quot;绵阳市商业银行·科技城卡(银联卡)&quot;, &quot;泸州市商业银行·酒城卡(银联卡)&quot;, &quot;泸州市商业银行·酒城IC卡&quot;, &quot;大同市商业银行·云冈卡(银联卡)&quot;, &quot;三门峡银行·天鹅卡(银联卡)&quot;, &quot;广东南粤银行·南珠卡(银联卡)&quot;, &quot;张家口市商业银行·好运IC借记卡&quot;, &quot;桂林市商业银行·漓江卡(银联卡)&quot;, &quot;龙江银行·福农借记卡&quot;, &quot;龙江银行·联名借记卡&quot;, &quot;龙江银行·福农借记卡&quot;, &quot;龙江银行·龙江IC卡&quot;, &quot;龙江银行·社会保障卡&quot;, &quot;龙江银行·--&quot;, &quot;江苏长江商业银行·长江卡&quot;, &quot;徐州市商业银行·彭城借记卡(银联卡)&quot;, &quot;南充市商业银行·借记IC卡&quot;, &quot;南充市商业银行·熊猫团团卡&quot;, &quot;莱商银行·银联标准卡&quot;, &quot;莱芜银行·金凤卡&quot;, &quot;莱商银行·借记IC卡&quot;, &quot;德阳银行·锦程卡定活一卡通&quot;, &quot;德阳银行·锦程卡定活一卡通金卡&quot;, &quot;德阳银行·锦程卡定活一卡通&quot;, &quot;唐山市商业银行·唐山市城通卡&quot;, &quot;曲靖市商业银行·珠江源卡&quot;, &quot;曲靖市商业银行·珠江源IC卡&quot;, &quot;温州银行·金鹿信用卡&quot;, &quot;温州银行·金鹿信用卡&quot;, &quot;温州银行·金鹿公务卡&quot;, &quot;温州银行·贷记IC卡&quot;, &quot;汉口银行·汉口银行贷记卡&quot;, &quot;汉口银行·汉口银行贷记卡&quot;, &quot;汉口银行·九通香港旅游贷记普卡&quot;, &quot;汉口银行·九通香港旅游贷记金卡&quot;, &quot;汉口银行·贷记卡&quot;, &quot;汉口银行·九通公务卡&quot;, &quot;江苏银行·聚宝借记卡&quot;, &quot;江苏银行·月季卡&quot;, &quot;江苏银行·紫金卡&quot;, &quot;江苏银行·绿扬卡(银联卡)&quot;, &quot;江苏银行·月季卡(银联卡)&quot;, &quot;江苏银行·九州借记卡(银联卡)&quot;, &quot;江苏银行·月季卡(银联卡)&quot;, &quot;江苏银行·聚宝惠民福农卡&quot;, &quot;江苏银行·江苏银行聚宝IC借记卡&quot;, &quot;江苏银行·聚宝IC借记卡VIP卡&quot;, &quot;长治市商业银行·长治商行银联晋龙卡&quot;, &quot;承德市商业银行·热河卡&quot;, &quot;承德银行·借记IC卡&quot;, &quot;德州银行·长河借记卡&quot;, &quot;德州银行·--&quot;, &quot;遵义市商业银行·社保卡&quot;, &quot;遵义市商业银行·尊卡&quot;, &quot;邯郸市商业银行·邯银卡&quot;, &quot;邯郸市商业银行·邯郸银行贵宾IC借记卡&quot;, &quot;安顺市商业银行·黄果树福农卡&quot;, &quot;安顺市商业银行·黄果树借记卡&quot;, &quot;江苏银行·紫金信用卡(公务卡)&quot;, &quot;江苏银行·紫金信用卡&quot;, &quot;江苏银行·天翼联名信用卡&quot;, &quot;平凉市商业银行·广成卡&quot;, &quot;玉溪市商业银行·红塔卡&quot;, &quot;玉溪市商业银行·红塔卡&quot;, &quot;浙江民泰商业银行·金融IC卡&quot;, &quot;浙江民泰商业银行·民泰借记卡&quot;, &quot;浙江民泰商业银行·金融IC卡C卡&quot;, &quot;浙江民泰商业银行·银联标准普卡金卡&quot;, &quot;浙江民泰商业银行·商惠通&quot;, &quot;上饶市商业银行·三清山卡&quot;, &quot;东营银行·胜利卡&quot;, &quot;泰安市商业银行·岱宗卡&quot;, &quot;泰安市商业银行·市民一卡通&quot;, &quot;浙江稠州商业银行·义卡&quot;, &quot;浙江稠州商业银行·义卡借记IC卡&quot;, &quot;浙江稠州商业银行·公务卡&quot;, &quot;自贡市商业银行·借记IC卡&quot;, &quot;自贡市商业银行·锦程卡&quot;, &quot;鄂尔多斯银行·天骄公务卡&quot;, &quot;鹤壁银行·鹤卡&quot;, &quot;许昌银行·连城卡&quot;, &quot;铁岭银行·龙凤卡&quot;, &quot;乐山市商业银行·大福卡&quot;, &quot;乐山市商业银行·--&quot;, &quot;长安银行·长长卡&quot;, &quot;长安银行·借记IC卡&quot;, &quot;重庆三峡银行·财富人生卡&quot;, &quot;重庆三峡银行·借记卡&quot;, &quot;石嘴山银行·麒麟借记卡&quot;, &quot;石嘴山银行·麒麟借记卡&quot;, &quot;石嘴山银行·麒麟公务卡&quot;, &quot;盘锦市商业银行·鹤卡&quot;, &quot;盘锦市商业银行·盘锦市商业银行鹤卡&quot;, &quot;平顶山银行·平顶山银行公务卡&quot;, &quot;朝阳银行·鑫鑫通卡&quot;, &quot;朝阳银行·朝阳银行福农卡&quot;, &quot;朝阳银行·红山卡&quot;, &quot;宁波东海银行·绿叶卡&quot;, &quot;遂宁市商业银行·锦程卡&quot;, &quot;遂宁是商业银行·金荷卡&quot;, &quot;保定银行·直隶卡&quot;, &quot;保定银行·直隶卡&quot;, &quot;凉山州商业银行·锦程卡&quot;, &quot;凉山州商业银行·金凉山卡&quot;, &quot;漯河银行·福卡&quot;, &quot;漯河银行·福源卡&quot;, &quot;漯河银行·福源公务卡&quot;, &quot;达州市商业银行·锦程卡&quot;, &quot;新乡市商业银行·新卡&quot;, &quot;晋中银行·九州方圆借记卡&quot;, &quot;晋中银行·九州方圆卡&quot;, &quot;驻马店银行·驿站卡&quot;, &quot;驻马店银行·驿站卡&quot;, &quot;驻马店银行·公务卡&quot;, &quot;衡水银行·金鼎卡&quot;, &quot;衡水银行·借记IC卡&quot;, &quot;周口银行·如愿卡&quot;, &quot;周口银行·公务卡&quot;, &quot;阳泉市商业银行·金鼎卡&quot;, &quot;阳泉市商业银行·金鼎卡&quot;, &quot;宜宾市商业银行·锦程卡&quot;, &quot;宜宾市商业银行·借记IC卡&quot;, &quot;库尔勒市商业银行·孔雀胡杨卡&quot;, &quot;雅安市商业银行·锦城卡&quot;, &quot;雅安市商业银行·--&quot;, &quot;安阳银行·安鼎卡&quot;, &quot;信阳银行·信阳卡&quot;, &quot;信阳银行·公务卡&quot;, &quot;信阳银行·信阳卡&quot;, &quot;华融湘江银行·华融卡&quot;, &quot;华融湘江银行·华融卡&quot;, &quot;营口沿海银行·祥云借记卡&quot;, &quot;景德镇商业银行·瓷都卡&quot;, &quot;哈密市商业银行·瓜香借记卡&quot;, &quot;湖北银行·金牛卡&quot;, &quot;湖北银行·汉江卡&quot;, &quot;湖北银行·借记卡&quot;, &quot;湖北银行·三峡卡&quot;, &quot;湖北银行·至尊卡&quot;, &quot;湖北银行·金融IC卡&quot;, &quot;西藏银行·借记IC卡&quot;, &quot;新疆汇和银行·汇和卡&quot;, &quot;广东华兴银行·借记卡&quot;, &quot;广东华兴银行·华兴银联公司卡&quot;, &quot;广东华兴银行·华兴联名IC卡&quot;, &quot;广东华兴银行·华兴金融IC借记卡&quot;, &quot;濮阳银行·龙翔卡&quot;, &quot;宁波通商银行·借记卡&quot;, &quot;甘肃银行·神舟兴陇借记卡&quot;, &quot;甘肃银行·甘肃银行神州兴陇IC卡&quot;, &quot;枣庄银行·借记IC卡&quot;, &quot;本溪市商业银行·借记卡&quot;, &quot;盛京银行·医保卡&quot;, &quot;上海农商银行·如意卡(银联卡)&quot;, &quot;上海农商银行·如意卡(银联卡)&quot;, &quot;上海农商银行·鑫通卡&quot;, &quot;上海农商银行·国际如意卡&quot;, &quot;上海农商银行·借记IC卡&quot;, &quot;常熟市农村商业银行·粒金贷记卡(银联卡)&quot;, &quot;常熟市农村商业银行·公务卡&quot;, &quot;常熟市农村商业银行·粒金准贷卡&quot;, &quot;常熟农村商业银行·粒金借记卡(银联卡)&quot;, &quot;常熟农村商业银行·粒金IC卡&quot;, &quot;常熟农村商业银行·粒金卡&quot;, &quot;深圳农村商业银行·信通卡(银联卡)&quot;, &quot;深圳农村商业银行·信通商务卡(银联卡)&quot;, &quot;深圳农村商业银行·信通卡&quot;, &quot;深圳农村商业银行·信通商务卡&quot;, &quot;广州农村商业银行·福农太阳卡&quot;, &quot;广东南海农村商业银行·盛通卡&quot;, &quot;广东南海农村商业银行·盛通卡(银联卡)&quot;, &quot;佛山顺德农村商业银行·恒通卡(银联卡)&quot;, &quot;佛山顺德农村商业银行·恒通卡&quot;, &quot;佛山顺德农村商业银行·恒通卡(银联卡)&quot;, &quot;江阴农村商业银行·暨阳公务卡&quot;, &quot;江阴市农村商业银行·合作贷记卡(银联卡)&quot;, &quot;江阴农村商业银行·合作借记卡&quot;, &quot;江阴农村商业银行·合作卡(银联卡)&quot;, &quot;江阴农村商业银行·暨阳卡&quot;, &quot;重庆农村商业银行·江渝借记卡VIP卡&quot;, &quot;重庆农村商业银行·江渝IC借记卡&quot;, &quot;重庆农村商业银行·江渝乡情福农卡&quot;, &quot;东莞农村商业银行·信通卡(银联卡)&quot;, &quot;东莞农村商业银行·信通卡(银联卡)&quot;, &quot;东莞农村商业银行·信通信用卡&quot;, &quot;东莞农村商业银行·信通借记卡&quot;, &quot;东莞农村商业银行·贷记IC卡&quot;, &quot;张家港农村商业银行·一卡通(银联卡)&quot;, &quot;张家港农村商业银行·一卡通(银联卡)&quot;, &quot;张家港农村商业银行·&quot;, &quot;北京农村商业银行·信通卡&quot;, &quot;北京农村商业银行·惠通卡&quot;, &quot;北京农村商业银行·凤凰福农卡&quot;, &quot;北京农村商业银行·惠通卡&quot;, &quot;北京农村商业银行·中国旅行卡&quot;, &quot;北京农村商业银行·凤凰卡&quot;, &quot;天津农村商业银行·吉祥商联IC卡&quot;, &quot;天津农村商业银行·信通借记卡(银联卡)&quot;, &quot;天津农村商业银行·借记IC卡&quot;, &quot;鄞州农村合作银行·蜜蜂借记卡(银联卡)&quot;, &quot;宁波鄞州农村合作银行·蜜蜂电子钱包(IC)&quot;, &quot;宁波鄞州农村合作银行·蜜蜂IC借记卡&quot;, &quot;宁波鄞州农村合作银行·蜜蜂贷记IC卡&quot;, &quot;宁波鄞州农村合作银行·蜜蜂贷记卡&quot;, &quot;宁波鄞州农村合作银行·公务卡&quot;, &quot;成都农村商业银行·福农卡&quot;, &quot;成都农村商业银行·福农卡&quot;, &quot;珠海农村商业银行·信通卡(银联卡)&quot;, &quot;太仓农村商业银行·郑和卡(银联卡)&quot;, &quot;太仓农村商业银行·郑和IC借记卡&quot;, &quot;无锡农村商业银行·金阿福&quot;, &quot;无锡农村商业银行·借记IC卡&quot;, &quot;黄河农村商业银行·黄河卡&quot;, &quot;黄河农村商业银行·黄河富农卡福农卡&quot;, &quot;黄河农村商业银行·借记IC卡&quot;, &quot;天津滨海农村商业银行·四海通卡&quot;, &quot;天津滨海农村商业银行·四海通e芯卡&quot;, &quot;武汉农村商业银行·汉卡&quot;, &quot;武汉农村商业银行·汉卡&quot;, &quot;武汉农村商业银行·中国旅游卡&quot;, &quot;江南农村商业银行·阳湖卡(银联卡)&quot;, &quot;江南农村商业银行·天天红火卡&quot;, &quot;江南农村商业银行·借记IC卡&quot;, &quot;海口联合农村商业银行·海口联合农村商业银行合卡&quot;, &quot;湖北嘉鱼吴江村镇银行·垂虹卡&quot;, &quot;福建建瓯石狮村镇银行·玉竹卡&quot;, &quot;浙江平湖工银村镇银行·金平卡&quot;, &quot;重庆璧山工银村镇银行·翡翠卡&quot;, &quot;重庆农村商业银行·银联标准贷记卡&quot;, &quot;重庆农村商业银行·公务卡&quot;, &quot;南阳村镇银行·玉都卡&quot;, &quot;晋中市榆次融信村镇银行·魏榆卡&quot;, &quot;三水珠江村镇银行·珠江太阳卡&quot;, &quot;东营莱商村镇银行·绿洲卡&quot;, &quot;建设银行·单位结算卡&quot;, &quot;玉溪市商业银行·红塔卡&quot; ,&quot;平安银行&quot;,&quot;平安银行&quot;,&quot;平安银行&quot;,&quot;平安银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;,&quot;深圳发展银行&quot;); public function getname($cardnumber) { $charBin = substr($cardnumber, 0,6); //cardnumber.substring(0, 6); $bin = 0; $index = 0; //bin=Integer.valueOf(charBin); $index= array_search($charBin, self::$bankBin); //binarySearch(bankBin, bin); if ($index == -1 || $index&gt; count( self::$bankName) ){ return null; } return self::$bankName[$index];//.substring(0,4); } // // 查找方法 // public static $binarySearch(int[] srcArray, $des) { // $low = 0; // $high = srcArray.length; // while (low &lt; high) { // if (des == srcArray[low]) { // return low; // } // low++; // } // return -1; // } /* 当你输入信用卡号码的时候，有没有担心输错了而造成损失呢？其实可以不必这么担心， 因为并不是一个随便的信用卡号码都是合法的，它必须通过Luhn算法来验证通过。 该校验的过程： 1、从卡号最后一位数字开始，逆向将奇数位(1、3、5等等)相加。 2、从卡号最后一位数字开始，逆向将偶数位数字，先乘以2（如果乘积为两位数，则将其减去9），再求和。 3、将奇数位总和加上偶数位总和，结果应该可以被10整除。 例如，卡号是：5432123456788881 则奇数、偶数位（用红色标出）分布：5432123456788881 奇数位和=35 偶数位乘以2（有些要减去9）的结果：1 6 2 6 1 5 7 7，求和=35。 最后35+35=70 可以被10整除，认定校验通过。 请编写一个程序，从键盘输入卡号，然后判断是否校验通过。通过显示：“成功”，否则显示“失败”。 比如，用户输入：356827027232780 程序输出：成功 */ /** * 校验银行卡卡号 * @param cardId * @return */ public function checkBankCard($cardId) { $bit = getBankCardCheckCode($cardId.substring(0, count($cardId) - 1)); if($bit == &apos;N&apos;){ return false; } return $cardId[count($cardId) - 1] == $bit; } /** * 从不含校验位的银行卡卡号采用 Luhn 校验算法获得校验位 * @param nonCheckCodeCardId * @return */ public function getBankCardCheckCode($nonCheckCodeCardId){ if($nonCheckCodeCardId == null || count( trim( $nonCheckCodeCardId)) == 0 || !preg_match(&quot;\\d+&quot;,$nonCheckCodeCardId)) { //如果传的不是数据返回N return &apos;N&apos;; } $chs = trim($nonCheckCodeCardId).toCharArray(); $luhmSum = 0; for($i = count( $chs) - 1, $j = 0; $i &gt;= 0; $i--, $j++) { $k = $chs[i] - &apos;0&apos;; if($j % 2 == 0) { $k *= 2; $k = $k / 10 + $k % 10; } $luhmSum += $k; } return ($luhmSum % 10 == 0) ? &apos;0&apos; : ((10 - $luhmSum % 10)); } } $bank = new GetBank(); echo $bank-&gt;getname(&quot;6212263007000674715&quot;); 转自PHP根据银行卡号获取银行名称（根据Java更改而来）]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>代码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[swoole安装]]></title>
    <url>%2Fposts%2Fa4225ecf%2F</url>
    <content type="text"><![CDATA[源码编译安装swoolemkdir -p ~/build &amp;&amp; \ cd ~/build &amp;&amp; \ rm -rf ./swoole-src &amp;&amp; \ curl -o ./tmp/swoole.tar.gz https://github.com/swoole/swoole-src/archive/master.tar.gz -L &amp;&amp; \ tar zxvf ./tmp/swoole.tar.gz &amp;&amp; \ mv swoole-src* swoole-src &amp;&amp; \ cd swoole-src &amp;&amp; \ phpize &amp;&amp; \ ./configure \ --enable-coroutine \ --enable-openssl \ --enable-http2 \ --enable-async-redis \ --enable-sockets \ --enable-mysqlnd &amp;&amp; \ make clean &amp;&amp; make &amp;&amp; sudo make install]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>swoole</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL常用语法]]></title>
    <url>%2Fposts%2Ffad88b6d%2F</url>
    <content type="text"><![CDATA[数据表相关创建数据表123create database laravelS DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_general_ci;清空数据表1truncate table 表名导出数据123mysql&gt; SELECT * FROM runoob_tbl -&gt; INTO OUTFILE '/tmp/runoob.txt';mysqldump -u root -p RUNOOB runoob_tbl &gt; dump.txt]]></content>
      <tags>
        <tag>MySQL</tag>
        <tag>代码</tag>
        <tag>备忘</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SSR一键安装]]></title>
    <url>%2Fposts%2Fbe5821e2%2F</url>
    <content type="text"><![CDATA[一键安装SSRwget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh chmod +x shadowsocksR.sh ./shadowsocksR.sh 2&gt;&amp;1 | tee shadowsocksR.log 多用户配置编辑文件/etc/shadowsocks.json{ &quot;server&quot;:&quot;0.0.0.0&quot;, &quot;server_ipv6&quot;: &quot;[::]&quot;, &quot;local_address&quot;:&quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;port_password&quot;:{ &quot;8989&quot;:&quot;password1&quot;, &quot;8990&quot;:&quot;password2&quot;, &quot;8991&quot;:&quot;password3&quot; }, &quot;timeout&quot;:300, &quot;method&quot;:&quot;aes-256-cfb&quot;, &quot;protocol&quot;: &quot;origin&quot;, &quot;protocol_param&quot;: &quot;&quot;, &quot;obfs&quot;: &quot;plain&quot;, &quot;obfs_param&quot;: &quot;&quot;, &quot;redirect&quot;: &quot;&quot;, &quot;dns_ipv6&quot;: false, &quot;fast_open&quot;: false, &quot;workers&quot;: 1 }]]></content>
      <tags>
        <tag>vps</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Centos下配置安装javaWeb环境]]></title>
    <url>%2Fposts%2Fe3ac84e4%2F</url>
    <content type="text"><![CDATA[搭建 Java 开发环境安装 JDKJDK 是开发Java程序必须安装的软件，我们查看一下 yum 源里面的 JDK：yum list | grep jdk 选择适合本机的JDK，并安装：yum install java-1.8.0-openjdk* -y 安装完成后，查看是否安装成功(安装成功回显示jdk的版本号)：java -version openjdk version &quot;1.8.0_171&quot; OpenJDK Runtime Environment (build 1.8.0_171-b10) OpenJDK 64-Bit Server VM (build 25.171-b10, mixed mode) 安装Tomcat下载Tomcat，并解压到指定目录中。 Tomcat-9.0.10.tar.gztar zxvf apache-tomcat-9.0.10.tar.gz mv apache-tomcat-9.0.10/ /usr/local/tomcat9 #修改权限 chmod -R 777 /usr/local/tomcat9/bin #启动Tomcat /usr/local/tomcat9/bin/startup.sh #修改nginx配置 location ~ .+\.jsp($|/) { proxy_pass http://127.0.0.1:8080; #转发端口 proxy_set_header Host $host; client_max_body_size 10m; client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数。 proxy_connect_timeout 90; #Nginx跟后端服务器连接超时时间。 proxy_read_timeout 90; #连接成功后，后端服务器响应时间。 proxy_buffer_size 4k; #设置代理服务器保存用户头信息的缓冲区大小。 proxy_buffers 6 32k; #proxy_buffers缓冲区。 proxy_busy_buffers_size 64k; #高负荷下缓冲大小。 proxy_temp_file_write_size 64k;#设定缓存文件夹大小。 } #访问相关域名+/index.php即可看到Tomcat主页 动静分离新建一个location来专门转发静态文件location ~ \.(html|js|css|gif|jpg|png|bmp|swf)$ { expires 30d; root /usr/local/tomcat9/webapps/ROOT; }]]></content>
      <tags>
        <tag>java</tag>
        <tag>javaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[源码编译安装mariadb数据库]]></title>
    <url>%2Fposts%2F9f7c77f%2F</url>
    <content type="text"><![CDATA[源码安装CMake1.获取CMake源码包cmake-3.12.0.tar.gz2.解压、编译、安装Cmaketar -xzvf cmake-3.12.0.tar.gz cd cmake-3.12.0 ./bootstrap make make install 备注cmake 会默认安装在 usr/local/bin 下面 ./bootstrap 需要gcc,gcc-c++环境时yum install -y gcc gcc-c++ 源码安装mariadb1.获取源码包mariadb-10.3.8.tar.gz2.编译环境准备yum groupinstall -y Development Tools ncurses-devel openssl-devel openssl 3.创建mysql用户groupadd mysql useradd -s /sbin/nologin -g mysql -M mysql id mysql # uid=500(mysql) gid=500(mysql) groups=500(mysql) #创建数据库数据存放目录； mkdir /mydata/data -pv chown mysql:mysql /mydata/data/ -R 4.编译安装MariaDBcmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql \ -DMYSQL_DATADIR=/mydata/data \ -DWITH_INNOBASE_STORAGE_ENGINE=1 \ -DWITH_ARCHIVE_STORAGE_ENGINE=1 \ -DWITH_BLACKHOLE_STORAGE_ENGINE=1 \ -DWITH_READLINE=1 \ -DWITH_SSL=system \ -DWITH_ZLIB=system \ -DWITH_LIBWRAP=0 \ -DMYSQL_UNIX_ADDR=/tmp/mysql.sock \ -DDEFAULT_CHARSET=utf8 \ -DDEFAULT_COLLATION=utf8_general_ci #编译完成后安装数据库： make make install 5.配置安装MariaDBcd /usr/local/mysql/ scripts/mysql_install_db --user=mysql --datadir=/mydata/data ls /mydata/data/ aria_log.00000001 ib_logfile0 mysql-bin.000001 mysql-bin.state aria_log_control ib_logfile1 mysql-bin.000002 performance_schema ibdata1 mysql mysql-bin.index test 6.mariadb配置文件创建及更改，没有模版mkdir /etc/mysql vim /etc/mysql/my.cnf [mysqld] port = 3306 datadir = /mydata/data socket = /tmp/mysql.sock skip-external-locking key_buffer_size = 256M max_allowed_packet = 1M table_open_cache = 256 sort_buffer_size = 1M read_buffer_size = 1M read_rnd_buffer_size = 4M myisam_sort_buffer_size = 64M thread_cache_size = 8 query_cache_size= 16M # Try number of CPU&apos;s*2 for thread_concurrency thread_concurrency = 8 innodb_file_per_table = on skip_name_resolve = on 创建服务脚本：cp support-files/mysql.server /etc/rc.d/init.d/mysqld chkconfig --list mysqld chkconfig --add mysqld 启动mysqld服务,测试启动service mysqld start Starting MySQL. [ OK ] 7.设置环境变量vim /etc/profile.d/mysqld.sh MYSQL_HOME=/usr/local/mysql export PATH=$MYSQL_HOME/bin:$PATH 加载环境变量：source /etc/profile.d/mysqld.sh 8.修改Mysql的root用户密码以及打开远程连接(可选)mysql Welcome to the MariaDB monitor. Commands end with ; or \g. Your MariaDB connection id is 9 Server version: 10.3.8-MariaDB Source distribution Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement. grant all privileges on *.* to root@&apos;localhost&apos; identified by &apos;密码&apos;; grant all privileges on *.* to root@&apos;127.0.0.1&apos; identified by &apos;密码&apos;; use mysql; Database changed update user set password = password(&apos;密码&apos;) where User=&apos;root&apos;; select Host,User,Password from user where User=&apos;root&apos;; +----------------+------+-------------------------------------------+ | Host | User | Password | +----------------+------+-------------------------------------------+ | localhost | root | *密码 | | tom2.stu31.com | root | *密码 | | 127.0.0.1 | root | *密码 | | ::1 | root | *密码 | +----------------+------+-------------------------------------------+ 4 rows in set (0.00 sec) 9.我们使用MariaDB提供的安全设置脚本来进行数据库安全配置MariaDB提供了一些配置脚本在cd $MYSQL_HOME/bin ls aria_chk innochecksum myisamchk myrocks_hotbackup mysqlcheck mysqld_multi mysql_find_rows mysql_plugin mysqltest perror tokuftdump wsrep_sst_rsync aria_dump_log mariabackup myisam_ftdump mysql mysql_client_test mysqld_safe mysql_fix_extensions mysql_secure_installation mysql_tzinfo_to_sql replace tokuft_logprint wsrep_sst_rsync_wan aria_ftdump mariadb_config myisamlog mysqlaccess mysql_config mysqld_safe_helper mysqlhotcopy mysql_setpermission mysql_upgrade resolveip wsrep_sst_common wsrep_sst_xtrabackup aria_pack mbstream myisampack mysqladmin mysql_convert_table_format mysqldump mysqlimport mysqlshow mysql_waitpid resolve_stack_dump wsrep_sst_mariabackup wsrep_sst_xtrabackup-v2 aria_read_log msql2mysql my_print_defaults mysqlbinlog mysqld mysqldumpslow mysql_ldb mysqlslap mytop sst_dump wsrep_sst_mysqldump #我们使用mysql_secure_installation这个脚本来进行安全配置： mysql_secure_installation NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB SERVERS IN PRODUCTION USE! PLEASE READ EACH STEP CAREFULLY! In order to log into MariaDB to secure it, we&apos;ll need the current password for the root user. If you&apos;ve just installed MariaDB, and you haven&apos;t set the root password yet, the password will be blank, so you should just press enter here. Enter current password for root (enter for none): OK, successfully used password, moving on... Setting the root password ensures that nobody can log into the MariaDB root user without the proper authorisation. Set root password? [Y/n] n ... skipping. By default, a MariaDB installation has an anonymous user, allowing anyone to log into MariaDB without having to have a user account created for them. This is intended only for testing, and to make the installation go a bit smoother. You should remove them before moving into a production environment. Remove anonymous users? [Y/n] Y ... Success! Normally, root should only be allowed to connect from &apos;localhost&apos;. This ensures that someone cannot guess at the root password from the network. Disallow root login remotely? [Y/n] Y ... Success! By default, MariaDB comes with a database named &apos;test&apos; that anyone can access. This is also intended only for testing, and should be removed before moving into a production environment. Remove test database and access to it? [Y/n] Y - Dropping test database... ... Success! - Removing privileges on test database... ... Success! Reloading the privilege tables will ensure that all changes made so far will take effect immediately. Reload privilege tables now? [Y/n] Y ... Success! Cleaning up... All done! If you&apos;ve completed all of the above steps, your MariaDB installation should now be secure. Thanks for using MariaDB! #安全设置数据库完成后我们就不能使用mysql登录数据库了；但是平常我们操作时使用mysql -u root -p这样太麻烦了，为了方便，我们可以在用户家目录创建一个拥有mysql用户名和密码的.my.cnf隐藏配置文件进行登录数据库; #创建个隐藏文件在root家目录： vim .my.cnf [mysql] user = root password = 密码 host = 127.0.0.1 备注注意事项重新编译时，需要清除旧的对象文件和缓存信息。make clean rm -f CMakeCache.txt rm -rf /etc/my.cnf 错误：Curses library not found. Please install appropriate package 解决方案： 先安装 ncurses-devel 包yum install ncurses-devel 再删除刚才编译生成的 CMakeCache.txt 文件rm CMakeCache.txt 再次执行一次cmake编译选项-DCMAKE_INSTALL_PREFIX=/usr/local/mysql //安装目录 -DINSTALL_DATADIR=/mydata/data //数据库存放目录 -DDEFAULT_CHARSET=utf8 //使用utf8字符 -DDEFAULT_COLLATION=utf8_general_ci //校验字符 -DEXTRA_CHARSETS=all //安装所有扩展字符集 -DENABLED_LOCAL_INFILE=1 //允许从本地导入数据 cmake编译指令介绍指定安装文件的安装路径时常用的选项：-DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/mydata/data -DSYSCONFDIR=/etc 默认编译的存储引擎包括：csv、myisam、myisammrg和heap。若要安装其它存储引擎，可以使用类似如下编译选项：-DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_FEDERATED_STORAGE_ENGINE=1 若要明确指定不编译某存储引擎，可以使用类似如下的选项：-DWITHOUT_&lt;ENGINE&gt;_STORAGE_ENGINE=1 #比如： -DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 -DWITHOUT_FEDERATED_STORAGE_ENGINE=1 -DWITHOUT_PARTITION_STORAGE_ENGINE=1 如若要编译进其它功能，如SSL等，则可使用类似如下选项来实现编译时使用某库或不使用某库：-DWITH_READLINE=1 -DWITH_SSL=system -DWITH_ZLIB=system -DWITH_LIBWRAP=0 其它常用的选项：-DMYSQL_TCP_PORT=3306 -DMYSQL_UNIX_ADDR=/tmp/mysql.sock -DENABLED_LOCAL_INFILE=1 -DEXTRA_CHARSETS=all -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_DEBUG=0 -DENABLE_PROFILING=1 如果想清理此前的编译所生成的文件，则需要使用如下命令：make clean rm CMakeCache.txt]]></content>
      <tags>
        <tag>mariadb</tag>
        <tag>编译</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于wordpress 更新时需要FTP 服务器账户密码 的解决方法]]></title>
    <url>%2Fposts%2F49414842%2F</url>
    <content type="text"><![CDATA[问题WordPress的更新页面出现ftp链接设定解决给服务器服务所用的用户的WordPress所在目录足够的更新权限在wp-config.php文件中添加 php define(&quot;FS_METHOD&quot;, &quot;direct&quot;); define(&quot;FS_CHMOD_DIR&quot;, 0777); define(&quot;FS_CHMOD_FILE&quot;, 0777);]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>WordPress</tag>
        <tag>报错</tag>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WordPress不能剪切图片错误]]></title>
    <url>%2Fposts%2Fc063c7d2%2F</url>
    <content type="text"><![CDATA[报错在裁剪您的图像时发生了错误。 问题原因主要有以下几种原因 1. 基础库不足 2. 图片的访问有问题解决检查gd库、Imagick库是否正常在编辑图片里检查编辑图片链接/wp-admin/admin-ajax.php?action=imgedit-preview&amp;_ajax_nonce….附件Imgedit下载https://pecl.php.net/package/imagick]]></content>
      <tags>
        <tag>WordPress</tag>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用快捷键配置]]></title>
    <url>%2Fposts%2Fa69276d%2F</url>
    <content type="text"><![CDATA[开发配置# AUTO LOAD COMMAND # Git alias ls=&apos;ls --color=auto&apos;; alias ll=&apos;ls -lh&apos;; alias ld=&apos;ll |grep &quot;^d&quot;&apos;; alias psw=&apos;ps -a --windows&apos;; alias gs=&apos;git status&apos;; alias gad=&apos;git add -A&apos;; alias gcm=&apos;git commit -m &quot;$comments&quot;&apos;; alias gpushb=&quot;git push origin $1&quot;; alias gpullb=&quot;git pull origin $1&quot;; alias gcb=&quot;git checkout $1&quot;; alias gcc=&quot;git checkout cxl&quot;; alias gcm=&quot;git checkt master&quot;; alias gb=&quot;git branch&quot;; alias gba=&quot;git branch -a&quot;; alias gmb=&quot;git merge $1&quot;; alias gmm=&quot;git merger master&quot;; alias gdf=&quot;git diff&quot;; alias gll=&quot;git log --graph --abbrev-commit --decorate --all --format=format:&apos;%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)&quot;; # FILE alias ..=&apos;cd ..&apos;; alias ....=&apos;cd ../../&apos;; # VI/VIM alias vi=&apos;vim&apos;; # .bash_profile alias sss=&apos;source ~/.bash_profile&apos;; alias bash=&apos;vim ~/.bash_profile&apos;; # Nginx alias nginx.start=&apos;service nginx start&apos;; alias nginx.stop=&apos;nginx -s stop&apos;; alias nginx.process=&apos;ps -ef | grep nginx&apos;; alias nginx.reload=&apos;nginx -s reload&apos;; alias nginx.kill=&apos;pkill -9 nginx&apos;; alias nginx.restart=&apos;service nginx restart&apos;; # Win alias cls=&apos;clear&apos;; # Artisan alias autoload=&apos;composer dump-autoload&apos;; alias art.key=&apos;php artisan key:generate&apos;; alias migrate=&apos;php artisan migrate&apos;; alias route.list=&apos;php artisan route:list&apos;; # Laravel-admin alias admin.install=&apos;composer require encore/laravel-admin &quot;1.5.*&quot;&apos;; alias admin.install.2=&apos;php artisan vendor:publish --provider=&quot;Encore\Admin\AdminServiceProvider&quot; &amp;&amp; php artisan admin:install&apos;; alias admin.helper=&apos;composer require laravel-admin-ext/helpers &amp;&amp; php artisan admin:import helpers&apos;;]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[目录管理]]></title>
    <url>%2Fposts%2F626b20b4%2F</url>
    <content type="text"><![CDATA[目录管理1.创建目录mkdir dir 2.删除目录rm -rf dir 3.创建目录mkdir -p a/b/c/d/e/g mkdir -p aa/bb/cc/dd/ee/gg cd - #记忆近两次使用的目录文件管理新建文件touch file1 touch file{1..10} 删除文件rm -rf file1 编辑文件vi file1 复制cp file1 /mnt/file2 \cp file1 /mnt/file2 #去除别名 移动mv file1 /mnt/file1 查看文件内容cat file1 查看文件内容more file2 从第一页往下查看tree dir 递归查看目录下的所有子目录和文件ls -lR 文件搜索1.findfind /root -name file1 在/root下查找file1find /root -name file1 -exec rm -rf {} ; 在/root下查找file1并删除 2.whichwhich ls 3.locate 1)形成数据库updatedb 2)用locate查找locate httpd.conf 内容搜索:1.grepcat file|grep linux 搜索file中包含linux的行cat file1 |grep -E &quot;php|linux&quot; 搜索file1中包含php或linux的行文件或目录权限查看文件权限ls -l dir1 修改权限chmod 755 dir 7 = rwx =421 chmod o+w dir u,g,o=a #修改文件所有者chown [-R] 账号名称:用户组名称 文件或目录]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux分区]]></title>
    <url>%2Fposts%2F293749eb%2F</url>
    <content type="text"><![CDATA[linux分区/dev/sda3 第一块scsi硬盘的第三个主分区 /dev/sdb7 第二块scsi硬盘的第三个逻辑分区 df 查看已经挂载的分区]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络设置]]></title>
    <url>%2Fposts%2F408df4e%2F</url>
    <content type="text"><![CDATA[网络设置ip的配置方法 1.临时ifconfig eth0 192.168.200.1 2.永久vi /etc/sysconfig/network-scripts/ifcfg-eth0 IPADDR=192.168.100.1 NETMASK=255.255.255.0 ONBOOT=yes service network restart 以面ip网卡配置马上生效 3.查看ipifconfig eth0 检查端口netstat -anplut | grep 80 检查80端口是否被监听]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[系统结构树]]></title>
    <url>%2Fposts%2F67e939ae%2F</url>
    <content type="text"><![CDATA[系统结构树1.home 普通用户的家目录 2.mnt 空目录 3.media 挂载光盘用的 4.bin 所有用户都可以执行的命令 5.sbin 只有root才可以执行的命令 6.usr 自定义安装的软件的执行程序，帮助手册 7.var 日志,缓存 8.proc 内存镜像文件 9.dev 硬盘设备文件 10.etc 软件的配置文件/etc/init.d/ #系统服务文件夹11.boot 启动文件,包括linux内核，init进程镜像文件 12.tmp 临时目录 13.root 超级用户的家目录]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用户管理]]></title>
    <url>%2Fposts%2F500fed5c%2F</url>
    <content type="text"><![CDATA[用户管理1.新建用户 useradd user1 2.删除用户 userdel -r user1 3.设置密码 passwd user1 4.查看用户 id user1 #切换用户 1.su -su -l USERNAME-l为login，即登陆的简写 -l可以将l省略掉，所以此命令常写为su - USERNAME 2.susu USERNAME su - USERNAME切换用户后，同时切换到新用户的工作环境中 su USERNAME切换用户后，不改变原用户的工作目录，及其他环境变量目录 3.sudosudo -u USERNAME COMMAND 当普通用户通过sudo以root用户执行命令时，sudo后面的 -uUSERNAME可省略，即sudo COMMAND 即意为sudo以root用户执行 默认情况下，系统只有root用户可以执行sudo命令。需要root用户通过使用visudo命令编辑sudo的配置文件/etc/sudoers，才可以授权其他普通用户执行sudo命令。 #修改文件所有者chown [-R] 账号名称:用户组名称 文件或目录]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux基本指令]]></title>
    <url>%2Fposts%2Fca1c9939%2F</url>
    <content type="text"><![CDATA[linux基本指令cd 切换目录pwd 查看当前路径ls查看当前目录下的所有文件,-l查看属性，-a查看隐藏文件cat file1|wc -l 查看文件行数，-l行数cat file1 |wc -c查看文件字符数,-c字符数du -sh file1 查看文件大小,-sh帮你换算单位k,m,gvim ~/.bashrc 修改命令别名系统管理:1.关机init 0 2.重启init 6 shell常用技巧# tab补全 # | 管道 压缩包1.gz压缩包1)制作tar czf file1.tar.gz file1 2)解压tar xzvf file1.tar.gz ###2.bz2压缩包 1)制作tar cjf file1.tar.bz2 file1 2)解压tar xjf file1.tar.bz2 ###3.gzip压缩包 1)制作zip file.zip file1 file2 file3 zip -r file.zip /dir 2)解压unzip file.zip 帮助-h --help man]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>shell命令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php编译安装]]></title>
    <url>%2Fposts%2F6c2c2aec%2F</url>
    <content type="text"><![CDATA[PHP编译安装php编译安装123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778yum install gcc-c++ libxml2 libxml2-devel openssl openssl-devel \bzip2 bzip2-devel libcurl libcurl-devel libjpeg libjpeg-devel \libpng libpng-devel freetype freetype-devel gmp gmp-devel libmcrypt \libmcrypt-devel readline readline-devel libxslt libxslt-devel./configure \--prefix=/usr/local/php/php71 \--with-config-file-path=/etc/php/php71/ \--enable-fpm \--with-fpm-user=nginx \--with-fpm-group=nginx \--enable-inline-optimization \--disable-debug \--disable-rpath \--enable-shared \--enable-soap \--with-libxml-dir \--with-xmlrpc \--with-openssl \--with-mcrypt \--with-mhash \--with-pcre-regex \--with-sqlite3 \--with-zlib \--enable-bcmath \--with-iconv \--with-bz2 \--enable-calendar \--with-curl \--with-cdb \--enable-dom \--enable-exif \--enable-fileinfo \--enable-filter \--with-pcre-dir \--enable-ftp \--with-gd \--with-openssl-dir \--with-jpeg-dir \--with-png-dir \--with-zlib-dir \--with-freetype-dir \--enable-gd-native-ttf \--enable-gd-jis-conv \--with-gettext \--with-gmp \--with-mhash \--enable-json \--enable-mbstring \--enable-mbregex \--enable-mbregex-backtrack \--with-libmbfl \--with-onig \--enable-pdo \--with-mysqli=mysqlnd \--with-pdo-mysql=mysqlnd \--with-zlib-dir \--with-pdo-sqlite \--with-readline \--enable-session \--enable-shmop \--enable-simplexml \--enable-sockets \--enable-sysvmsg \--enable-sysvsem \--enable-sysvshm \--enable-wddx \--with-libxml-dir \--with-xsl \--enable-zip \--enable-mysqlnd-compression-support \--with-pear \--enable-opcachecp php.ini-production /etc/php/php71/php.inicp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.confcp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.confcp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm-71chmod +x /etc/init.d/php-fpm-71指定 php 安装目录1--prefix=/usr/local/php指定php.ini位置1--with-config-file-path=/usr/local/php/etcmysql安装目录，对mysql的支持1--with-mysql=/usr/local/mysqlmysqli扩展技术不仅可以调用MySQL的存储过程、处理MySQL事务，而且还可以使访问数据库工作变得更加稳定。1--with-mysqli=/usr/local/mysql/bin/mysql_config整合 apache，apxs功能是使用mod_so中的LoadModule指令，加载指定模块到 apache，要求 apache 要打开SO模块1--with-apxs2=/usr/local/apache/bin/apxs选项指令 --with-iconv-dir 用于 PHP 编译时指定 iconv 在系统里的路径，否则会扫描默认路径。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102--with-iconv-dir=/usr/local--with-freetype-dir #打开对freetype字体库的支持--with-jpeg-dir #打开对jpeg图片的支持--with-png-dir #打开对png图片的支持--with-zlib-dir #打开zlib库的支持，用于http压缩传输--with-libxml-dir #打开libxml2库的支持--disable-rpath #关闭额外的运行库文件--enable-bcmath #打开图片大小调整,用到zabbix监控的时候用到了这个模块--enable-shmop --enable-sysvsem #这样就使得你的PHP系统可以处理相关的IPC函数了。--enable-inline-optimization #优化线程--with-curl #打开curl浏览工具的支持 --with-curlwrappers #运用curl工具打开url流 --enable-mbregex--enable-fpm #打上PHP-fpm 补丁后才有这个参数，CGI方式安装的启动程序--enable-mbstring #多字节，字符串的支持 --with-mcrypt #mcrypt算法扩展--with-mhash #mhash算法扩展--with-gd #打开gd库的支持 --enable-gd-native-ttf #支持TrueType字符串函数库--with-openssl #openssl的支持，加密传输https时用到的--enable-pcntl #freeTDS需要用到的，可能是链接mssql 才用到--enable-sockets #打开 sockets 支持--with-xmlrpc # 打开xml-rpc的c语言--enable-zip #打开对zip的支持--enable-ftp #打开ftp的支持--with-bz2 # 打开对bz2文件的支持--without-iconv #关闭iconv函数，字符集间的转换--with-ttf #打开freetype1.*的支持，可以不加了--with-xsl #打开XSLT 文件支持，扩展了libXML2库 ，需要libxslt软件 --with-gettext #打开gnu 的gettext 支持，编码库用到 --with-pear #打开pear命令的支持，PHP扩展用的 --enable-calendar #打开日历扩展功能--enable-exif #图片的元数据支持 --enable-magic-quotes #魔术引用的支持 --disable-debug #关闭调试模式 --with-mime-magic=/usr/share/file/magic.mime #魔术头文件位置#CGI方式安装才用的参数--enable-fastCGI #支持fastcgi方式启动PHP--enable-force-CGI-redirect #重定向方式启动PHP--with-ncurses #支持ncurses 屏幕绘制以及基于文本终端的图形互动功能的动态库--with-gmp 应该是支持一种规范--enable-dbase #建立DBA 作为共享模块--with-pcre-dir=/usr/local/bin/pcre-config #perl的正则库案安装位置--disable-dmalloc--with-gdbm #dba的gdbm支持--enable-sigchild--enable-sysvshm--enable-zend-multibyte #支持zend的多字节--enable-wddx--enable-soapshell脚本php编译安装123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596#!/bin/sh#php编译安装php ,Nginx+php使用#定义函数，默认绿色输出 '#' 开头为红色function echocolor() &#123; [[ $1 = '#' ]] &amp;&amp; echo -e "\033[31m $* \033[0m" || echo -e "\033[32m $* \033[0m" &#125;#检测网络ping baidu.com -c 2 &amp;&gt;/dev/null || ping qq.com -c 2 &amp;&gt;/dev/null || &#123; echocolor '#' "网络异常！";exit; &#125;#设置yum 安装包不删除 目录 /var/cache/yum/#sed -i 's/keepcache=0/keepcache=1/g' /etc/yum.confechocolor '#安装需要的库'yum install epel-release -yyum install gcc gcc-c++ bison bison-devel zlib-devel libmcrypt-devel mcrypt mhash-devel openssl-devel libxml2-devel libcurl-devel bzip2-devel readline-devel libedit-devel sqlite-devel jemalloc jemalloc-devel libjpeg-devel libpng-devel libicu-devel openldap-devel ftp -yechocolor "#设置目录"echocolor "#下载目录"read Ddirechocolor "#安装版本"read SvSdir="/usr/local/php/php$Sv"echocolor "#安装目录:"echocolor "$Sdir"[ -d $Ddir ] || mkdir -p $Ddir[ -d $Sdir/etc ] || mkdir -p $Sdir/etc#[ -d $Sdir/apache/bin/apxs ] || mkdir -p $Sdir/apache/bin/apxs##下载echocolor "#请输入下载链接"read Durlwget -c $Durl -O $Ddir/php.tar.gzechocolor "添加用户"useradd -s /sbin/nologin -M wwwid wwwechocolor "解压"[ -e $Ddir/php.tar.gz ] &amp;&amp; &#123; tar xzvf $Ddir/php*.tar.gz -C $Ddir/;cd $Ddir/php*; &#125; || &#123; echocolor '#' "$Ddir目录无php源码包";exit ; &#125;# [ `uname -m` = "x86_64" ] &amp;&amp; LIB=/usr/lib64 || LIB=/usr/lib64# --with-apxs2=/usr/local/apache/bin/apxs #编译参数，apache+php使用make cleanechocolor 编译./configure \--prefix=$Sdir/ \--with-config-file-path=$Sdir/etc \--enable-inline-optimization \--disable-debug \--disable-rpath \--enable-shared \--enable-opcache \--enable-fpm \--with-fpm-user=www \--with-fpm-group=www \--with-mysql=mysqlnd \--with-mysqli=mysqlnd \--with-pdo-mysql=mysqlnd \--with-gettext \--enable-mbstring \--with-iconv \--with-mcrypt \--with-mhash \--with-openssl \--enable-bcmath \--enable-soap \--with-libxml-dir \--enable-pcntl \--enable-shmop \--enable-sysvmsg \--enable-sysvsem \--enable-sysvshm \--enable-sockets \--with-curl \--with-zlib \--enable-zip \--with-bz2 \--enable-ftp \--with-ldap-dir=/usr/lib \--with-png-dir=/usr/lib \--with-jpeg-dir=/usr/lib \--with-readline[ $? = 0 ] || &#123; echocolor '#' "编译出现问题 ！";exit; &#125;echo 编译安装make -j4 make installmake cleanmake clean allecho #配置PHPcp php.ini-production $Sdir/etc/php.inicp $Sdir/etc/php-fpm.conf.default $Sdir/etc/php-fpm.confcp sapi/fpm/init.d.php-fpm $Sdir/bin/php-fpm-$Svcp $Sdir/etc/php-fpm.d/www.conf.default $Sdir/etc/php-fpm.d/www.confchmod +x $Sdir/bin/php-fpm-$Svln -s $Sdir/bin/php-fpm-$Sv /etc/init.d/php-fpm-$Svln -s $Sdir/etc/php-fpm.conf /etc/php-fpm/php-fpm-$Sv.confln -s $Sdir/etc/php.ini /etc/php/php-$Sv.inichkconfig --add php-fpm-$Svchkconfig php-fpm-$Sv onchkconfig --list php-fpm-$Svechocolor #显示版本$Sdir/bin/php -vmariadb1234567891011121314151617181920212223242526272829#!/bin/sh#php编译安装php ,Nginx+php使用#定义函数，默认绿色输出 '#' 开头为红色function echocolor()&#123; [[ $1 = '#' ]] &amp;&amp; echo -e "\033[31m $* \033[0m" || echo -e "\033[32m $* \033[0m"&#125;#检测网络ping baidu.com -c 2 &amp;&gt;/dev/null || ping qq.com -c 2 &amp;&gt;/dev/null || &#123; echocolor '#' "网络异常！";exit; &#125;#设置yum 安装包不删除 目录 /var/cache/yum/#sed -i 's/keepcache=0/keepcache=1/g' /etc/yum.confechocolor '#安装需要的库'yum groupinstall -y Development Toolsyum install -y ncurses-devel openssl-devel opensslgroupadd mysqluseradd -s /sbin/nologin -g mysql -M mysqlid mysqluid=500(mysql) gid=500(mysql) groups=500(mysql)echocolor "#创建数据库数据存放目录"mkdir /mydata/data -pvchown mysql:mysql /mydata/data/ -Rechocolor "#设置目录"echocolor "#下载目录"read Ddir[ -d $Ddir ] || mkdir -p $Ddirwget -c http://ftp.utexas.edu/mariadb//mariadb-10.3.8/source/mariadb-10.3.8.tar.gz -O $Ddir/mariadb.tar.gzechocolor "解压"[ -e $Ddir/mariadb.tar.gz ] &amp;&amp; &#123; tar xzvf $Ddir/mariadb*.tar.gz -C $Ddir/;cd $Ddir/mariadb*; &#125; || &#123; echocolor '#' "$Ddir目录无mariadb源码包";exit ; &#125;]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>编译</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[./configure: error: SSL modules require the OpenSSL library.]]></title>
    <url>%2Fposts%2F62587966%2F</url>
    <content type="text"><![CDATA[CentOS 7.2 下 ./configure Nginx 时出现以下错误 ./configure: error: SSL modules require the OpenSSL library. 解决方法： 执行以下命令：yum -y install openssl openssl-devel]]></content>
      <tags>
        <tag>configure</tag>
        <tag>OpenSSL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[configure: error: You need a C++ compiler for C++ support]]></title>
    <url>%2Fposts%2F7519910%2F</url>
    <content type="text"><![CDATA[linux下载安装pcre-8.35./configure --prefix=/usr/local/pcre 报错:configure: error: You need a C++ compiler for C++ support解决:yum install -y gcc gcc-c++]]></content>
      <tags>
        <tag>编译</tag>
        <tag>报错</tag>
        <tag>gcc-c++</tag>
        <tag>pcre</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nginx 编译安装]]></title>
    <url>%2Fposts%2Fe20a094%2F</url>
    <content type="text"><![CDATA[准备过程下载PCRE库，并解压下载zlib库，并解压下载Nginx的最新代码，解压编译安装过程写好各种参数，到Nginx的源码目录下运行配置命令。其中，还要使用参数指向刚才下载的PCRE和zlib库的位置:./configure \–prefix=/usr/local/nginx \–pid-path=/var/run/nginx.pid \–lock-path=/var/lock/nginx.lock \–with-http_ssl_module \–with-http_dav_module \–with-http_flv_module \–with-http_realip_module \–with-http_gzip_static_module \–with-http_stub_status_module \–with-mail –with-mail_ssl_module \–with-pcre=../pcre-8.37 \–with-zlib=../zlib-1.2.8 \–with-debug \–http-client-body-temp-path=/var/tmp/nginx/client \–http-proxy-temp-path=/var/tmp/nginx/proxy \–http-fastcgi-temp-path=/var/tmp/nginx/fastcgi \–http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \–http-scgi-temp-path=/var/tmp/nginx/scgi编译并安装make &amp;&amp; make install配置链接配置文件mkdir -p /etc/nginx/conf.d ln -s /usr/local/nginx/conf/nginx.conf /etc/nginx/ ln -s /usr/local/nginx/conf/fastcgi_params /etc/nginx/ 注册成服务脚本 先创建文件/etc/init.d/nginx 内容为:#!/bin/sh# chkconfig: 2345 85 15# description:Nginx ServerNGINX_HOME=/usr/local/nginxNGINX_SBIN=$NGINX_HOME/sbin/nginxNGINX_CONF=$NGINX_HOME/conf/nginx.confNGINX_PID=$NGINX_HOME/logs/nginx.pidNGINX_NAME=”Nginx”. /etc/rc.d/init.d/functionsif [ ! -f $NGINX_SBIN ]thenecho “$NGINX_NAME startup: $NGINX_SBIN not exists! “exitfistart() {$NGINX_SBIN -c $NGINX_CONFret=$?if [ $ret -eq 0 ]; thenaction $”Starting $NGINX_NAME: “ /bin/trueelseaction $”Starting $NGINX_NAME: “ /bin/falsefi}stop() {kill `cat $NGINX_PID`ret=$?if [ $ret -eq 0 ]; thenaction $”Stopping $NGINX_NAME: “ /bin/trueelseaction $”Stopping $NGINX_NAME: “ /bin/falsefi}restart() {stopstart}check() {$NGINX_SBIN -c $NGINX_CONF -t}reload() {kill -HUP `cat $NGINX_PID` &amp;&amp; echo “reload success!”}relog() {kill -USR1 `cat $NGINX_PID` &amp;&amp; echo “relog success!”}case “$1” instart)start;;stop)stop;;restart)restart;;check|chk)check;;status)status -p $NGINX_PID;;reload)reload;;relog)relog;;*)echo $”Usage: $0 {start|stop|restart|reload|status|check|relog}”exit 1esac通过chkconfig管理:chkconfig –add /etc/init.d/nginx加入开机自启动:chkconfig nginx on附录附上一些常用配置参数的含义：--prefix #nginx安装目录，默认在/usr/local/nginx --pid-path #pid问件位置，默认在logs目录 --lock-path #lock问件位置，默认在logs目录 --with-http_ssl_module #开启HTTP SSL模块，以支持HTTPS请求。 --with-http_dav_module #开启WebDAV扩展动作模块，可为文件和目录指定权限 --with-http_flv_module #支持对FLV文件的拖动播放 --with-http_realip_module #支持显示真实来源IP地址 --with-http_gzip_static_module #预压缩文件传前检查，防止文件被重复压缩 --with-http_stub_status_module #取得一些nginx的运行状态 --with-mail #允许POP3/IMAP4/SMTP代理模块 --with-mail_ssl_module #允许POP3／IMAP／SMTP可以使用SSL／TLS --with-pcre=../pcre-8.11 #注意是未安装的pcre路径 --with-zlib=../zlib-1.2.5 #注意是未安装的zlib路径 --with-debug #允许调试日志 --http-client-body-temp-path #客户端请求临时文件路径 --http-proxy-temp-path #设置http proxy临时文件路径 --http-fastcgi-temp-path #设置http fastcgi临时文件路径 --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi #设置uwsgi 临时文件路径 --http-scgi-temp-path=/var/tmp/nginx/scgi #设置scgi 临时文件路径]]></content>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[不重新编译PHP，单独添加扩展模块的方法]]></title>
    <url>%2Fposts%2F42280e4b%2F</url>
    <content type="text"><![CDATA[问题php自身提供了很多扩展，比如curl，gmp, mbstring等等。我们在编译安装php时未必安装了所有扩展。那么在安装完php后，如果想单独安装某个php自身的扩展怎么办呢？我们以curl扩展模块的安装为例说明如何单独添加扩展。步骤1.进入php源码的扩展目录。本例中我的源码对应目录如下：/root/.tmp/php72/php-7.2.7/ext/2.进入模块目录，我们安装的是gd扩展，所以进入gd目录。此时，我们所在的目录是/root/.tmp/php72/php-7.2.7/ext/gd3.执行phpize。注意，如果你的机器上有多个php版本，一定要执行你准备安装扩展的php版本对应的phpize。比如，我的机器上同时有php7.2和php5.6。我当前准备为php7.2安装gd扩展。所以执行php7.2对应的phpize/usr/local/php/php72/bin/phpize Configuring for: PHP Api Version: 20170718 Zend Module Api No: 20170718 Zend Extension Api No: 3201707184.configure./configure --with-php-config=/usr/local/php/php72/bin/php-config说明：如果你的机器上只有一个php版本，大多时候不需要特别使用–with-php-config指明相应的php-config所在位置。5.执行make，之后会在./modules/目录下生成gd.so文件6.执行make install结果类似： Installing shared extensions: /usr/local/php70/lib/php/20151012/7.修改php.iniextension=gd.so]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>编译</tag>
        <tag>nginx</tag>
        <tag>模块添加</tag>
      </tags>
  </entry>
</search>
