<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小叽の博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hexo.lilis.xin/"/>
  <updated>2019-09-12T09:36:21.478Z</updated>
  <id>https://hexo.lilis.xin/</id>
  
  <author>
    <name>小叽</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo 插件</title>
    <link href="https://hexo.lilis.xin/posts/54690ca6/"/>
    <id>https://hexo.lilis.xin/posts/54690ca6/</id>
    <published>2019-09-12T07:45:38.000Z</published>
    <updated>2019-09-12T09:36:21.478Z</updated>
    
    <content type="html"><![CDATA[<p>搜集整理常用的<code>hexo</code>插件<br><a id="more"></a></p><h4 id="hexo-github-card"><a href="#hexo-github-card" class="headerlink" title="hexo-github-card"></a>hexo-github-card</h4><div style="text-align:text-align_position"><div class="github-card" data-user="Gisonrg" data-repo="hexo-github-card" data-height="200" data-width="100%" data-theme="default" data-target="blank" data-client-id data-client-secret></div></div><script src="/github-card-lib/githubcard.js"></script><p>使用这个插件可以像上面这样👆显示逼格较高的GitHub链接<br>使用时只需要插入下面👇这个🏷️就可以了<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% githubCard user:your_user [repo:your_repo] [width:400] [height:200] [theme:default] [client_id:your_client_id] [client_secret:your_client_secret] [align:text-align_position] %&#125;</span><br></pre></td></tr></table></figure><p></p><p>这个插件的默认宽度感觉有点不够美观，每次使用都需要自定义宽度也有点费事，而且默认打开方式是在当前页面页打开很不人性化，我就在源文件<code>node_modules/hexo-github-card/index.js</code>进行了小的修改<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = argsObj.user,</span><br><span class="line">  repo = argsObj.repo,</span><br><span class="line">  width = argsObj.width || <span class="string">'100%'</span>,<span class="comment">//宽度自适应</span></span><br><span class="line">  height = argsObj.height || <span class="string">'200'</span>,</span><br><span class="line">  theme = argsObj.theme || <span class="string">'default'</span>,</span><br><span class="line">  client_id = argsObj.client_id || <span class="string">''</span>,</span><br><span class="line">  client_secret = argsObj.client_secret || <span class="string">''</span>,</span><br><span class="line">  align = argsObj.align || <span class="string">'center'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> payload = &#123;</span><br><span class="line">  user,</span><br><span class="line">  repo,</span><br><span class="line">  height,</span><br><span class="line">  width,</span><br><span class="line">  theme,</span><br><span class="line">  client_id,</span><br><span class="line">  client_secret,</span><br><span class="line">  style: <span class="string">`text-align: <span class="subst">$&#123;align&#125;</span>`</span>,</span><br><span class="line">  target: <span class="string">'blank'</span>,<span class="comment">//加上这个可以在其他标签页打开链接</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搜集整理常用的&lt;code&gt;hexo&lt;/code&gt;插件&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git本地仓库和裸仓库</title>
    <link href="https://hexo.lilis.xin/posts/ac107f22/"/>
    <id>https://hexo.lilis.xin/posts/ac107f22/</id>
    <published>2019-09-11T09:50:25.000Z</published>
    <updated>2019-09-12T06:27:03.599Z</updated>
    
    <content type="html"><![CDATA[<h4 id="git-初始化"><a href="#git-初始化" class="headerlink" title="git 初始化"></a>git 初始化</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git init #git目录初始化</span><br><span class="line">git init &lt;repo&gt; #本地初始化，并且建立一个名为repo的空仓库</span><br><span class="line">git init --bare #git裸仓库初始化</span><br><span class="line">git init --bare &lt;repo&gt; #指定某个目录成为中心仓库（裸仓库）</span><br></pre></td></tr></table></figure><p><code>git init</code>这个命令执行后会在本地生成一个 .git 的文件夹，用来追踪仓库的所有变更。<br><code>--bare</code>: 使用 –bare 参数初始化的仓库，我们一般称之为裸仓库， 因为这样创建的仓库并不包含 工作区 ， 也就是说，我们并不能在这个目录下执行我们一般使用的 Git 命令。<br><a id="more"></a></p><h5 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h5><ul><li><p>直接 git init 创建的仓库:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[core]</span><br><span class="line">repositoryformatversion = 0</span><br><span class="line">filemode = true</span><br><span class="line">bare = false</span><br><span class="line">logallrefupdates = true</span><br><span class="line">ignorecase = true</span><br><span class="line">precomposeunicode = true</span><br></pre></td></tr></table></figure></li><li><p>加了<code>--bare</code>创建的裸仓库:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[core]</span><br><span class="line">repositoryformatversion = 0</span><br><span class="line">filemode = true</span><br><span class="line">bare = true</span><br><span class="line">ignorecase = true</span><br><span class="line">precomposeunicode = true</span><br></pre></td></tr></table></figure></li></ul><p>可以看到最直观的差异在于<code>bare</code>配置项是否为<code>true</code>， 此外不加<code>--bare</code>创建的本地仓库配置中有一项<code>logallrefupdates = true</code>, 作用根据名字就可以看出来， 记录所有的<code>ref</code>(引用) 更新， 关于<code>ref</code>的部分之后有时间可以再写，这个配置可以理解为是 Git 的一道防线。</p><h4 id="功能差异"><a href="#功能差异" class="headerlink" title="功能差异"></a>功能差异</h4><p>我们可以使用最简单的例子演示一下。<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 直接创建本地仓库</span></span><br><span class="line">git ➤ git init repo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建裸仓库</span></span><br><span class="line">git ➤  git init --bare repo.git</span><br><span class="line"><span class="meta">#</span><span class="bash"> 分别 <span class="built_in">clone</span> 两个仓库</span></span><br><span class="line">git ➤ git clone repo test1</span><br><span class="line">正克隆到 'test1'...</span><br><span class="line">warning: 您似乎克隆了一个空版本库。</span><br><span class="line">完成。</span><br><span class="line">git ➤ git clone repo.git test2</span><br><span class="line">正克隆到 'test2'...</span><br><span class="line">warning: 您似乎克隆了一个空版本库。</span><br><span class="line">完成。</span><br><span class="line">git ➤</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入 test1 仓库</span></span><br><span class="line">git ➤ cd test1</span><br><span class="line">test1 ➤ touch test                                                                                                                                                                                   git:master</span><br><span class="line">test1 ➤ git add .                                                                                                                                                                                   git:master*</span><br><span class="line">test1 ➤ git commit -m '测试提交'                                                                                                                                                                    git:master*</span><br><span class="line">[master（根提交） 456cf23] 测试提交</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 test</span><br><span class="line">test1 ➤ git push origin master                                                                                                                                                                       git:master</span><br><span class="line">Counting objects: 3, done.</span><br><span class="line">Writing objects: 100% (3/3), 217 bytes | 0 bytes/s, done.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line">remote: error: refusing to update checked out branch: refs/heads/master</span><br><span class="line">remote: error: By default, updating the current branch in a non-bare repository</span><br><span class="line">remote: error: is denied, because it will make the index and work tree inconsistent</span><br><span class="line">remote: error: with what you pushed, and will require 'git reset --hard' to match</span><br><span class="line">remote: error: the work tree to HEAD.</span><br><span class="line">remote: error:</span><br><span class="line">remote: error: You can set 'receive.denyCurrentBranch' configuration variable to</span><br><span class="line">remote: error: 'ignore' or 'warn' in the remote repository to allow pushing into</span><br><span class="line">remote: error: its current branch; however, this is not recommended unless you</span><br><span class="line">remote: error: arranged to update its work tree to match what you pushed in some</span><br><span class="line">remote: error: other way.</span><br><span class="line">remote: error:</span><br><span class="line">remote: error: To squelch this message and still keep the default behaviour, set</span><br><span class="line">remote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.</span><br><span class="line">To /home/git/repo</span><br><span class="line"> ! [remote rejected] master -&gt; master (branch is currently checked out)</span><br><span class="line">error: 无法推送一些引用到 '/home/git/repo'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入 test2 仓库重复执行</span></span><br><span class="line">test1 ➤ cd ../test2                                                                                                                                                                                  git:master</span><br><span class="line">test2 ➤ touch test                                                                                                                                                                                   git:master</span><br><span class="line">test2 ➤ git add .                                                                                                                                                                                   git:master*</span><br><span class="line">test2 ➤ git commit -m '再次测试提交'                                                                                                                                                                git:master*</span><br><span class="line">[master（根提交） c56efe8] 再次测试提交</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 test</span><br><span class="line">test2 ➤ git push origin master                                                                                                                                                                       git:master</span><br><span class="line">Counting objects: 3, done.</span><br><span class="line">Writing objects: 100% (3/3), 223 bytes | 0 bytes/s, done.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line">To /home/git/repo.git</span><br><span class="line"> * [new branch]      master -&gt; master</span><br><span class="line">test2 ➤</span><br></pre></td></tr></table></figure><p></p><p>从裸仓库中<code>clone</code>下来的本地仓库可以正常的<code>push</code>操作，这也正是裸仓库的存在意义</p><p>原文链接：<br><a href="https://moelove.info/2016/12/04/Git-%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%92%8C%E8%A3%B8%E4%BB%93%E5%BA%93/" title="Git 本地仓库和裸仓库" target="_blank" rel="noopener">Git 本地仓库和裸仓库</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;git-初始化&quot;&gt;&lt;a href=&quot;#git-初始化&quot; class=&quot;headerlink&quot; title=&quot;git 初始化&quot;&gt;&lt;/a&gt;git 初始化&lt;/h4&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git init #git目录初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git init &amp;lt;repo&amp;gt; #本地初始化，并且建立一个名为repo的空仓库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git init --bare #git裸仓库初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git init --bare &amp;lt;repo&amp;gt; #指定某个目录成为中心仓库（裸仓库）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;git init&lt;/code&gt;这个命令执行后会在本地生成一个 .git 的文件夹，用来追踪仓库的所有变更。&lt;br&gt;&lt;code&gt;--bare&lt;/code&gt;: 使用 –bare 参数初始化的仓库，我们一般称之为裸仓库， 因为这样创建的仓库并不包含 工作区 ， 也就是说，我们并不能在这个目录下执行我们一般使用的 Git 命令。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git 合并操作</title>
    <link href="https://hexo.lilis.xin/posts/150d1834/"/>
    <id>https://hexo.lilis.xin/posts/150d1834/</id>
    <published>2019-09-11T07:36:04.000Z</published>
    <updated>2019-09-12T06:27:03.599Z</updated>
    
    <content type="html"><![CDATA[<h3 id="git-合并操作"><a href="#git-合并操作" class="headerlink" title="git 合并操作"></a>git 合并操作</h3><p>通过<code>git log</code>查看提交记录及其commitId<br>再通过<code>git reset --soft commitId</code>来回退版本(–soft 和 –hard的区别就是 –soft是软回退，会将你这次commitId之后的提交全部回退到暂存区中，–hard会将你<br>这次commitId之后的提交全部清除掉)<br>此时你这次commitId之后的提交都会回到暂存区中<br>git commit -m 随便写注释</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;git-合并操作&quot;&gt;&lt;a href=&quot;#git-合并操作&quot; class=&quot;headerlink&quot; title=&quot;git 合并操作&quot;&gt;&lt;/a&gt;git 合并操作&lt;/h3&gt;&lt;p&gt;通过&lt;code&gt;git log&lt;/code&gt;查看提交记录及其commitId&lt;br&gt;再通过&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基于Redis的GeoHash在PHP上的应用</title>
    <link href="https://hexo.lilis.xin/posts/3dd74411/"/>
    <id>https://hexo.lilis.xin/posts/3dd74411/</id>
    <published>2018-11-29T07:26:08.000Z</published>
    <updated>2019-09-12T06:27:03.599Z</updated>
    
    <content type="html"><![CDATA[<p>GeoHash有着以下几个特点</p><ol><li>GeoHash用一个字符串表示经度和纬度两个坐标,便于加上索引.</li><li>GeoHash表示的并不是一个点，而是一个矩形区域.</li><li>编码的前缀可以表示更大的区域, 可以很方便的进行区域检索, 聚合等相关操作.</li></ol><p>综上所述, GeoHash比直接用经纬度的高效很多.</p><a id="more"></a><h3 id="GeoHash算法"><a href="#GeoHash算法" class="headerlink" title="GeoHash算法"></a>GeoHash算法</h3><p>编码</p><ul><li>GeoHash首先将精度范围设定为划分成两个区间(-180, 0), (0, 180), 如果经度坐标落到了前一个区间则标记为0, 反之则标记为1.</li><li>然后再将上一步获得到的区间划分成两个区间, 重复上一步.</li><li>重复前前两步直到得到自己所需要的精度</li><li><p>以此类推来得到纬度的HashBin (关于纬度的初始划分区间, 一般的共用算法里都是±90, 而redis里用的却是±85.05112878)<br>如 (23.17015353059966287, 113.46623629331588745) 通过区间划分可以得到:<br>(1101000010101111111001011110, 101000101101111011011100011)</p></li><li><p>接下来是对划分结果的合并, 按照<code>奇数位是纬度, 偶数位为经度</code>的原则来进行合并.<br>上面的例子合并可得:<br>1110011000000100110110011111111011111001011100101011110</p></li><li>之后再按照非标准的base32算法进行字符串的转化, 下面是对照表格</li></ul><table><thead><tr><th>十进制</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>14</th><th>15</th></tr></thead><tbody><tr><td>二进制</td><td>00000</td><td>00001</td><td>00010</td><td>00011</td><td>00100</td><td>00101</td><td>00110</td><td>00111</td><td>01000</td><td>01001</td><td>01010</td><td>01011</td><td>01100</td><td>01101</td><td>01110</td><td>01111</td></tr><tr><td>base32</td><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td><td>b</td><td>c</td><td>d</td><td>e</td><td>f</td><td>g</td></tr><tr><td>十进制</td><td>16</td><td>17</td><td>18</td><td>19</td><td>20</td><td>21</td><td>22</td><td>23</td><td>24</td><td>25</td><td>26</td><td>27</td><td>28</td><td>29</td><td>30</td><td>31</td></tr><tr><td>二进制</td><td>10000</td><td>10001</td><td>10010</td><td>10011</td><td>10100</td><td>10101</td><td>10110</td><td>10111</td><td>11000</td><td>11001</td><td>11010</td><td>11011</td><td>11100</td><td>11101</td><td>11110</td><td>11111</td></tr><tr><td>base32</td><td>h</td><td>j</td><td>k</td><td>m</td><td>n</td><td>p</td><td>q</td><td>r</td><td>s</td><td>t</td><td>u</td><td>v</td><td>w</td><td>x</td><td>y</td><td>z</td></tr></tbody></table><p>最终(23.17015353059966287, 113.46623629331588745)被转化成’ws2emzrtfby’.</p><p>解码则和编码正好相反即可.</p><h3 id="PHP的实现"><a href="#PHP的实现" class="headerlink" title="PHP的实现"></a>PHP的实现</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Geohash</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> $coding    = <span class="string">'0123456789bcdefghjkmnpqrstuvwxyz'</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> $codingMap = [</span><br><span class="line">        <span class="string">'0'</span> =&gt; <span class="string">'00000'</span>, <span class="string">'1'</span> =&gt; <span class="string">'00001'</span>, <span class="string">'2'</span> =&gt; <span class="string">'00010'</span>,</span><br><span class="line">        <span class="string">'3'</span> =&gt; <span class="string">'00011'</span>, <span class="string">'4'</span> =&gt; <span class="string">'00100'</span>, <span class="string">'5'</span> =&gt; <span class="string">'00101'</span>,</span><br><span class="line">        <span class="string">'6'</span> =&gt; <span class="string">'00110'</span>, <span class="string">'7'</span> =&gt; <span class="string">'00111'</span>, <span class="string">'8'</span> =&gt; <span class="string">'01000'</span>,</span><br><span class="line">        <span class="string">'9'</span> =&gt; <span class="string">'01001'</span>, <span class="string">'b'</span> =&gt; <span class="string">'01010'</span>, <span class="string">'c'</span> =&gt; <span class="string">'01011'</span>,</span><br><span class="line">        <span class="string">'d'</span> =&gt; <span class="string">'01100'</span>, <span class="string">'e'</span> =&gt; <span class="string">'01101'</span>, <span class="string">'f'</span> =&gt; <span class="string">'01110'</span>,</span><br><span class="line">        <span class="string">'g'</span> =&gt; <span class="string">'01111'</span>, <span class="string">'h'</span> =&gt; <span class="string">'10000'</span>, <span class="string">'j'</span> =&gt; <span class="string">'10001'</span>,</span><br><span class="line">        <span class="string">'k'</span> =&gt; <span class="string">'10010'</span>, <span class="string">'m'</span> =&gt; <span class="string">'10011'</span>, <span class="string">'n'</span> =&gt; <span class="string">'10100'</span>,</span><br><span class="line">        <span class="string">'p'</span> =&gt; <span class="string">'10101'</span>, <span class="string">'q'</span> =&gt; <span class="string">'10110'</span>, <span class="string">'r'</span> =&gt; <span class="string">'10111'</span>,</span><br><span class="line">        <span class="string">'s'</span> =&gt; <span class="string">'11000'</span>, <span class="string">'t'</span> =&gt; <span class="string">'11001'</span>, <span class="string">'u'</span> =&gt; <span class="string">'11010'</span>,</span><br><span class="line">        <span class="string">'v'</span> =&gt; <span class="string">'11011'</span>, <span class="string">'w'</span> =&gt; <span class="string">'11100'</span>, <span class="string">'x'</span> =&gt; <span class="string">'11101'</span>,</span><br><span class="line">        <span class="string">'y'</span> =&gt; <span class="string">'11110'</span>, <span class="string">'z'</span> =&gt; <span class="string">'11111'</span></span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">decode</span><span class="params">(string $hash, $number = false)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($number) &#123;</span><br><span class="line">            $binary = base_convert($hash, <span class="number">10</span>, <span class="number">2</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $binary = <span class="string">''</span>;</span><br><span class="line">            $hl     = strlen($hash);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;$hl; $i++) &#123;</span><br><span class="line">                $binary .= <span class="keyword">self</span>::$codingMap[substr($hash,$i,<span class="number">1</span>)];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $bl    = strlen($binary);</span><br><span class="line">        $blat  = <span class="string">''</span>;</span><br><span class="line">        $blong = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//取出经纬度</span></span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;$bl; $i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ($i%<span class="number">2</span>)</span><br><span class="line">                $blat  = $blat.substr($binary,$i,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                $blong = $blong.substr($binary,$i,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//翻译经纬度</span></span><br><span class="line">        <span class="keyword">list</span>(</span><br><span class="line">            $lat,</span><br><span class="line">            $latErr</span><br><span class="line">            ) = <span class="keyword">self</span>::binDecode($blat,<span class="number">-85.05112878</span>,<span class="number">85.05112878</span>);</span><br><span class="line">        <span class="keyword">list</span>(</span><br><span class="line">            $long,</span><br><span class="line">            $longErr</span><br><span class="line">            ) = <span class="keyword">self</span>::binDecode($blong,<span class="number">-180</span>,<span class="number">180</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//精度处理</span></span><br><span class="line">        $latPlaces  = max(<span class="number">1</span>, -round(log10($latErr))) - <span class="number">1</span>;</span><br><span class="line">        $longPlaces = max(<span class="number">1</span>, -round(log10($longErr))) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        $lat        = round($lat, $latPlaces);</span><br><span class="line">        $long       = round($long, $longPlaces);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$lat, $long];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">hash2num</span><span class="params">(string $hash, $bin = false)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        $binary = <span class="string">''</span>;</span><br><span class="line">        $hl     = strlen($hash);</span><br><span class="line">        <span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;$hl; $i++)</span><br><span class="line">        &#123;</span><br><span class="line">            $binary .= <span class="keyword">self</span>::$codingMap[substr($hash,$i,<span class="number">1</span>)];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($bin)</span><br><span class="line">            <span class="keyword">return</span> $binary;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> base_convert(substr($binary, <span class="number">0</span>, <span class="number">52</span>), <span class="number">2</span>, <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 坐标转化</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $lat</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $long</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">encode</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        $lat, $long,</span></span></span><br><span class="line"><span class="function"><span class="params">        bool $number = false</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> :<span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="comment">//计算lat精度</span></span><br><span class="line">        $latbits = <span class="number">1</span>;</span><br><span class="line">        $err     = <span class="number">45</span>;</span><br><span class="line">        $plat    = <span class="keyword">self</span>::precision($lat);</span><br><span class="line">        <span class="comment">//计算计算次数</span></span><br><span class="line">        <span class="keyword">while</span>($err &gt; $plat)</span><br><span class="line">        &#123;</span><br><span class="line">            $err     /= <span class="number">2</span>;</span><br><span class="line">            $latbits ++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $longbits = <span class="number">1</span>;</span><br><span class="line">        $err      = <span class="number">90</span>;</span><br><span class="line">        $plong    = <span class="keyword">self</span>::precision($long);</span><br><span class="line">        <span class="keyword">while</span>($err &gt; $plong)</span><br><span class="line">        &#123;</span><br><span class="line">            $err      /= <span class="number">2</span>;</span><br><span class="line">            $longbits ++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $bits     = max($latbits, $longbits);</span><br><span class="line"></span><br><span class="line">        $longbits = $bits;</span><br><span class="line">        $latbits  = $bits;</span><br><span class="line">        $addlong  = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//为了可以进行合并填充数位 2^5 = 32</span></span><br><span class="line">        <span class="keyword">while</span> (($longbits+$latbits)%<span class="number">5</span> != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $longbits += $addlong;</span><br><span class="line">            $latbits  += !$addlong;</span><br><span class="line">            $addlong  = !$addlong;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $blat     = <span class="keyword">self</span>::binEncode($lat,<span class="number">90</span>, <span class="number">90</span>, $latbits);</span><br><span class="line">        $blong    = <span class="keyword">self</span>::binEncode($long, <span class="number">-180</span>, <span class="number">180</span>, $longbits);</span><br><span class="line"></span><br><span class="line">        $binary  = <span class="string">''</span>;</span><br><span class="line">        $uselong = <span class="number">1</span>;</span><br><span class="line">        $strlen  = strlen($blat) + strlen($blong);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//合并位数</span></span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i&lt;$strlen; $i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($uselong)</span><br><span class="line">            &#123;</span><br><span class="line">                $binary .= substr($blong,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">                $blong  = substr($blong,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                $binary .= substr($blat,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">                $blat   = substr($blat,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $uselong = !$uselong;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($number)</span><br><span class="line">            <span class="keyword">return</span> bindec(substr($binary, <span class="number">0</span>, <span class="number">52</span>));</span><br><span class="line"></span><br><span class="line">        $hash = <span class="string">''</span>;</span><br><span class="line">        $leng = strlen($binary);</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;$leng; $i+=<span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $n    = bindec(substr($binary,$i,<span class="number">5</span>));</span><br><span class="line">            $hash = $hash. <span class="keyword">self</span>::$coding[$n];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $hash;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算精度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> float $number</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> float|int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">precision</span><span class="params">(float $number)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $precision = <span class="number">0</span>;</span><br><span class="line">        $pt        = strpos($number,<span class="string">'.'</span>);</span><br><span class="line">        <span class="keyword">if</span> ($pt !== <span class="keyword">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $precision = - (strlen($number) - $pt - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pow(<span class="number">10</span>, $precision) / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">binEncode</span><span class="params">($number, $min, $max, $bitcount)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($bitcount == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">        $mid = bcdiv(bcadd($min, $max, <span class="number">52</span>), <span class="number">2</span>, <span class="number">52</span>);</span><br><span class="line">        <span class="keyword">if</span> (bccomp($number, $mid, <span class="number">52</span>) == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'1'</span>. <span class="keyword">self</span>::binEncode(</span><br><span class="line">                $number, $mid,</span><br><span class="line">                $max,$bitcount<span class="number">-1</span></span><br><span class="line">            );</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">'0'</span>. <span class="keyword">self</span>::binEncode(</span><br><span class="line">                $number, $min,</span><br><span class="line">                $mid,$bitcount<span class="number">-1</span></span><br><span class="line">            );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">binDecode</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        $binary, $min,</span></span></span><br><span class="line"><span class="function"><span class="params">        $max</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>&#123;</span><br><span class="line">        $binlen = strlen($binary);</span><br><span class="line">        $err    = bcsub($max, $min, <span class="number">52</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $binlen; $i++) &#123;</span><br><span class="line">            $bit = substr($binary,$i,<span class="number">1</span>);</span><br><span class="line">            $mid = bcdiv(bcadd($min, $max, <span class="number">52</span>), <span class="number">2</span>, <span class="number">52</span>);</span><br><span class="line">            $err = bcdiv($err, <span class="number">2</span>, <span class="number">52</span>);</span><br><span class="line">            <span class="keyword">if</span> ($bit == <span class="number">1</span>) &#123;</span><br><span class="line">                $min = $mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $max = $mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$mid, $err];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Redis上的应用"><a href="#Redis上的应用" class="headerlink" title="Redis上的应用"></a>Redis上的应用</h3><p>Redis的GEO特性在<code>Redis 3.2</code>版本释出,这个功能可以将用户给定的地理位置信息储存起来,并对这些信息进行操作.</p><p><code>GEOADD</code><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GEOADD key longitude latitude name [longitude latitude name ...]</span><br></pre></td></tr></table></figure><p></p><p>GEOADD 命令每次可以添加一个或多个经纬度地理位置。 其中<code>key</code>为储存地理位置的集合， 而 <code>longitude</code> 、 <code>latitude</code> 和 <code>name</code> 则分别为地理位置的经度、纬度、名字.<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; GEOADD geo_test 113.46623629331588745 23.17015353059966287 test_1 113.46620947122573853 23.17010790561879929 test_2</span><br></pre></td></tr></table></figure><p></p><p><code>GEOPOS</code><br><code>GEOPOS</code> 命令可以获取Geo的坐标<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GEOPOS key name [name ...]</span><br></pre></td></tr></table></figure><p></p><p>如:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; geopos geo_test test_2</span><br><span class="line">1) 1) &quot;113.46620947122573853&quot;</span><br><span class="line">   2) &quot;23.17010790561879929&quot;</span><br></pre></td></tr></table></figure><p></p><p><code>GEODIST</code><br>计算两个坐标点之间的距离<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GEODIST key location-x location-y [unit]</span><br></pre></td></tr></table></figure><p></p><p>其中<code>unit</code>表示单位 默认为 <code>m</code></p><ul><li><code>m</code> 表示单位为米。</li><li><code>km</code> 表示单位为千米。</li><li><code>mi</code> 表示单位为英里。</li><li><code>ft</code> 表示单位为英尺。</li></ul><p><code>GEORADIUS</code> 和 <code>GEORADIUSBYMEMBER</code><br>这两个命令都是获取一定范围内的坐标<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GEORADIUS key longitude latitude radius m|km|ft|mi[WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]</span><br><span class="line">GEORADIUSBYMEMBER key location radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]</span><br></pre></td></tr></table></figure><p></p><ul><li><code>WITHCOORD</code> 在返回匹配的位置时会将位置的经纬度一并返回.</li><li><code>WITHDIST</code> 指定中心返回项目的距离, 距离以与指定为命令的radius参数的单位相同的单位返回.</li><li><code>WITHHASH</code> 还以52位无符号整数的形式返回项的原始geohash编码的有序集分数</li><li><code>ASC|DESC</code> <code>ASC</code> 可以让查找结果根据距离从近到远排序， 而 <code>DESC</code> 则可以让查找结果根据从远到近排序</li><li><code>COUNT</code> 指定要返回的结果数量</li><li><code>STORE key</code> 结果存到新的有序集合中, 以<code>GeoHash</code>值做<code>score</code>, 该选项与<code>WITH[DIST|COORD|HASH]</code>选项冲突</li><li><code>STOREDIST key</code> 结果存到新的有序集合中, 以与指定位置的距离作<code>score</code>, 该选项与<code>WITH[DIST|COORD|HASH]</code>选项冲突<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; georadius key 113.46620947122573853 23.17010790561879929 100 km WITHCOORD WITHDIST</span><br><span class="line">1) 1) &quot;test_2&quot;</span><br><span class="line">   2) &quot;0.0000&quot;</span><br><span class="line">   3) 1) &quot;113.46620947122573853&quot;</span><br><span class="line">      2) &quot;23.17010790561879929&quot;</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure></li></ul><p><code>GEOHASH</code><br>将redis里的<code>Geo</code>转化为标准的<code>GeoHash</code>输出<br>注意:这里输出的是标准的<code>GeoHash</code>, 不是redis里面存储的<code>HashInt</code>转化出来的<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GEOHASH key member [member ...]</span><br></pre></td></tr></table></figure><p></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; geohash geo_test test_1 test_2</span><br><span class="line">1) &quot;7pkg3sdkv40&quot;</span><br><span class="line">2) &quot;ws0evczxdm0&quot;</span><br></pre></td></tr></table></figure><h4 id="存储原理"><a href="#存储原理" class="headerlink" title="存储原理"></a>存储原理</h4><p><code>Redis</code>里的<code>Geo</code>坐标在实际存储时是将<code>gps</code>坐标分别按照(-180, 180)和(-85.05112878, 85.05112878)来划分计算成<code>HashInt</code>作为<code>zset集合</code>进行存储的.<br>所以<code>Redis</code>的<code>Geo</code>操作中并没有删除命令, 可以直接使用<code>zrem</code>命令去删除<code>Geo</code>坐标.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GeoHash有着以下几个特点&lt;/p&gt;&lt;ol&gt;&lt;li&gt;GeoHash用一个字符串表示经度和纬度两个坐标,便于加上索引.&lt;/li&gt;&lt;li&gt;GeoHash表示的并不是一个点，而是一个矩形区域.&lt;/li&gt;&lt;li&gt;编码的前缀可以表示更大的区域, 可以很方便的进行区域检索, 聚合等相关操作.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;综上所述, GeoHash比直接用经纬度的高效很多.&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="https://hexo.lilis.xin/tags/PHP/"/>
    
      <category term="redis" scheme="https://hexo.lilis.xin/tags/redis/"/>
    
      <category term="GeoHash" scheme="https://hexo.lilis.xin/tags/GeoHash/"/>
    
      <category term="GPS" scheme="https://hexo.lilis.xin/tags/GPS/"/>
    
  </entry>
  
  <entry>
    <title>nginx服务脚本</title>
    <link href="https://hexo.lilis.xin/posts/5bc4c6e7/"/>
    <id>https://hexo.lilis.xin/posts/5bc4c6e7/</id>
    <published>2018-11-14T04:49:30.000Z</published>
    <updated>2019-09-12T06:27:03.599Z</updated>
    
    <content type="html"><![CDATA[<p>nginx服务脚本</p><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> nginx - this script starts and stops the nginx daemin</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chkconfig:   - 85 15 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> description:  Nginx is an HTTP(S) server, HTTP(S) reverse \</span></span><br><span class="line"><span class="meta">#</span><span class="bash">               proxy and IMAP/POP3 proxy server</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> processname: nginx</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> config:      /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> pidfile:     /usr/<span class="built_in">local</span>/nginx/logs/nginx.pid</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Source <span class="keyword">function</span> library.</span></span><br><span class="line">. /etc/rc.d/init.d/functions</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Source networking configuration.</span></span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Check that networking is up.</span></span><br><span class="line">[ "$NETWORKING" = "no" ] &amp;&amp; exit 0</span><br><span class="line"></span><br><span class="line">nginx="/usr/local/sbin/nginx"</span><br><span class="line">prog=$(basename $nginx)</span><br><span class="line"></span><br><span class="line">NGINX_CONF_FILE="/usr/local/nginx/conf/nginx.conf"</span><br><span class="line"></span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line"></span><br><span class="line">start() &#123;</span><br><span class="line">    [ -x $nginx ] || exit 5</span><br><span class="line">    [ -f $NGINX_CONF_FILE ] || exit 6</span><br><span class="line">    echo -n $"Starting $prog: "</span><br><span class="line">    daemon $nginx -c $NGINX_CONF_FILE</span><br><span class="line">    retval=$?</span><br><span class="line">    echo</span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; touch $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop() &#123;</span><br><span class="line">    echo -n $"Stopping $prog: "</span><br><span class="line">    killproc $prog -QUIT</span><br><span class="line">    retval=$?</span><br><span class="line">    echo</span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">restart() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    stop</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">reload() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    echo -n $"Reloading $prog: "</span><br><span class="line">    killproc $nginx -HUP</span><br><span class="line">    RETVAL=$?</span><br><span class="line">    echo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">force_reload() &#123;</span><br><span class="line">    restart</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">configtest() &#123;</span><br><span class="line"><span class="meta">  $</span><span class="bash">nginx -t -c <span class="variable">$NGINX_CONF_FILE</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rh_status() &#123;</span><br><span class="line">    status $prog</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rh_status_q() &#123;</span><br><span class="line">    rh_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case "$1" in</span><br><span class="line">    start)</span><br><span class="line">        rh_status_q &amp;&amp; exit 0</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    restart|configtest)</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        rh_status_q || exit 7</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    force-reload)</span><br><span class="line">        force_reload</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        rh_status</span><br><span class="line">        ;;</span><br><span class="line">    condrestart|try-restart)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">            ;;</span><br><span class="line">    *)</span><br><span class="line">        echo $"Usage: $0 &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;"</span><br><span class="line">        exit 2</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;nginx服务脚本&lt;/p&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="https://hexo.lilis.xin/tags/nginx/"/>
    
      <category term="server" scheme="https://hexo.lilis.xin/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>PHP动态gif验证码</title>
    <link href="https://hexo.lilis.xin/posts/491b8778/"/>
    <id>https://hexo.lilis.xin/posts/491b8778/</id>
    <published>2018-11-08T04:02:23.000Z</published>
    <updated>2019-09-12T06:27:03.598Z</updated>
    
    <content type="html"><![CDATA[<p>最近感觉自己的项目上的验证码太low了,决定换一个有意思的动态gif验证码<br><a id="more"></a><br>效果<br><img src="https://blog.lilis.xin/wp-admin/Captcha.php" alt="Captcha" title="Captcha"><br>废话不多说,直接上源码</p><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><p>主函数:<br><a href="https://blog.lilis.xin/wp-admin/fonts/comic.ttf" title="comic.ttf" target="_blank" rel="noopener">comic.ttf</a><br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ImageCode</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        $string=<span class="string">''</span>, $frames = <span class="number">60</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        $time = <span class="number">1</span>,$width=<span class="number">75</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        $height=<span class="number">25</span>, $font = <span class="number">6</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        $loops = <span class="number">0</span></span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>&#123;</span><br><span class="line">        $authstr = $string?:((time()%<span class="number">2</span>==<span class="number">0</span>)?mt_rand(<span class="number">1000</span>,<span class="number">9999</span>):mt_rand(<span class="number">10000</span>,<span class="number">99999</span>));</span><br><span class="line">        $authlen = strlen($authstr);</span><br><span class="line">        $board_width=$width;</span><br><span class="line">        $board_height=$height;</span><br><span class="line">        $delay = $time*<span class="number">100</span>/$frames;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成一个n帧的GIF动画</span></span><br><span class="line">        <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$frames;$i++)&#123;</span><br><span class="line">            ob_start();</span><br><span class="line">            $image=imagecreate($board_width,$board_height);</span><br><span class="line">            imagecolorallocate($image,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设定文字颜色数组</span></span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">15</span>,<span class="number">73</span>,<span class="number">210</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">64</span>,<span class="number">0</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">0</span>,<span class="number">64</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">128</span>,<span class="number">128</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">27</span>,<span class="number">52</span>,<span class="number">47</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">51</span>,<span class="number">0</span>,<span class="number">102</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">0</span>,<span class="number">145</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">0</span>,<span class="number">113</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">51</span>,<span class="number">51</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">158</span>,<span class="number">180</span>,<span class="number">35</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">59</span>,<span class="number">59</span>,<span class="number">59</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">1</span>,<span class="number">128</span>,<span class="number">180</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">153</span>,<span class="number">51</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">60</span>,<span class="number">131</span>,<span class="number">1</span>);</span><br><span class="line">            $colorList[]=imagecolorallocate($image,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">            $gray=imagecolorallocate($image,<span class="number">245</span>,<span class="number">245</span>,<span class="number">245</span>);</span><br><span class="line">            imagefill($image,<span class="number">0</span>,<span class="number">0</span>,$gray);</span><br><span class="line">            $space=$font*<span class="number">0.65</span>;<span class="comment">// 字符间距</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>($k=<span class="number">0</span>;$k&lt;$authlen;$k++)&#123;</span><br><span class="line">                $colorRandom=mt_rand(<span class="number">0</span>,sizeof($colorList)<span class="number">-1</span>);</span><br><span class="line">                $float_top=rand(<span class="number">0</span>,<span class="number">4</span>);</span><br><span class="line">                $float_left=rand(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line">                imagettftext(</span><br><span class="line">                    $image, $font, <span class="number">0</span>,</span><br><span class="line">                    $space*$k+$float_left, $font+$float_top,</span><br><span class="line">                    $colorList[$colorRandom],</span><br><span class="line">                    <span class="string">'./fonts/comic.ttf'</span>,</span><br><span class="line">                    substr($authstr,$k,<span class="number">1</span>)</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>($k=<span class="number">0</span>;$k&lt;<span class="number">20</span>;$k++)&#123;</span><br><span class="line">                $colorRandom=mt_rand(<span class="number">0</span>,sizeof($colorList)<span class="number">-1</span>);</span><br><span class="line">                imagesetpixel($image,rand()%<span class="number">70</span>,rand()%<span class="number">15</span>,$colorList[$colorRandom]);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 添加干扰线</span></span><br><span class="line">            <span class="keyword">for</span>($k=<span class="number">0</span>;$k&lt;<span class="number">3</span>;$k++)&#123;</span><br><span class="line">                $colorRandom=mt_rand(<span class="number">0</span>,sizeof($colorList)<span class="number">-1</span>);</span><br><span class="line">                $toDrawLine=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>($toDrawLine)&#123;</span><br><span class="line">                    imageline($image,mt_rand(<span class="number">0</span>,$board_width),mt_rand(<span class="number">0</span>,$board_height),mt_rand(<span class="number">0</span>,$board_width),mt_rand(<span class="number">0</span>,$board_height),$colorList[$colorRandom]);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    $w=mt_rand(<span class="number">0</span>,$board_width);</span><br><span class="line">                    $h=mt_rand(<span class="number">0</span>,$board_width);</span><br><span class="line">                    imagearc($image,$board_width-floor($w / <span class="number">2</span>),floor($h / <span class="number">2</span>),$w,$h, rand(<span class="number">90</span>,<span class="number">180</span>),rand(<span class="number">180</span>,<span class="number">270</span>),$colorList[$colorRandom]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            imagegif($image);</span><br><span class="line">            imagedestroy($image);</span><br><span class="line">            $imagedata[]=ob_get_contents();</span><br><span class="line">            $delays[] = $delay;</span><br><span class="line">            ob_clean();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AnimatedGif($imagedata, $delays, $loops);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p></p><p>AnimatedGif:<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *AnimatedGif类</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnimatedGif</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The built gif image</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> resource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> $image = <span class="string">''</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The array of images to stack</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> $buffer = <span class="keyword">Array</span>();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * How many times to loop? 0 = infinite</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> $number_of_loops = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> $DIS = <span class="number">2</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Which colour is transparent</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> $transparent_colour = <span class="number">-1</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Is this the first frame</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> $first_frame = <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Encode an animated gif</span></span><br><span class="line"><span class="comment">     * AnimatedGif constructor.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $source_images</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $image_delays</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $number_of_loops</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        array $source_images,</span></span></span><br><span class="line"><span class="function"><span class="params">        array $image_delays,</span></span></span><br><span class="line"><span class="function"><span class="params">        $number_of_loops</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * I have no idea what these even do, they appear to do nothing to the image so far</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        $transparent_colour_red = <span class="number">0</span>;</span><br><span class="line">        $transparent_colour_green = <span class="number">0</span>;</span><br><span class="line">        $transparent_colour_blue = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;number_of_loops = ( $number_of_loops &gt; <span class="number">-1</span> ) ? $number_of_loops : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;set_transparent_colour($transparent_colour_red, $transparent_colour_green, $transparent_colour_blue);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;buffer_images($source_images);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;addHeader();</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; count(<span class="keyword">$this</span>-&gt;buffer); $i++) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;addFrame($i, $image_delays [$i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Set the transparent colour</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $red</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $green</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $blue</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">set_transparent_colour</span><span class="params">($red, $green, $blue)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;transparent_colour = ( $red &gt; <span class="number">-1</span> &amp;&amp; $green &gt; <span class="number">-1</span> &amp;&amp; $blue &gt; <span class="number">-1</span> ) ?</span><br><span class="line">            ( $red | ( $green &lt;&lt; <span class="number">8</span> ) | ( $blue &lt;&lt; <span class="number">16</span> ) ) : <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Buffer the images and check to make sure they are vaild</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $source_images</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">buffer_images</span><span class="params">($source_images)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; count($source_images); $i++) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;buffer [] = $source_images [$i];</span><br><span class="line">            <span class="keyword">if</span> (substr(<span class="keyword">$this</span>-&gt;buffer [$i], <span class="number">0</span>, <span class="number">6</span>) != <span class="string">"GIF87a"</span> &amp;&amp; substr(<span class="keyword">$this</span>-&gt;buffer [$i], <span class="number">0</span>, <span class="number">6</span>) != <span class="string">"GIF89a"</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'Image at position '</span> . $i. <span class="string">' is not a gif'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> ($j = ( <span class="number">13</span> + <span class="number">3</span> * ( <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [$i] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> ) ) ), $k = <span class="keyword">TRUE</span>; $k; $j++) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (<span class="keyword">$this</span>-&gt;buffer [$i] &#123; $j &#125;) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"!"</span>:</span><br><span class="line">                        <span class="keyword">if</span> (( substr(<span class="keyword">$this</span>-&gt;buffer [$i], ( $j + <span class="number">3</span>), <span class="number">8</span>) ) == <span class="string">"NETSCAPE"</span>) &#123;</span><br><span class="line">                            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'You cannot make an animation from an animated gif.'</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">";"</span>:</span><br><span class="line">                        $k = <span class="keyword">FALSE</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add the gif header to the image</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">addHeader</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $cmap = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;image = <span class="string">'GIF89a'</span>;</span><br><span class="line">        <span class="keyword">if</span> (ord(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x80</span>) &#123;</span><br><span class="line">            $cmap = <span class="number">3</span> * ( <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> ) );</span><br><span class="line">            <span class="keyword">$this</span>-&gt;image .= substr(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>], <span class="number">6</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;image .= substr(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>], <span class="number">13</span>, $cmap);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;image .= <span class="string">"!\377\13NETSCAPE2.0\3\1"</span> . <span class="keyword">$this</span>-&gt;word(<span class="keyword">$this</span>-&gt;number_of_loops) . <span class="string">"\0"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add a frame to the animation</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $frame The frame to be added</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $delay The delay associated with the frame</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">addFrame</span><span class="params">($frame, $delay)</span> </span>&#123;</span><br><span class="line">        $Locals_str = <span class="number">13</span> + <span class="number">3</span> * ( <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> ) );</span><br><span class="line">        $Locals_end = strlen(<span class="keyword">$this</span>-&gt;buffer [$frame]) - $Locals_str - <span class="number">1</span>;</span><br><span class="line">        $Locals_tmp = substr(<span class="keyword">$this</span>-&gt;buffer [$frame], $Locals_str, $Locals_end);</span><br><span class="line">        $Global_len = <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> );</span><br><span class="line">        $Locals_len = <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> );</span><br><span class="line">        $Global_rgb = substr(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>], <span class="number">13</span>, <span class="number">3</span> * ( <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> ) ));</span><br><span class="line">        $Locals_rgb = substr(<span class="keyword">$this</span>-&gt;buffer [$frame], <span class="number">13</span>, <span class="number">3</span> * ( <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> ) ));</span><br><span class="line">        $Locals_ext = <span class="string">"!\xF9\x04"</span> . chr(( <span class="keyword">$this</span>-&gt;DIS &lt;&lt; <span class="number">2</span> ) + <span class="number">0</span>) .</span><br><span class="line">            chr(( $delay &gt;&gt; <span class="number">0</span> ) &amp; <span class="number">0xFF</span>) . chr(( $delay &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span>) . <span class="string">"\x0\x0"</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;transparent_colour &gt; <span class="number">-1</span> &amp;&amp; ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x80</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> ($j = <span class="number">0</span>; $j &lt; ( <span class="number">2</span> &lt;&lt; ( ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> ) ); $j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (</span><br><span class="line">                    ord($Locals_rgb &#123; <span class="number">3</span> * $j + <span class="number">0</span> &#125;) == ( ( <span class="keyword">$this</span>-&gt;transparent_colour &gt;&gt; <span class="number">16</span> ) &amp; <span class="number">0xFF</span> ) &amp;&amp;</span><br><span class="line">                    ord($Locals_rgb &#123; <span class="number">3</span> * $j + <span class="number">1</span> &#125;) == ( ( <span class="keyword">$this</span>-&gt;transparent_colour &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span> ) &amp;&amp;</span><br><span class="line">                    ord($Locals_rgb &#123; <span class="number">3</span> * $j + <span class="number">2</span> &#125;) == ( ( <span class="keyword">$this</span>-&gt;transparent_colour &gt;&gt; <span class="number">0</span> ) &amp; <span class="number">0xFF</span> )</span><br><span class="line">                ) &#123;</span><br><span class="line">                    $Locals_ext = <span class="string">"!\xF9\x04"</span> . chr(( <span class="keyword">$this</span>-&gt;DIS &lt;&lt; <span class="number">2</span> ) + <span class="number">1</span>) .</span><br><span class="line">                        chr(( $delay &gt;&gt; <span class="number">0</span> ) &amp; <span class="number">0xFF</span>) . chr(( $delay &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span>) . chr($j) . <span class="string">"\x0"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> ($Locals_tmp &#123; <span class="number">0</span> &#125;) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"!"</span>:</span><br><span class="line">                $Locals_img = substr($Locals_tmp, <span class="number">8</span>, <span class="number">10</span>);</span><br><span class="line">                $Locals_tmp = substr($Locals_tmp, <span class="number">18</span>, strlen($Locals_tmp) - <span class="number">18</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">","</span>:</span><br><span class="line">                $Locals_img = substr($Locals_tmp, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">                $Locals_tmp = substr($Locals_tmp, <span class="number">10</span>, strlen($Locals_tmp) - <span class="number">10</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x80</span> &amp;&amp; <span class="keyword">$this</span>-&gt;first_frame === <span class="keyword">FALSE</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($Global_len == $Locals_len) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;blockCompare($Global_rgb, $Locals_rgb, $Global_len)) &#123;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;image .= ( $Locals_ext . $Locals_img . $Locals_tmp );</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $byte = ord($Locals_img &#123; <span class="number">9</span> &#125;);</span><br><span class="line">                    $byte |= <span class="number">0x80</span>;</span><br><span class="line">                    $byte &amp;= <span class="number">0xF8</span>;</span><br><span class="line">                    $byte |= ( ord(<span class="keyword">$this</span>-&gt;buffer [<span class="number">0</span>] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> );</span><br><span class="line">                    $Locals_img &#123; <span class="number">9</span> &#125; = chr($byte);</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;image .= ( $Locals_ext . $Locals_img . $Locals_rgb . $Locals_tmp );</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $byte = ord($Locals_img &#123; <span class="number">9</span> &#125;);</span><br><span class="line">                $byte |= <span class="number">0x80</span>;</span><br><span class="line">                $byte &amp;= <span class="number">0xF8</span>;</span><br><span class="line">                $byte |= ( ord(<span class="keyword">$this</span>-&gt;buffer [$frame] &#123; <span class="number">10</span> &#125;) &amp; <span class="number">0x07</span> );</span><br><span class="line">                $Locals_img &#123; <span class="number">9</span> &#125; = chr($byte);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;image .= ( $Locals_ext . $Locals_img . $Locals_rgb . $Locals_tmp );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;image .= ( $Locals_ext . $Locals_img . $Locals_tmp );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;first_frame = <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add the gif footer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">addFooter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;image .= <span class="string">";"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Compare gif blocks? What is a block?</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $GlobalBlock</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $LocalBlock</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $Len</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">blockCompare</span><span class="params">($GlobalBlock, $LocalBlock, $Len)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $Len; $i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (</span><br><span class="line">                $GlobalBlock &#123; <span class="number">3</span> * $i + <span class="number">0</span> &#125; != $LocalBlock &#123; <span class="number">3</span> * $i + <span class="number">0</span> &#125; ||</span><br><span class="line">                $GlobalBlock &#123; <span class="number">3</span> * $i + <span class="number">1</span> &#125; != $LocalBlock &#123; <span class="number">3</span> * $i + <span class="number">1</span> &#125; ||</span><br><span class="line">                $GlobalBlock &#123; <span class="number">3</span> * $i + <span class="number">2</span> &#125; != $LocalBlock &#123; <span class="number">3</span> * $i + <span class="number">2</span> &#125;</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="keyword">return</span> ( <span class="number">0</span> );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ( <span class="number">1</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * No clue</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string the char you meant?</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">word</span><span class="params">($int)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ( chr($int &amp; <span class="number">0xFF</span>) . chr(( $int &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span>) );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return the animated gif</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> resource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;image;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return the animated gif</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@echo</span> image</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//late footer add</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;addFooter();</span><br><span class="line">        header(<span class="string">'Content-type:image/gif'</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;image;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>使用示例代码:<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$str = <span class="string">'abcdefghijkmnpqrstuvwxy3456789'</span>;</span><br><span class="line">$len = strlen($str) - <span class="number">1</span>;</span><br><span class="line">$text = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">6</span>; $i++) &#123;</span><br><span class="line">$text .= $str[rand(<span class="number">0</span>, $len)];</span><br><span class="line">&#125;</span><br><span class="line">$gif = ImageCode(</span><br><span class="line">$text, <span class="number">8</span>, <span class="number">1</span>,</span><br><span class="line"><span class="number">100</span>, <span class="number">35</span>,</span><br><span class="line"><span class="number">23</span></span><br><span class="line">);</span><br><span class="line">$gif-&gt;display();</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近感觉自己的项目上的验证码太low了,决定换一个有意思的动态gif验证码&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="https://hexo.lilis.xin/tags/PHP/"/>
    
      <category term="代码" scheme="https://hexo.lilis.xin/tags/%E4%BB%A3%E7%A0%81/"/>
    
      <category term="captcha" scheme="https://hexo.lilis.xin/tags/captcha/"/>
    
      <category term="gif" scheme="https://hexo.lilis.xin/tags/gif/"/>
    
  </entry>
  
  <entry>
    <title>gd-输出图片流</title>
    <link href="https://hexo.lilis.xin/posts/faad097e/"/>
    <id>https://hexo.lilis.xin/posts/faad097e/</id>
    <published>2018-11-06T10:11:07.000Z</published>
    <updated>2019-09-12T06:27:03.599Z</updated>
    
    <content type="html"><![CDATA[<p>最近在搞laravels项目,由于laravels是通过swoole来加速laravel的,php-fpm模式下的一些输出函数收到了干扰,比如:header(),在laravels下返回输出和header头的设定需要由response()来完成.但是gd的输出就比较特别了,它要么输出网页,要么输出文件.如果想要输出二进制流再交给PHP就比较麻烦了,网上普遍的方案就是先把gd图像输出到缓存文件里,再读取出来.可是在要有占用了太多的磁盘I/O<br><a id="more"></a></p><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p><code>gd</code>直接输出到网页我们后台无法很好的设置<code>header</code>来标注文件类型.</p><h4 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h4><p><code>gd</code>先输出到文件,在用<code>file_get_contents</code>读取.<br>缺陷:太过于占用磁盘<code>I/O</code><br><code>gd</code>的输出先由<code>ob</code>缓存下来,再用<code>ob_get_contents</code>获取.<br>代码:<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">ob_start();</span><br><span class="line"><span class="keyword">switch</span> ($type) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'jpg'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'jpeg'</span>:</span><br><span class="line">$type = <span class="string">'image/jpeg'</span>;</span><br><span class="line">imagejpeg(<span class="keyword">$this</span>-&gt;image, <span class="string">''</span>, <span class="number">0.5</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'png'</span>:</span><br><span class="line">$type = <span class="string">'image/png'</span>;</span><br><span class="line">imagepng(<span class="keyword">$this</span>-&gt;image);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'bmp'</span>:</span><br><span class="line">$type = <span class="string">'image/vnd.wap.wbmp'</span>;</span><br><span class="line">imagewbmp(<span class="keyword">$this</span>-&gt;image);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'gif'</span>:</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">$type = <span class="string">'image/gif'</span>;</span><br><span class="line">imagegif(<span class="keyword">$this</span>-&gt;image);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">$contents = ob_get_contents();</span><br><span class="line">ob_end_clean();</span><br><span class="line"><span class="keyword">return</span> response($content)</span><br><span class="line">-&gt;header(<span class="string">'Content-type'</span>, $type);</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在搞laravels项目,由于laravels是通过swoole来加速laravel的,php-fpm模式下的一些输出函数收到了干扰,比如:header(),在laravels下返回输出和header头的设定需要由response()来完成.但是gd的输出就比较特别了,它要么输出网页,要么输出文件.如果想要输出二进制流再交给PHP就比较麻烦了,网上普遍的方案就是先把gd图像输出到缓存文件里,再读取出来.可是在要有占用了太多的磁盘I/O&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="https://hexo.lilis.xin/tags/PHP/"/>
    
      <category term="gd" scheme="https://hexo.lilis.xin/tags/gd/"/>
    
      <category term="ob" scheme="https://hexo.lilis.xin/tags/ob/"/>
    
  </entry>
  
  <entry>
    <title>在Merlin上安装Entware</title>
    <link href="https://hexo.lilis.xin/posts/32c6b91b/"/>
    <id>https://hexo.lilis.xin/posts/32c6b91b/</id>
    <published>2018-11-05T08:01:50.000Z</published>
    <updated>2019-09-12T06:27:03.599Z</updated>
    
    <content type="html"><![CDATA[<p>在之前安装好Merlin后,接下来就是安装Entware,不过在安装Entware之前需要先挂载U盘并格式化为ext4.<br><a id="more"></a></p><h3 id="安装fdisk"><a href="#安装fdisk" class="headerlink" title="安装fdisk"></a>安装fdisk</h3><p>fdisk一般的Merlin都是自带的,无需安装,如果还没有安装fdisk而且也还没有Entware的话要么就直接用电脑格式化后挂载进去(这个我没有试过,应该效果一致)</p><h3 id="检查设备"><a href="#检查设备" class="headerlink" title="检查设备"></a>检查设备</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这里先输出系统分区之类的不用管，外置设备一般在最后</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 一般会有类似于这样的,如果没有那你需要检查一下U盘是否正常</span></span><br><span class="line">Disk /dev/sda: 30.7 GB, 30752000000 bytes</span><br><span class="line">64 heads, 32 sectors/track, 29327 cylinders</span><br></pre></td></tr></table></figure><p>上面的信息注意看到和你的存储大小一样的设备，我的是<code>/dev/sda</code>，在它里面有个<code>/dev/sda1</code>的分区</p><h3 id="删除并建立新的分区"><a href="#删除并建立新的分区" class="headerlink" title="删除并建立新的分区"></a>删除并建立新的分区</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sda # 这是你的设备別打成分区,注意别打成了sda1</span><br><span class="line"></span><br><span class="line">Welcome to fdisk (util-linux 2.29.2).</span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line">Command (m for help): d # 输入d回车，我只有一个分区，它自动选择了，如果你有多个分区，可以多次使用d</span><br><span class="line">Selected partition 1</span><br><span class="line">Partition 1 has been deleted.</span><br><span class="line"></span><br><span class="line">Command (m for help): n # 输入n会车，创建分区</span><br><span class="line">Partition type</span><br><span class="line">p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">e   extended (container for logical partitions)</span><br><span class="line"></span><br><span class="line">Select (default p): p # 选择p</span><br><span class="line">Partition number (1-4, default 1): # 回车</span><br><span class="line">First sector (2048-2065023, default 2048): #回车</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (2048-2065023, default 2065023): # 回车</span><br><span class="line">Created a new partition 1 of type 'Linux' and of size 1007.3 MiB.</span><br><span class="line"></span><br><span class="line">Command (m for help): w # 输入w回车，保存并退出</span><br><span class="line">The partition table has been altered.</span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure><p>经过以上的操作，你可以用<code>fdisk -l</code>命令查看U盘上是否只有一个<code>Linux</code>分区<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br><span class="line"><span class="meta">#</span><span class="bash"> 找到你的设备 可以看到ID为83就对了</span></span><br><span class="line">Disk /dev/sda: 30.7 GB, 30752000000 bytes</span><br><span class="line">64 heads, 32 sectors/track, 29327 cylinders</span><br><span class="line">Units = cylinders of 2048 * 512 = 1048576 bytes</span><br><span class="line">Device Boot      Start         End      Blocks  Id System</span><br><span class="line">/dev/sda1               2       29327    30029824  83 Linux</span><br></pre></td></tr></table></figure><p></p><h3 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果你的硬盘比较大，256G以上的话，是这个命令：mkfs.ext4 -T largefile /dev/sda1</span></span><br><span class="line">mke2fs 1.43.3 (04-Sep-2016)</span><br><span class="line">/dev/sda1 contains a ext4 file system labelled 'ONMP'</span><br><span class="line">last mounted on Sun Nov 12 09:21:22 2017</span><br><span class="line">Proceed anyway? (y,n) y # 输入y回车</span><br><span class="line">umount /dev/sda1 # 如果出错，可能是因为已经被挂载了，先执行这个卸载</span><br></pre></td></tr></table></figure><h3 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir /mnt/sda1</span><br><span class="line">mount -t ext4 /dev/sda1 /mnt/sda1/</span><br><span class="line">df -h</span><br><span class="line">Filesystem                Size      Used Available Use% Mounted on</span><br><span class="line">/dev/sda1               975.5M      2.5M    906.6M   0% /tmp/mnt/sda1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以看到已经挂载</span></span><br></pre></td></tr></table></figure><h3 id="安装和使用Entware"><a href="#安装和使用Entware" class="headerlink" title="安装和使用Entware"></a>安装和使用Entware</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">entware-setup.sh</span><br></pre></td></tr></table></figure><p>注意一下选择分区的时候选择刚才挂载上去的那个<br>参考:</p><ul><li><a href="https://github.com/xzhih/ONMP/wiki/%E5%9C%A8%E6%A2%85%E6%9E%97%E4%B8%8A%E5%AE%89%E8%A3%85-Entware" title="在梅林上安装 Entware" target="_blank" rel="noopener">在梅林上安装 Entware</a></li><li><a href="https://github.com/xzhih/ONMP/wiki/%E5%A6%82%E4%BD%95%E5%9C%A8%E8%B7%AF%E7%94%B1%E5%99%A8%E4%B8%8A%E6%A0%BC%E5%BC%8F%E5%8C%96-U-%E7%9B%98%E4%B8%BA-ext4" title="如何在路由器上格式化 U 盘为 ext4" target="_blank" rel="noopener">如何在路由器上格式化 U 盘为 ext4</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在之前安装好Merlin后,接下来就是安装Entware,不过在安装Entware之前需要先挂载U盘并格式化为ext4.&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Merlin" scheme="https://hexo.lilis.xin/tags/Merlin/"/>
    
      <category term="R7000" scheme="https://hexo.lilis.xin/tags/R7000/"/>
    
      <category term="路由器" scheme="https://hexo.lilis.xin/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
      <category term="Entware" scheme="https://hexo.lilis.xin/tags/Entware/"/>
    
      <category term="磁盘管理" scheme="https://hexo.lilis.xin/tags/%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>R7000刷Merlin</title>
    <link href="https://hexo.lilis.xin/posts/50136e28/"/>
    <id>https://hexo.lilis.xin/posts/50136e28/</id>
    <published>2018-11-05T05:56:02.000Z</published>
    <updated>2019-09-12T06:27:03.598Z</updated>
    
    <content type="html"><![CDATA[<p>之前买了一个Netgear R7000 路由器,到手后就感觉忍受不了它的那个超不好用的web ui,所以就没上手两分钟果断刷机成Merlin了.<br><a id="more"></a></p><h3 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h3><ol><li>刷机到<code>Merlin</code>和<code>Netgear</code>之间的一个过渡固件(这其实就是一些玩家做的<code>Netgear</code>版的<code>Merlin</code>固件包,是一个完整版的<code>Merlin</code>,只是版本比较老)</li><li>刷机到最新版的<code>Merlin</code><h3 id="所需材料"><a href="#所需材料" class="headerlink" title="所需材料"></a>所需材料</h3><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R7000_380.70_0-X7.9.1-koolshare.chk" title="R7000_380.70_0-X7.9.1-koolshare.chk" target="_blank" rel="noopener">R7000_380.70_0-X7.9.1-koolshare.chk</a><br><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R7000_380.70_0-X7.9.1-koolshare.trx" title="R7000_380.70_0-X7.9.1-koolshare.trx" target="_blank" rel="noopener">R7000_380.70_0-X7.9.1-koolshare.trx</a></li></ol><h3 id="刷机方法"><a href="#刷机方法" class="headerlink" title="刷机方法"></a>刷机方法</h3><ul><li>浏览器输入<a href="http://www.routerlogin.net" target="_blank" rel="noopener">www.routerlogin.net</a></li><li>进入<code>高级</code>—<code>管理</code>—<code>固件更新</code>，上传 <code>R7000_380.70_0-X7.9.1-koolshare.chk</code> 固件，点更新(有很多教程说要在这一步之前恢复出厂设置,不过我这边没有恢复也可以,如果有玩家不放心恢复出厂设置也可以)<br>更新固件过程中路由器可能要重启几次</li><li>再输入<a href="http://router.asus.com/" title="http://router.asus.com/" target="_blank" rel="noopener">http://router.asus.com/</a>访问新的固件的控制面板</li><li>恢复一次出厂设置(这一次恢复出厂设置和格式化jffs分区也不是是必须的)</li><li>格式化jffs分区 进入路由管理界面 -<code>系统管理</code>- <code>系统设置</code>，勾选<code>Format JFFS partition at next boot</code>，点击应用本页面设置后重启路由器</li><li>进入路由器设置。<code>系统管理</code>—<code>固件升级</code>，选择 <code>R7000_380.70_0-X7.9.1-koolshare.trx</code> 上传后更新。</li><li>再恢复一次出厂设置就可以正常使用了<h5 id="清配置说明"><a href="#清配置说明" class="headerlink" title="清配置说明"></a>清配置说明</h5></li></ul><table><thead><tr><th>A 刷 B</th><th>（B）X6.x</th><th>（B）X7.x</th><th>（B）X7.9.1</th></tr></thead><tbody><tr><td>（A）X6.x</td><td>保持</td><td>清配置+格式化jffs</td><td>清配置+格式化jffs</td></tr><tr><td>（A）X7.x</td><td>清配置+格式化jffs</td><td>保持</td><td>保持</td></tr><tr><td>（A）X7.9.1</td><td>清配置+格式化jffs</td><td>仅格式化jffs</td><td>保持</td></tr></tbody></table><h5 id="固件双清方法"><a href="#固件双清方法" class="headerlink" title="固件双清方法"></a>固件双清方法</h5><p>如果固件出现问题,一时找不到解决办法,可以尝试双清并手动配置,方法如下</p><ul><li>格式化jffs分区：方法同上；</li><li>恢复出厂设置：进入路由管理界面 -【【系统管理】- 【恢复/导出/上传设置】- 【原厂默认值】，点击原厂默认值一栏的【恢复】按钮；</li><li>建议完成双清后手动配置路由，而不是用以前备份的配置，以避免可能的问题；<h3 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h3></li><li>X7.9.1 固件 (trx)<ul><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R6300V2_380.70_0-X7.9.1-koolshare.trx" title="R6300V2" target="_blank" rel="noopener">R6300V2</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R6400_380.70_0-X7.9.1-koolshare.trx" title="R6400" target="_blank" rel="noopener">R6400</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R7000_380.70_0-X7.9.1-koolshare.trx" title="R6900/R7000" target="_blank" rel="noopener">R6900/R7000</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R8000_380.70_0-X7.9.1-koolshare.trx" title="R8000" target="_blank" rel="noopener">R8000</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R8500_380.70_0-X7.9.1-koolshare.trx" title="R8500" target="_blank" rel="noopener">R8500</a></li></ul></li><li>X7.9.1 过渡固件 (chk)<ul><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R6300V2_380.70_0-X7.9.1-koolshare.chk" title="R6300V2" target="_blank" rel="noopener">R6300V2</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R6400_380.70_0-X7.9.1-koolshare.chk" title="R6400" target="_blank" rel="noopener">R6400</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R7000_380.70_0-X7.9.1-koolshare.chk" title="R6900/R7000" target="_blank" rel="noopener">R6900/R7000</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R8000_380.70_0-X7.9.1-koolshare.chk" title="R8000" target="_blank" rel="noopener">R8000</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R8500_380.70_0-X7.9.1-koolshare.chk" title="R8500" target="_blank" rel="noopener">R8500</a></li></ul></li><li>X7.9<ul><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R6300V2_380.70_0-X7.9-koolshare.trx" title="R6300V2" target="_blank" rel="noopener">R6300V2</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R6400_380.70_0-X7.9-koolshare.trx" title="R6400" target="_blank" rel="noopener">R6400</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R7000_380.70_0-X7.9-koolshare.trx" title="R6900/R7000" target="_blank" rel="noopener">R6900/R7000</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R8000_380.70_0-X7.9-koolshare.trx" title="R8000" target="_blank" rel="noopener">R8000</a></li><li><a href="https://blog.lilis.xin/pixivTop50/plugin/file/Router/R8500_380.70_0-X7.9-koolshare.trx" title="R8500" target="_blank" rel="noopener">R8500</a></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前买了一个Netgear R7000 路由器,到手后就感觉忍受不了它的那个超不好用的web ui,所以就没上手两分钟果断刷机成Merlin了.&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Merlin" scheme="https://hexo.lilis.xin/tags/Merlin/"/>
    
      <category term="R7000" scheme="https://hexo.lilis.xin/tags/R7000/"/>
    
      <category term="路由器" scheme="https://hexo.lilis.xin/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>测试Emoji表情</title>
    <link href="https://hexo.lilis.xin/posts/5cd7067a/"/>
    <id>https://hexo.lilis.xin/posts/5cd7067a/</id>
    <published>2018-10-29T13:43:42.000Z</published>
    <updated>2019-09-12T06:27:03.600Z</updated>
    
    <content type="html"><![CDATA[<p>🐰 🐨 🐸 🐞 🐾 😄 💙✈️👶🐤🎈🐻🌵👯😰🍂💋🎃🐙</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;🐰 🐨 🐸 🐞 🐾 😄 💙✈️👶🐤🎈🐻🌵👯😰🍂💋🎃🐙&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="emoji" scheme="https://hexo.lilis.xin/tags/emoji/"/>
    
  </entry>
  
  <entry>
    <title>LaravelS开发记录</title>
    <link href="https://hexo.lilis.xin/posts/45ef7ac/"/>
    <id>https://hexo.lilis.xin/posts/45ef7ac/</id>
    <published>2018-10-29T08:35:19.000Z</published>
    <updated>2019-09-12T06:27:03.598Z</updated>
    
    <content type="html"><![CDATA[<p>主要记录了由普通PHP开发者初步接触laravelS是所遇到的一些小坑<br><a id="more"></a></p><h3 id="LaravelS介绍"><a href="#LaravelS介绍" class="headerlink" title="LaravelS介绍"></a>LaravelS介绍</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> _                               _  _____</span><br><span class="line">| |                             | |/ ____|</span><br><span class="line">| |     __ _ _ __ __ ___   _____| | (___</span><br><span class="line">| |    / _` | &apos;__/ _` \ \ / / _ \ |\___ \</span><br><span class="line">| |___| (_| | | | (_| |\ V /  __/ |____) |</span><br><span class="line">|______\__,_|_|  \__,_| \_/ \___|_|_____/</span><br></pre></td></tr></table></figure><p>LaravelS是一个能够使普通的laravel项目尽快的享受上swoole的优势的laravel插件<br>官方描述:<br>🚀LaravelS是一个胶水项目，用于快速集成Swoole到Laravel或Lumen，然后赋予它们更好的性能、更多可能性。</p><p>GitHub地址:<br><a href="https://github.com/hhxsv5/laravel-s" title="hhxsv5/laravel-s" target="_blank" rel="noopener">hhxsv5/laravel-s</a><br>文档地址:<br><a href="https://github.com/hhxsv5/laravel-s/blob/master/README-CN.md" title="laravel-s/README-CN.md" target="_blank" rel="noopener">laravel-s/README-CN.md</a><br>Laravel-China地址:<br><a href="https://laravel-china.org/articles/8050/laravels-speed-up-laravellumen-through-swoole" title="LaravelS - 基于 Swoole 加速 Laravel/Lumen - 带你飞 🚀" target="_blank" rel="noopener">LaravelS - 基于 Swoole 加速 Laravel/Lumen - 带你飞 🚀</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h4><table><thead><tr><th>依赖</th><th>说明</th></tr></thead><tbody><tr><td>PHP</td><td>&gt;= 5.5.9 推荐PHP7+</td></tr><tr><td>Swoole</td><td>&gt;= 1.7.19 从2.0.12开始不再支持PHP5 推荐4.2.3+</td></tr><tr><td>Laravel/Lumen</td><td>&gt;= 5.1 推荐5.6+</td></tr></tbody></table><h4 id="安装swoole"><a href="#安装swoole" class="headerlink" title="安装swoole"></a>安装swoole</h4><p>详细请参考 <a href="https://hexo.lilis.xin/2018/07/26/install-swoole/" title="swoole安装">swoole安装</a></p><h4 id="安装laravel"><a href="#安装laravel" class="headerlink" title="安装laravel"></a>安装laravel</h4><p>可以通过composer直接安装,或者安装安装器或者直接从GitHub拷贝源代码来安装</p><h4 id="安装laravelS"><a href="#安装laravelS" class="headerlink" title="安装laravelS"></a>安装laravelS</h4><ol><li><p>通过Composer安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">composer require "hhxsv5/laravel-s:~3.0" -vvv</span><br><span class="line"><span class="meta">#</span><span class="bash"> 确保你的composer.lock文件是在版本控制中</span></span><br></pre></td></tr></table></figure></li><li><p>注册<code>Service Provider</code></p><ul><li><p>Laravel: 修改文件<code>config/app.php</code>，Laravel 5.5+支持包自动发现，你应该跳过这步</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'providers'</span> =&gt; [</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    Hhxsv5\LaravelS\Illuminate\LaravelSServiceProvider::class,</span><br><span class="line">],</span><br></pre></td></tr></table></figure></li><li><p>Lumen: 修改文件<code>bootstrap/app.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$app-&gt;register(Hhxsv5\LaravelS\Illuminate\LaravelSServiceProvider::class);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>发布配置文件.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan laravels publish</span><br></pre></td></tr></table></figure></li></ol><p>如果你用的是<code>lumen</code>,不需要加载<code>config/laravels.php</code><br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个可有可无</span></span><br><span class="line">$app-&gt;configure(<span class="string">'laravels'</span>);</span><br></pre></td></tr></table></figure><p></p><ol start="4"><li>修改配置<code>config/laravels.php</code><br>请参考<code>laravelS配置项</code></li></ol><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan laravels &#123;start|stop|restart|reload|publish&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>start</td><td>启动<code>LaravelS</code>。选项<code>-d</code>或<code>--daemonize</code>以守护进程的方式运行，此选项将覆盖<code>laravels.php</code>中<code>swoole.daemonize</code>设置</td></tr><tr><td>stop</td><td>停止<code>LaravelS</code></td></tr><tr><td>restart</td><td>重启<code>LaravelS</code>，支持选项<code>-d</code>或<code>--daemonize</code></td></tr><tr><td>reload</td><td>平滑重启所有<code>worker</code>进程，这些<code>worker</code>进程内包含你的业务代码和框架(<code>Laravel/Lumen</code>)代码，不会重启<code>master/manger</code>进程</td></tr><tr><td>publish</td><td>发布配置文件到你的项目中<code>config/laravels.php</code></td></tr></tbody></table><p>ps:展示已经启动的项目:<br><code>ps -ef|grep laravels</code></p><h4 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">gzip on;</span><br><span class="line">gzip_min_length 1024;</span><br><span class="line">gzip_comp_level 2;</span><br><span class="line">gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml;</span><br><span class="line">gzip_vary on;</span><br><span class="line">gzip_disable "msie6";</span><br><span class="line">upstream laravels &#123;</span><br><span class="line">    # By IP:Port</span><br><span class="line">    server 127.0.0.1:9100 weight=5 max_fails=3 fail_timeout=30s; #这里配置的是laravelS监听的接口参数</span><br><span class="line">    # By UnixSocket Stream file</span><br><span class="line">    #server unix:/xxxpath/laravel-s-test/storage/laravels.sock weight=5 max_fails=3 fail_timeout=30s;</span><br><span class="line">    #server 192.168.1.1:5200 weight=3 max_fails=3 fail_timeout=30s;</span><br><span class="line">    #server 192.168.1.2:5200 backup;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name laravels.com;</span><br><span class="line"><span class="meta">#</span><span class="bash">为了给nginx定位静态资源</span></span><br><span class="line">root /xxxpath/laravel-s-test/public;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Nginx处理静态资源(建议开启gzip)，LaravelS处理动态资源。</span></span><br><span class="line">location / &#123;</span><br><span class="line">try_files $uri @laravels;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location @laravels &#123;</span><br><span class="line">        proxy_connect_timeout 60s;</span><br><span class="line">        proxy_send_timeout 60s;</span><br><span class="line">        proxy_read_timeout 120s;</span><br><span class="line">        proxy_set_header Connection "keep-alive";</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Real-PORT $remote_port;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        proxy_set_header Scheme $scheme;</span><br><span class="line">        proxy_set_header Server-Protocol $server_protocol;</span><br><span class="line">        proxy_set_header Server-Name $server_name;</span><br><span class="line">        proxy_set_header Server-Addr $server_addr;</span><br><span class="line">        proxy_set_header Server-Port $server_port;</span><br><span class="line">        proxy_pass http://laravels;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置Apache"><a href="#配置Apache" class="headerlink" title="配置Apache"></a>配置Apache</h4><p>ps:我用的是nginx,没有实际配置过,就直接把官方文档里的拿过来了<br></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">LoadModule proxy_module /yyypath/modules/mod_deflate.so</span><br><span class="line"><span class="tag">&lt;<span class="name">IfModule</span> <span class="attr">deflate_module</span>&gt;</span></span><br><span class="line">    SetOutputFilter DEFLATE</span><br><span class="line">    DeflateCompressionLevel 2</span><br><span class="line">    AddOutputFilterByType DEFLATE text/html text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml</span><br><span class="line"><span class="tag">&lt;/<span class="name">IfModule</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">VirtualHost</span> *<span class="attr">:80</span>&gt;</span></span><br><span class="line">    # 别忘了绑Host哟</span><br><span class="line">    ServerName www.laravels.com</span><br><span class="line">    ServerAdmin hhxsv5@sina.com</span><br><span class="line"></span><br><span class="line">    DocumentRoot /xxxpath/laravel-s-test/public;</span><br><span class="line">    DirectoryIndex index.html index.htm</span><br><span class="line">    <span class="tag">&lt;<span class="name">Directory</span> "/"&gt;</span></span><br><span class="line">        AllowOverride None</span><br><span class="line">        Require all granted</span><br><span class="line">    <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    LoadModule proxy_module /yyypath/modules/mod_proxy.so</span><br><span class="line">    LoadModule proxy_module /yyypath/modules/mod_proxy_balancer.so</span><br><span class="line">    LoadModule proxy_module /yyypath/modules/mod_lbmethod_byrequests.so.so</span><br><span class="line">    LoadModule proxy_module /yyypath/modules/mod_proxy_http.so.so</span><br><span class="line">    LoadModule proxy_module /yyypath/modules/mod_slotmem_shm.so</span><br><span class="line">    LoadModule proxy_module /yyypath/modules/mod_rewrite.so</span><br><span class="line"></span><br><span class="line">    ProxyRequests Off</span><br><span class="line">    ProxyPreserveHost On</span><br><span class="line">    <span class="tag">&lt;<span class="name">Proxy</span> <span class="attr">balancer:</span>//<span class="attr">laravels</span>&gt;</span></span><br><span class="line">        BalancerMember http://192.168.1.1:8011 loadfactor=7</span><br><span class="line">        #BalancerMember http://192.168.1.2:8011 loadfactor=3</span><br><span class="line">        #BalancerMember http://192.168.1.3:8011 loadfactor=1 status=+H</span><br><span class="line">        ProxySet lbmethod=byrequests</span><br><span class="line">    <span class="tag">&lt;/<span class="name">Proxy</span>&gt;</span></span><br><span class="line">    #ProxyPass / balancer://laravels/</span><br><span class="line">    #ProxyPassReverse / balancer://laravels/</span><br><span class="line"></span><br><span class="line">    # Apache处理静态资源，LaravelS处理动态资源。</span><br><span class="line">    RewriteEngine On</span><br><span class="line">    RewriteCond %&#123;DOCUMENT_ROOT&#125;%&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">    RewriteCond %&#123;DOCUMENT_ROOT&#125;%&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">    RewriteRule ^/(.*)$ balancer://laravels/%&#123;REQUEST_URI&#125; [P,L]</span><br><span class="line"></span><br><span class="line">    ErrorLog $&#123;APACHE_LOG_DIR&#125;/www.laravels.com.error.log</span><br><span class="line">    CustomLog $&#123;APACHE_LOG_DIR&#125;/www.laravels.com.access.log combined</span><br><span class="line"><span class="tag">&lt;/<span class="name">VirtualHost</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><h4 id="自定义的异步任务"><a href="#自定义的异步任务" class="headerlink" title="自定义的异步任务"></a>自定义的异步任务</h4><p>此特性依赖<code>Swoole</code>的<code>AsyncTask</code>，必须先设置<code>config/laravels.php</code>的<code>swoole.task_worker_num</code>。<br>异步事件的处理能力受<code>Task</code>进程数影响，需合理设置<code>task_worker_num</code>。<br>任务结构<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Task</span>\<span class="title">Message</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Traits</span>\<span class="title">Push</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Hhxsv5</span>\<span class="title">LaravelS</span>\<span class="title">Swoole</span>\<span class="title">Task</span>\<span class="title">Task</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Reply</span> <span class="keyword">extends</span> <span class="title">Task</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;data = $data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 任务逻辑</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"><span class="comment">//Do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>ps: 任务里没有依赖注入这种便捷的东西<br>投递任务<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实例化$action并通过deliver投递</span></span><br><span class="line"><span class="comment">//此操作是异步的，投递后立即返回</span></span><br><span class="line"><span class="comment">//由Task进程继续处理$action中的handle逻辑</span></span><br><span class="line">$task = <span class="keyword">new</span> \App\Task\Message\Reply($dat);</span><br><span class="line"><span class="comment">// $task-&gt;delay(3);// 延迟3秒投放任务</span></span><br><span class="line">\Hhxsv5\LaravelS\Swoole\Task\Task::deliver($task);</span><br></pre></td></tr></table></figure><p></p><h4 id="laravelS配置项"><a href="#laravelS配置项" class="headerlink" title="laravelS配置项"></a>laravelS配置项</h4><ul><li><p><code>listen_ip</code>：<code>string</code> 监听的IP，监听本机<code>127.0.0.1</code>(IPv4) <code>::1</code>(IPv6)，监听所有地址 <code>0.0.0.0</code>(IPv4) ::(IPv6)， 默认<code>127.0.0.1</code>。</p></li><li><p><code>listen_port</code>：<code>int</code> 监听的端口，如果端口小于1024则需要root权限，<code>default 5200</code>。</p></li><li><p><code>socket_type</code>：默认<code>SWOOLE_SOCK_TCP</code>。通常情况下，无需关心这个配置。若需Nginx代理至<code>UnixSocket Stream</code>文件，则需修改为<code>SWOOLE_SOCK_UNIX_STREAM</code>，此时<code>listen_ip</code>则是<code>UnixSocket Stream</code>文件的路径。</p></li><li><p><code>enable_gzip</code>：bool 当通过LaravelS响应数据时，是否启用gzip压缩响应的内容，依赖库<code>zlib</code>，通过命令<code>php --ri swoole|grep zlib</code>检查<code>gzip</code>是否可用。如果开启则会自动加上头部<code>Content-Encoding</code>，默认<code>false</code>。如果存在代理服务器（例如Nginx），建议代理服务器开启<code>gzip</code>，<code>LaravelS</code>关闭gzip，避免重复<code>gzip</code>压缩。</p></li><li><p><code>server</code>：<code>string</code> 当通过<code>LaravelS</code>响应数据时，设置<code>HTTP</code>头部<code>Server</code>的值，若为空则不设置，<code>default LaravelS</code>。</p></li><li><p><code>handle_static</code>：<code>bool</code> 是否开启<code>LaravelS</code>处理静态资源(要求 <code>Swoole &gt;= 1.7.21</code>，若<code>Swoole &gt;= 1.9.17</code>则由Swoole自己处理)，默认<code>false</code>，建议<code>Nginx</code>处理静态资源，<code>LaravelS</code>仅处理动态资源。静态资源的默认路径为<code>base_path(&#39;public&#39;)</code>，可通过修改<code>swoole.document_root</code>变更。</p></li><li><p><code>laravel_base_path</code>：<code>string</code> <code>Laravel/Lumen</code>的基础路径，默认<code>base_path()</code>，可用于配置符号链接。</p></li><li><p><code>inotify_reload.enable</code>：<code>bool</code> 是否开启<code>Inotify Reload</code>，用于当修改代码后实时<code>Reload</code>所有<code>worker</code>进程，依赖库<code>inotify</code>，通过命令<code>php --ri inotify</code>检查是否可用，默认<code>false</code>，建议仅开发环境开启，修改监听数上限。</p></li><li><p><code>inotify_reload.watch_path</code>：<code>string</code> <code>Inotify</code> 监控的文件路径，默认有<code>base_path()</code>。</p></li><li><p><code>inotify_reload.file_types</code>：<code>array</code> <code>Inotify</code> 监控的文件类型，默认有<code>.php</code>。</p></li><li><p><code>inotify_reload.log</code>：<code>bool</code> 是否输出<code>Reload</code>的日志，默认<code>true</code>。</p></li><li><p><code>websocket.enable</code>：<code>bool</code> 是否启用<code>WebSocket</code>服务器。启用后<code>WebSocket</code>服务器监听的<code>IP</code>和端口与<code>Http</code>服务器相同，默认<code>false</code>。</p></li><li><p><code>websocket.handler</code>：<code>string</code> <code>WebSocket</code>逻辑处理的类名，需实现接口<code>WebSocketHandlerInterface</code>，参考示例。</p></li><li><p><code>sockets</code>：<code>array</code> 配置<code>TCP/UDP</code>套接字列表，参考示例。</p></li><li><p><code>processes</code>：<code>array</code> 配置自定义进程列表，参考示例。</p></li><li><p><code>events</code>：<code>array</code> 自定义的异步事件和监听的绑定列表，参考示例。</p></li><li><p><code>swoole_tables</code>：<code>array</code> 定义的<code>swoole_table</code>列表，参考示例。</p></li><li><p><code>register_providers</code>：<code>array</code> 每次请求需要重新注册的<code>Service Provider</code>列表，若存在<code>boot()</code>方法，会自动执行。一般用于清理注册了单例的<code>ServiceProvider</code>。</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="string">'register_providers'</span> =&gt; [</span><br><span class="line">    <span class="comment">//例如：重新注册jwt的ServiceProvider</span></span><br><span class="line">    \Tymon\JWTAuth\Providers\LaravelServiceProvider::class,</span><br><span class="line">],</span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><ul><li>swoole：<code>array</code> <code>Swoole</code>的原始配置项，请参考<a href="https://wiki.swoole.com/wiki/page/274.html" title="Swoole配置项" target="_blank" rel="noopener">Swoole配置项</a>。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要记录了由普通PHP开发者初步接触laravelS是所遇到的一些小坑&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="https://hexo.lilis.xin/tags/PHP/"/>
    
      <category term="异步" scheme="https://hexo.lilis.xin/tags/%E5%BC%82%E6%AD%A5/"/>
    
      <category term="laravel" scheme="https://hexo.lilis.xin/tags/laravel/"/>
    
      <category term="LaravelS" scheme="https://hexo.lilis.xin/tags/LaravelS/"/>
    
      <category term="Lumen" scheme="https://hexo.lilis.xin/tags/Lumen/"/>
    
      <category term="swoole" scheme="https://hexo.lilis.xin/tags/swoole/"/>
    
  </entry>
  
  <entry>
    <title>php在linux下call to undefined function imagettftext()</title>
    <link href="https://hexo.lilis.xin/posts/d90db6f7/"/>
    <id>https://hexo.lilis.xin/posts/d90db6f7/</id>
    <published>2018-09-19T11:13:43.000Z</published>
    <updated>2019-09-12T06:27:03.599Z</updated>
    
    <content type="html"><![CDATA[<p>在线上环境测试图片生成的时候报错:<code>call to undefined function imagettftext()</code><br><a id="more"></a></p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>下载安装<a href="https://sourceforge.net/projects/freetype/files/freetype2/2.7.1/freetype-2.7.1.tar.gz/download" title="freetype" target="_blank" rel="noopener">freetype</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/freetype/2.7.1 --without-harfbuzz //编译</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>再重新编译安装gd</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">phpize</span><br><span class="line">make clean</span><br><span class="line">./configure --with-php-config=/usr/local/php/php72/bin/php-config--with-freetype-dir=/usr/local/freetype/2.7.1/ --enable-gd-native-ttf</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在线上环境测试图片生成的时候报错:&lt;code&gt;call to undefined function imagettftext()&lt;/code&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="gd" scheme="https://hexo.lilis.xin/tags/gd/"/>
    
      <category term="freetype" scheme="https://hexo.lilis.xin/tags/freetype/"/>
    
  </entry>
  
  <entry>
    <title>php操作redis</title>
    <link href="https://hexo.lilis.xin/posts/a8f30b9a/"/>
    <id>https://hexo.lilis.xin/posts/a8f30b9a/</id>
    <published>2018-09-19T03:32:16.000Z</published>
    <updated>2019-09-12T06:27:03.599Z</updated>
    
    <content type="html"><![CDATA[<p>这里主要是用的predis<br><a id="more"></a><br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//验证是否安装OK:打开dos窗口-&gt;输入redis-server 在打开一个dos窗口--&gt;输入redis-cli 显示：127.0.0.1:6379&gt;则成功！</span></span><br><span class="line">$redis = <span class="keyword">new</span> redis();</span><br><span class="line">$redis-&gt;connect(<span class="string">'127.0.0.1'</span>, <span class="string">'6379'</span>) || <span class="keyword">die</span>(<span class="string">"连接失败！"</span>);</span><br><span class="line">$redis-&gt;auth(<span class="string">"admin"</span>); <span class="comment">//授权</span></span><br><span class="line"><span class="comment">//******************************string类型**********************************************************</span></span><br><span class="line"><span class="comment">//String 是最简单的类型，一个Key对应一个Value，String类型是二进制安全的。Redis的String可以包含任何数据，比如jpg图片或者序列化的对象</span></span><br><span class="line">$redis-&gt;set(<span class="string">'test'</span>, <span class="number">200</span>); <span class="comment">//赋值</span></span><br><span class="line">$redis-&gt;mset(<span class="keyword">array</span>(<span class="string">'key0'</span> =&gt; <span class="string">'value0'</span>, <span class="string">'key1'</span> =&gt; <span class="string">'value1'</span>));<span class="comment">//批量赋值</span></span><br><span class="line">$redis-&gt;mget(<span class="keyword">array</span>(<span class="string">'key0'</span>, <span class="string">'key1'</span>, <span class="string">'key2'</span>));<span class="comment">//批量获取值</span></span><br><span class="line">$redis-&gt;setnx(<span class="string">'key'</span>,value);<span class="comment">//设置key对应的值为string类型的value,如果key已经存在，返回0,nx是not exist的意思</span></span><br><span class="line">$redis-&gt;msetnx(<span class="keyword">array</span>(<span class="string">'key0'</span> =&gt; <span class="string">'value0'</span>, <span class="string">'key1'</span> =&gt; <span class="string">'value1'</span>));<span class="comment">//全部成功返回1，否则失败一个也返回0</span></span><br><span class="line">$redis-&gt;getset(<span class="string">"key"</span>,<span class="string">'newvalue'</span>);<span class="comment">//getset设置key的值，并返回key的旧值</span></span><br><span class="line">$redis-&gt;setex(<span class="string">'key'</span>,<span class="number">10</span>,<span class="string">'value10'</span>);<span class="comment">//带生存时间的写入值单位s</span></span><br><span class="line">$redis-&gt;setrange(<span class="string">'key'</span>,<span class="number">0</span>,<span class="string">'hello'</span>);<span class="comment">//设置子字符串替换，key，开始位置，替换值</span></span><br><span class="line">$redis-&gt;getrange(<span class="string">"key"</span>,<span class="number">0</span>,<span class="number">2</span>);<span class="comment">//getrange获取子字符串，getrange key start end</span></span><br><span class="line">$redis-&gt;ttl(<span class="string">'key'</span>);<span class="comment">//获取key的生存时间,没设置的为-1</span></span><br><span class="line">$redis-&gt;keys(<span class="string">"*a*"</span>);<span class="comment">//获取所有key，也可获取具体key，模糊匹配key</span></span><br><span class="line">$redis-&gt;get(<span class="string">"test"</span>); <span class="comment">//根据key获取value</span></span><br><span class="line">$redis-&gt;getMultiple(<span class="keyword">array</span>(<span class="string">'key1'</span>, <span class="string">'key2'</span>, <span class="string">'key3'</span>));</span><br><span class="line">$exits = $redis-&gt;exists(<span class="string">'test'</span>); <span class="comment">//判断key是否存在。存在 true 不存在 false</span></span><br><span class="line"><span class="keyword">echo</span> $exists?$res2:<span class="string">"null"</span>;</span><br><span class="line"><span class="keyword">echo</span> $res1?$res2:<span class="string">"null"</span>;<span class="keyword">die</span>;</span><br><span class="line">$redis-&gt;delete(<span class="string">'key1'</span>, <span class="string">'key2'</span>); <span class="comment">//删除,可删除多个</span></span><br><span class="line">$redis-&gt;delete(<span class="keyword">array</span>(<span class="string">'key3'</span>, <span class="string">'key4'</span>, <span class="string">'key5'</span>));<span class="comment">//删除,可删除多个</span></span><br><span class="line">$redis-&gt;delete( $redis-&gt;keys(<span class="string">"*"</span>));<span class="comment">//传数组，删除所有key</span></span><br><span class="line">$redis-&gt;incr(<span class="string">"key"</span>,<span class="number">1</span>);<span class="comment">//自增，默认值1</span></span><br><span class="line">$redis-&gt;incrBy(<span class="string">'key'</span>,<span class="number">10</span>);<span class="comment">//必须给定参数值</span></span><br><span class="line">$redis-&gt;decr(<span class="string">"key"</span>,<span class="number">10</span>);<span class="comment">//自减，默认值1</span></span><br><span class="line">$redis-&gt;decrBy(<span class="string">'key'</span>,<span class="number">10</span>);<span class="comment">//必须给定参数值</span></span><br><span class="line">$redis-&gt;append(<span class="string">"key"</span>,<span class="string">"appendvalue"</span>);<span class="comment">//给指定的key的字符串追加value,返回新字符串的长度</span></span><br><span class="line">$redis-&gt;strlen(<span class="string">'key'</span>);<span class="comment">//获取指定key的字符串长度</span></span><br><span class="line"><span class="comment">//******************************string类型**********************************************************</span></span><br><span class="line"><span class="comment">//******************************hash类型**********************************************************</span></span><br><span class="line"><span class="comment">// Redis hash是一个string类型的field和value的映射表。它的添加删除都是0(1)</span></span><br><span class="line"><span class="comment">// hash特别适合用于存储对象。相对于将对象的每个字段存成单个string类型。</span></span><br><span class="line"><span class="comment">//将一个对象存储在hash类型中会占用更少的内存，并且可以更方便的存取整个对象。</span></span><br><span class="line">$redis-&gt;flushall();<span class="keyword">die</span>;<span class="comment">//清空所有数据库</span></span><br><span class="line"> $redis-&gt;flushdb();<span class="keyword">die</span>;<span class="comment">//清空当前数据库</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$redis-&gt;hset(<span class="string">"test"</span>,<span class="string">"username"</span>,<span class="string">"admin"</span>);<span class="comment">//单个设置</span></span><br><span class="line">$redis-&gt;hget(<span class="string">"test"</span>,<span class="string">"username"</span>);<span class="comment">//单个获取</span></span><br><span class="line">$redis-&gt;hsetnx(<span class="string">"test"</span>,<span class="string">"username"</span>,<span class="string">"admin@qq.com"</span>);<span class="comment">//设置hash field 为指定的值value,如果feild已经存在，返回0,nx是not exist的意思  </span></span><br><span class="line">$redis-&gt;hmset(<span class="string">"testabc"</span>,<span class="keyword">array</span>(<span class="string">"a"</span>=&gt;<span class="number">1</span>,<span class="string">"b"</span>=&gt;<span class="number">2</span>,<span class="string">"c"</span>=&gt;<span class="number">3</span>,<span class="string">'d'</span>=&gt;<span class="number">4</span>));<span class="comment">//批量设置</span></span><br><span class="line">$redis-&gt;hmget(<span class="string">"testabc"</span>,<span class="keyword">array</span>(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>));<span class="comment">//批量获取</span></span><br><span class="line">$redis-&gt;hincrBy(<span class="string">"test"</span>,<span class="string">"password"</span>,<span class="string">"123456"</span>);<span class="comment">//设置hash field 添加key和value</span></span><br><span class="line">$redis-&gt;hexists(<span class="string">"test"</span>,<span class="string">"usernames"</span>);<span class="comment">//测试hash field  存在1，不存在0</span></span><br><span class="line">$redis-&gt;hlen(<span class="string">"test"</span>); <span class="comment">//返回hash 里所有的 field 的数量</span></span><br><span class="line">$redis-&gt;hdel(<span class="string">"test"</span>,<span class="string">"key"</span>);<span class="comment">//删除指定hash的field</span></span><br><span class="line">$redis-&gt;hkeys(<span class="string">"test"</span>); <span class="comment">//返回hash 所有 field</span></span><br><span class="line">$redis-&gt;hvals(<span class="string">"test"</span>);<span class="comment">//返回hash 所有 field values</span></span><br><span class="line">$redis-&gt;hgetall(<span class="string">"test"</span>);<span class="comment">//获取hash中全部的field和value</span></span><br><span class="line"><span class="comment">//******************************hash类型**********************************************************</span></span><br><span class="line"><span class="comment">//******************************list链表**********************************************************</span></span><br><span class="line"><span class="comment">//栈先进后出；队列先进先出；</span></span><br><span class="line"><span class="comment">//List 是一个链表结构，主要功能是push,pop,获取一个范围的所有值等等，操作中key理解为链表的名字。</span></span><br><span class="line"><span class="comment">//Redis的list类型其实就是一个每个子元素都是string类型的双向链表。我们可以通过push,pop操作从链表的头部或者尾部添加删除元素，这样LIST既可以作为栈，又可以作为队列。</span></span><br><span class="line">$redis-&gt;lrange(<span class="string">"list"</span>,<span class="number">0</span>,<span class="number">-1</span>);<span class="comment">//取链表list 从0位开始取到最后位置；0代表头  -1代表尾</span></span><br><span class="line">$redis-&gt;lpush(<span class="string">"list"</span>,<span class="string">"1"</span>); <span class="comment">//在key对应的list的头部添加字符串元素</span></span><br><span class="line">$redis-&gt;rpush(<span class="string">"list"</span>,<span class="string">"test"</span>); <span class="comment">//在key对应的list的尾部添加字符串元素</span></span><br><span class="line">$redis-&gt;lpop(<span class="string">"list"</span>);<span class="comment">//在key对应的list的头部删除字符串元素，并返回删除字符</span></span><br><span class="line">$redis-&gt;rpop(<span class="string">"list"</span>);<span class="comment">//在key对应的list的尾部删除字符串元素，并返回删除字符</span></span><br><span class="line"><span class="keyword">echo</span>  $redis-&gt;lrem(<span class="string">"list"</span>,<span class="number">2</span>,<span class="string">'key'</span>);<span class="comment">//在list中删除N个和value相同的元素(n&lt;0从尾删除,n=0全部删除),返回的值为删除的个数</span></span><br><span class="line">$redis-&gt;lset(<span class="string">"list"</span>,<span class="number">-1</span>,<span class="string">"啊"</span>);<span class="comment">//设置list中指定下标的元素值 lset(list,位置，值)，位置可以从头或者从尾</span></span><br><span class="line">$redis-&gt;lindex(<span class="string">"list"</span>,<span class="number">0</span>);<span class="comment">//返回list中index位置的元素</span></span><br><span class="line">$redis-&gt;llen(<span class="string">"list"</span>);<span class="comment">//返回list的长度</span></span><br><span class="line">$redis-&gt;ltrim(<span class="string">"list"</span>,<span class="number">0</span>,<span class="number">1</span>);<span class="comment">//保留指定key的值的范围内的数据 0为头  -1为尾</span></span><br><span class="line">$redis-&gt;linsert(<span class="string">"list"</span>);<span class="comment">//********</span></span><br><span class="line">$redis-&gt;rpoplpush(<span class="string">"list"</span>,<span class="string">"listt"</span>);<span class="comment">//从第一个LIST的尾部移除元素并添加到第二个LIST的头部</span></span><br><span class="line"><span class="comment">//******************************list链表**********************************************************</span></span><br><span class="line"><span class="comment">//******************************set集合**********************************************************</span></span><br><span class="line"><span class="comment">//  Set是集合，它是string类型的无序集合。set是通过hash table实现的，添加，删除和查找的复杂程度都是0(1)</span></span><br><span class="line"><span class="comment">//   对集合我们可以取并集，交集，差集。通过这些操作我们可以实现SNS中的好友推荐和blog的tag功能</span></span><br><span class="line">$redis-&gt;sadd(<span class="string">"col"</span>,<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>);<span class="comment">//向集合中添加元素</span></span><br><span class="line">$redis-&gt;smembers(<span class="string">"col"</span>);<span class="comment">//集合元素列表</span></span><br><span class="line">$redis-&gt;srem(<span class="string">"col"</span>,<span class="string">'d'</span>);<span class="comment">//集合移除元素</span></span><br><span class="line">$redis-&gt;spop(<span class="string">"col"</span>);<span class="comment">//随机删除集合元素并返回删除的元素。删除最后一个元素时，则集合也被删除</span></span><br><span class="line">$redis-&gt;sdiff(<span class="string">"set1"</span>,<span class="string">"set2"</span>);<span class="comment">//取多个集合的差集，谁在前面已谁为标准（差集就是前面第一个集合有而后面所有集合都没有）</span></span><br><span class="line">$redis-&gt;sdiffstore(<span class="string">"dif"</span>,<span class="string">"set1"</span>,<span class="string">"set2"</span>);<span class="comment">//返回多个集合的差集，存在第三个集合里面</span></span><br><span class="line">$redis-&gt;sinter(<span class="string">"set"</span>,<span class="string">"set1"</span>,<span class="string">'set2'</span>);<span class="comment">//交集（所有集合都有的元素）</span></span><br><span class="line">$res = $redis-&gt;sinterstore(<span class="string">"inter"</span>,<span class="string">"set"</span>,<span class="string">"set1"</span>);<span class="comment">///取多个集合的交集,存在第三个集合里面</span></span><br><span class="line">$redis-&gt;sunion(<span class="string">"set"</span>,<span class="string">"set1"</span>,<span class="string">'set2'</span>);<span class="comment">//并集（所有集合合并去重的元素）</span></span><br><span class="line">$redis-&gt;sunionstore(<span class="string">"union"</span>,<span class="string">"set"</span>,<span class="string">"set1"</span>);<span class="comment">///取多个集合的并集,存在第三个集合里面</span></span><br><span class="line">$redis-&gt;smove(<span class="string">"set1"</span>,<span class="string">"set2"</span>,<span class="string">"value"</span>);<span class="comment">///第一个集合元素剪切到第二个集合里面。</span></span><br><span class="line">$redis-&gt;scard(<span class="string">"set"</span>);<span class="comment">//返回集合中元素的个数</span></span><br><span class="line">$redis-&gt;sismember(<span class="string">"set"</span>,<span class="string">"value"</span>);<span class="comment">//判断某个元素是否为集合的元素</span></span><br><span class="line">$redis-&gt;srandmember(<span class="string">"set"</span>);<span class="comment">//随机返回集合内的一个元素，不会删除元素</span></span><br><span class="line"></span><br><span class="line">$redis-&gt;keys(<span class="string">"*"</span>);   <span class="comment">//返回所有key</span></span><br><span class="line">$redis-&gt;keys(<span class="string">"*t"</span>);   <span class="comment">//返回所有s开头的key</span></span><br><span class="line">$res = $redis-&gt;keys(<span class="string">"*"</span>);</span><br><span class="line"><span class="keyword">foreach</span> ($res <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line"><span class="keyword">echo</span> $v.<span class="string">"=&gt;"</span>.$redis-&gt;get($v).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$redis-&gt;exists(<span class="string">"set"</span>);   <span class="comment">//判断该key是否存在</span></span><br><span class="line">$redis-&gt;del(<span class="string">"inter"</span>);   <span class="comment">//删除该key</span></span><br><span class="line">$redis-&gt;expire(<span class="string">"set2"</span>,<span class="number">100</span>);   <span class="comment">//设置key 过期时间10s</span></span><br><span class="line">$redis-&gt;ttl(<span class="string">"set3"</span>);<span class="comment">//查看过期剩余时间s</span></span><br><span class="line"></span><br><span class="line">$redis-&gt;select(<span class="string">"1"</span>);<span class="comment">// 选择数据库</span></span><br><span class="line">$redis-&gt;set(<span class="string">"name"</span>,<span class="string">"test"</span>);<span class="comment">// 设置key=&gt;value</span></span><br><span class="line">$redis-&gt;get(<span class="string">"name"</span>);<span class="comment">// 根据key获取value</span></span><br><span class="line">$redis-&gt;move(<span class="string">"get"</span>,<span class="number">1</span>);<span class="comment">// 把key移到另一个数据库</span></span><br><span class="line">$redis-&gt;persist(<span class="string">"set2"</span>);<span class="comment">// 移除过期时间</span></span><br><span class="line">$redis-&gt;randomkey();<span class="comment">//随机返回一个key</span></span><br><span class="line">$redis-&gt;rename(<span class="string">"names"</span>,<span class="string">"newname"</span>);<span class="comment">//重命名key</span></span><br><span class="line">$redis-&gt;type(<span class="string">"zset"</span>);<span class="comment">//获取key类型</span></span><br><span class="line">$redis-&gt;dbsize();<span class="comment">//获取数据库key个数</span></span><br><span class="line">$redis-&gt;info();<span class="comment">//获取redis服务信息</span></span><br><span class="line">$redis-&gt;echo(<span class="string">"hello，world"</span>);<span class="comment">//输出函数</span></span><br><span class="line"><span class="comment">//******************************set集合**********************************************************</span></span><br><span class="line"><span class="comment">//redis有五大数据类型</span></span><br><span class="line"><span class="comment">//字符串 string</span></span><br><span class="line"><span class="comment">//hash 表</span></span><br><span class="line"><span class="comment">//链表结构 list</span></span><br><span class="line"><span class="comment">//set 集合(无序)</span></span><br><span class="line"><span class="comment">//zset 有序集合</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//string来存储用户的最大id,用来id的自增</span></span><br><span class="line"><span class="comment">//hash 表来存储用户的详细信息</span></span><br><span class="line"><span class="comment">//list链表结构来存储用户的id号</span></span><br><span class="line">$uid = $redis-&gt;incr(<span class="string">"blog:id"</span>);  <span class="comment">//自增长</span></span><br><span class="line">$res = $redis-&gt;hmset(<span class="string">'blog:user:'</span> . $uid, <span class="keyword">array</span>(<span class="string">'id'</span> =&gt; $uid, <span class="string">'username'</span> =&gt;<span class="string">'admin'</span>.time() . time(), <span class="string">'password'</span> =&gt; md5(time()))); <span class="comment">//hash表插入一条记录</span></span><br><span class="line">$redis-&gt;rpush(<span class="string">"blog:uid"</span>, $uid);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$res = $redis-&gt;hgetall(<span class="string">"blog:user:"</span>.$uid);</span><br><span class="line">$redis-&gt;del(<span class="string">"blog:user:"</span>.$uid);<span class="comment">//删除用户</span></span><br><span class="line">$redis-&gt;lrem(<span class="string">"blog:uid"</span>,$uid);<span class="comment">//删除链表中的id</span></span><br><span class="line">print_R($res);<span class="keyword">die</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$count = $redis-&gt;lsize(<span class="string">"blog:uid"</span>); <span class="comment">//list类型count总数 </span></span><br><span class="line">$page_size = <span class="number">3</span>;</span><br><span class="line">$page_num = !<span class="keyword">empty</span>($_GET[<span class="string">'page'</span>]) ? $_GET[<span class="string">'page'</span>] : <span class="number">1</span>;</span><br><span class="line">$page_count = ceil($count / $page_size);</span><br><span class="line">$ids = $redis-&gt;lrange(<span class="string">"blog:uid"</span>, ($page_num - <span class="number">1</span>) * $page_size, (($page_num - <span class="number">1</span>) * $page_size + $page_size - <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($ids <span class="keyword">as</span> $v) &#123;</span><br><span class="line">$ress[] = $redis-&gt;hgetall(<span class="string">"blog:user:"</span> . $v); <span class="comment">//获取记录</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span><span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($ress);</span><br></pre></td></tr></table></figure><p></p><p>原文链接:<br><a href="https://www.jianshu.com/p/c1c798828477" title="php操作redis笔记！" target="_blank" rel="noopener">php操作redis笔记！</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里主要是用的predis&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="https://hexo.lilis.xin/tags/PHP/"/>
    
      <category term="redis" scheme="https://hexo.lilis.xin/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>laravel-admin安装</title>
    <link href="https://hexo.lilis.xin/posts/16eb654d/"/>
    <id>https://hexo.lilis.xin/posts/16eb654d/</id>
    <published>2018-09-10T04:13:57.000Z</published>
    <updated>2019-09-12T06:27:03.599Z</updated>
    
    <content type="html"><![CDATA[<p>1.5版本需要安装PHP 7+和Laravel 5.5</p><p>首先确保安装好了laravel，并且数据库连接设置正确。<br><a id="more"></a><br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer <span class="keyword">require</span> encore/laravel-admin <span class="string">"1.5.*"</span></span><br></pre></td></tr></table></figure><p></p><p>然后运行下面的命令来发布资源：<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan vendor:publish --provider=<span class="string">"Encore\Admin\AdminServiceProvider"</span></span><br></pre></td></tr></table></figure><p></p><p>在该命令会生成配置文件config/admin.php，可以在里面修改安装的地址、数据库连接、以及表名，都可以用默认配置不修改。</p><p>然后运行下面的命令完成安装：<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan admin:install</span><br></pre></td></tr></table></figure><p></p><p>启动服务后，在浏览器打开 <code>http://localhost/admin/</code> ,使用用户名 <code>admin</code> 和密码 <code>admin</code>登陆.<br>ps 如果报一下错误<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Specified key was too long error</span><br></pre></td></tr></table></figure><p></p><p>需要在<code>/app/Providers/AppServiceProvider.php</code>文件中修改<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Providers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\&#123;</span><br><span class="line">    <span class="title">ServiceProvider</span>,</span><br><span class="line">    <span class="title">Facades</span>\<span class="title">Schema</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppServiceProvider</span> <span class="keyword">extends</span> <span class="title">ServiceProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Schema::defaultStringLength(<span class="number">191</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.5版本需要安装PHP 7+和Laravel 5.5&lt;/p&gt;&lt;p&gt;首先确保安装好了laravel，并且数据库连接设置正确。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="https://hexo.lilis.xin/tags/PHP/"/>
    
      <category term="laravel" scheme="https://hexo.lilis.xin/tags/laravel/"/>
    
      <category term="laravel-admin" scheme="https://hexo.lilis.xin/tags/laravel-admin/"/>
    
  </entry>
  
  <entry>
    <title>Hash索引和B-Tree索引</title>
    <link href="https://hexo.lilis.xin/posts/294f33b7/"/>
    <id>https://hexo.lilis.xin/posts/294f33b7/</id>
    <published>2018-08-28T12:03:58.000Z</published>
    <updated>2019-09-12T06:27:03.598Z</updated>
    
    <content type="html"><![CDATA[<p>索引是帮助mysql获取数据的数据结构。最常见的索引是Btree索引和Hash索引。</p><p>不同的引擎对于索引有不同的支持：Innodb和MyISAM默认的索引是Btree索引；而Mermory默认的索引是Hash索引。<br><a id="more"></a><br>原文链接：<br><a href="https://blog.csdn.net/u014307117/article/details/47325091" title="Hash索引和BTree索引" target="_blank" rel="noopener">Hash索引和BTree索引</a></p><h3 id="Hash索引"><a href="#Hash索引" class="headerlink" title="Hash索引"></a>Hash索引</h3><p>所谓Hash索引，当我们要给某张表某列增加索引时，将这张表的这一列进行哈希算法计算，得到哈希值，排序在哈希数组上。所以Hash索引可以一次定位，其效率很高，而Btree索引需要经过多次的磁盘IO，但是innodb和myisam之所以没有采用它，是因为它存在着好多缺点：<br>因为Hash索引比较的是经过Hash计算的值，所以只能进行等式比较，不能用于范围查询</p><ul><li>每次都要全表扫描</li><li>由于哈希值是按照顺序排列的，但是哈希值映射的真正数据在哈希表中就不一定按照顺序排列，所以无法利用Hash索引来加速任何排序操作</li><li>不能用部分索引键来搜索，因为组合索引在计算哈希值的时候是一起计算的。</li><li>当哈希值大量重复且数据量非常大时，其检索效率并没有Btree索引高的。</li></ul><h3 id="B-Tree索引"><a href="#B-Tree索引" class="headerlink" title="B-Tree索引"></a>B-Tree索引</h3><p>至于Btree索引，它是以B+树为存储结构实现的。</p><p>但是Btree索引的存储结构在Innodb和MyISAM中有很大区别。</p><p>在MyISAM中，我们如果要对某张表的某列建立Btree索引的话，如图：<br><img src="https://img-blog.csdn.net/20150806231335315"><br>所以我们经常会说MyISAM中数据文件和索引文件是分开的。</p><p>因此MyISAM的索引方式也称为非聚集，Innodb的索引方式成为聚集索引。</p><p>至于辅助索引，类似于主索引，唯一区别就是主索引上的值不能重复，而辅助索引可以重复。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;索引是帮助mysql获取数据的数据结构。最常见的索引是Btree索引和Hash索引。&lt;/p&gt;&lt;p&gt;不同的引擎对于索引有不同的支持：Innodb和MyISAM默认的索引是Btree索引；而Mermory默认的索引是Hash索引。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="https://hexo.lilis.xin/tags/MySQL/"/>
    
      <category term="数据结构" scheme="https://hexo.lilis.xin/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>sar 找出系统瓶颈的利器</title>
    <link href="https://hexo.lilis.xin/posts/3d56cf7f/"/>
    <id>https://hexo.lilis.xin/posts/3d56cf7f/</id>
    <published>2018-08-23T03:33:28.000Z</published>
    <updated>2019-09-12T06:27:03.599Z</updated>
    
    <content type="html"><![CDATA[<p>sar是System Activity Reporter（系统活动情况报告）的缩写。sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当前运行状态。它的特点是可以连续对系统取样，获得大量的取样数据；取样数据和分析的结果都可以存入文件，所需的负载很小。sar是目前Linux上最为全面的系统性能分析工具之一，可以从14个大方面对系统的活动进行报告，包括文件的读写情况、系统调用的使用情况、串口、CPU效率、内存使用状况、进程活动及IPC有关的活动等，使用也是较为复杂。<br><a id="more"></a><br>原文链接:<br><a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/sar.html" title="sar 找出系统瓶颈的利器" target="_blank" rel="noopener">sar 找出系统瓶颈的利器</a><br>sar是查看操作系统报告指标的各种工具中，最为普遍和方便的；它有两种用法；</p><ol><li>追溯过去的统计数据（默认）</li><li>周期性的查看当前数据<h3 id="查看CPU使用率"><a href="#查看CPU使用率" class="headerlink" title="查看CPU使用率"></a>查看CPU使用率</h3><code>sar -u</code> 默认情况下显示的cpu使用率等信息就是<code>sar -u</code>;<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@lilis ~]# sar -u</span><br><span class="line">Linux 3.10.0-862.9.1.el7.x86_64 (lilis) 08/23/2018 _x86_64_(1 CPU)</span><br><span class="line"></span><br><span class="line">12:00:01 AM     CPU     %user     %nice   %system   %iowait    %steal     %idle</span><br><span class="line">12:10:01 AM     all      0.85      0.00      0.29      0.04      0.00     98.83</span><br><span class="line">12:20:01 AM     all      1.63      0.00      0.34      0.07      0.00     97.96</span><br><span class="line">12:30:01 AM     all      0.73      0.00      0.25      0.04      0.00     98.98</span><br><span class="line">12:40:01 AM     all      0.28      0.00      0.25      0.01      0.00     99.46</span><br><span class="line">12:50:01 AM     all      0.31      0.00      0.26      0.01      0.00     99.43</span><br><span class="line">01:00:01 AM     all      1.63      0.00      0.34      0.10      0.00     97.94</span><br><span class="line">01:10:01 AM     all      0.66      0.00      0.29      0.03      0.00     99.02</span><br><span class="line">01:20:01 AM     all      1.27      0.00      0.30      0.06      0.00     98.37</span><br><span class="line">01:30:01 AM     all      0.29      0.00      0.27      0.01      0.00     99.44</span><br></pre></td></tr></table></figure></li></ol><ul><li>%user 用户模式下消耗的CPU时间的比例；</li><li>%nice 通过nice改变了进程调度优先级的进程，在用户模式下消耗的CPU时间的比例</li><li>%system 系统模式下消耗的CPU时间的比例；</li><li>%iowait CPU等待磁盘I/O导致空闲状态消耗的时间比例；</li><li>%steal 利用Xen等操作系统虚拟化技术，等待其它虚拟CPU计算占用的时间比例；</li><li><p>%idle CPU空闲时间比例；</p><h3 id="查看平均负载"><a href="#查看平均负载" class="headerlink" title="查看平均负载"></a>查看平均负载</h3><p><code>sar -q</code> 查看平均负载<br>指定-q后，就能查看运行队列中的进程数、系统上的进程大小、平均负载等；与其它命令相比，它能查看各项指标随时间变化的情况；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@lilis ~]# sar -q</span><br><span class="line">Linux 3.10.0-862.9.1.el7.x86_64 (lilis) 08/23/2018 _x86_64_(1 CPU)</span><br><span class="line"></span><br><span class="line">12:00:01 AM   runq-sz  plist-sz   ldavg-1   ldavg-5  ldavg-15   blocked</span><br><span class="line">12:10:01 AM         3       187      0.00      0.02      0.05         0</span><br><span class="line">12:20:01 AM         4       190      0.06      0.03      0.05         0</span><br><span class="line">12:30:01 AM         4       187      0.00      0.01      0.05         1</span><br><span class="line">12:40:01 AM         3       187      0.00      0.01      0.05         0</span><br><span class="line">12:50:01 AM         3       187      0.07      0.10      0.08         1</span><br><span class="line">01:00:01 AM         2       190      0.24      0.08      0.06         0</span><br><span class="line">01:10:01 AM         2       187      0.08      0.03      0.05         0</span><br><span class="line">01:20:01 AM         1       187      0.00      0.03      0.05         1</span><br><span class="line">01:30:01 AM         3       187      0.00      0.01      0.05         0</span><br><span class="line">01:40:01 AM         2       187      0.01      0.03      0.05         1</span><br><span class="line">01:50:01 AM         3       187      0.00      0.01      0.05         1</span><br><span class="line">02:00:01 AM         2       187      0.00      0.01      0.05         0</span><br><span class="line">02:10:01 AM         3       190      0.00      0.04      0.05         0</span><br></pre></td></tr></table></figure></li><li><p>runq-sz：运行队列的长度（等待运行的进程数）</p></li><li>plist-sz：进程列表中进程（processes）和线程（threads）的数量</li><li>ldavg-1：最后1分钟的系统平均负载 ldavg-5：过去5分钟的系统平均负载</li><li><p>ldavg-15：过去15分钟的系统平均负载</p><h3 id="查看页面交换发生状况"><a href="#查看页面交换发生状况" class="headerlink" title="查看页面交换发生状况"></a>查看页面交换发生状况</h3><p><code>sar -W</code> 查看页面交换发生状况<br>页面发生交换时，服务器的吞吐量会大幅下降；服务器状况不良时，如果怀疑因为内存不足而导致了页面交换的发生，可以使用这个命令来确认是否发生了大量的交换；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@lilis ~]# sar -W 1 10</span><br><span class="line">Linux 3.10.0-862.9.1.el7.x86_64 (lilis) 08/23/2018 _x86_64_(1 CPU)</span><br><span class="line"></span><br><span class="line">11:43:35 AM  pswpin/s pswpout/s</span><br><span class="line">11:43:36 AM      0.00      0.00</span><br><span class="line">11:43:37 AM      0.00      0.00</span><br><span class="line">11:43:38 AM      0.00      0.00</span><br><span class="line">11:43:39 AM      0.00      0.00</span><br><span class="line">11:43:40 AM      0.00      0.00</span><br><span class="line">11:43:41 AM      0.00      0.00</span><br><span class="line">11:43:42 AM      0.00      0.00</span><br><span class="line">11:43:43 AM      0.00      0.00</span><br><span class="line">11:43:44 AM      0.00      0.00</span><br><span class="line">11:43:45 AM      0.00      0.00</span><br><span class="line">Average:         0.00      0.00</span><br></pre></td></tr></table></figure></li><li><p>pswpin/s：每秒系统换入的交换页面（swap page）数量</p></li><li><p>pswpout/s：每秒系统换出的交换页面（swap page）数量<br>要判断系统瓶颈问题，有时需几个 sar 命令选项结合起来；</p></li><li><p>怀疑CPU存在瓶颈，可用 sar -u 和 sar -q 等来查看</p></li><li>怀疑内存存在瓶颈，可用sar -B、sar -r 和 sar -W 等来查看</li><li>怀疑I/O存在瓶颈，可用 sar -b、sar -u 和 sar -d 等来查看<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3>有的linux系统下，默认可能没有安装这个包，使用<code>yum install sysstat</code> 来安装；<br>安装完毕，将性能收集工具的开关打开： <code>vim /etc/default/sysstat</code><br>设置 ENABLED=”true”<h3 id="sar参数说明"><a href="#sar参数说明" class="headerlink" title="sar参数说明"></a>sar参数说明</h3></li><li>-A 汇总所有的报告</li><li>-a 报告文件读写使用情况</li><li>-B 报告附加的缓存的使用情况</li><li>-b 报告缓存的使用情况</li><li>-c 报告系统调用的使用情况</li><li>-d 报告磁盘的使用情况</li><li>-g 报告串口的使用情况</li><li>-h 报告关于buffer使用的统计数据</li><li>-m 报告IPC消息队列和信号量的使用情况</li><li>-n 报告命名cache的使用情况</li><li>-p 报告调页活动的使用情况</li><li>-q 报告运行队列和交换队列的平均长度</li><li>-R 报告进程的活动情况</li><li>-r 报告没有使用的内存页面和硬盘块</li><li>-u 报告CPU的利用率</li><li>-v 报告进程、i节点、文件和锁表状态</li><li>-w 报告系统交换活动状况</li><li>-y 报告TTY设备活动状况</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;sar是System Activity Reporter（系统活动情况报告）的缩写。sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当前运行状态。它的特点是可以连续对系统取样，获得大量的取样数据；取样数据和分析的结果都可以存入文件，所需的负载很小。sar是目前Linux上最为全面的系统性能分析工具之一，可以从14个大方面对系统的活动进行报告，包括文件的读写情况、系统调用的使用情况、串口、CPU效率、内存使用状况、进程活动及IPC有关的活动等，使用也是较为复杂。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://hexo.lilis.xin/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>scp 跨机远程拷贝</title>
    <link href="https://hexo.lilis.xin/posts/e90a0b6e/"/>
    <id>https://hexo.lilis.xin/posts/e90a0b6e/</id>
    <published>2018-08-23T03:19:40.000Z</published>
    <updated>2019-09-12T06:27:03.599Z</updated>
    
    <content type="html"><![CDATA[<p>scp是secure copy的简写，用于在Linux下进行远程拷贝文件的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的。当你服务器硬盘变为只读 read only system时，用scp可以帮你把文件移出来。<br><a id="more"></a><br>原文链接:<br><a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/scp.html" title="scp 跨机远程拷贝" target="_blank" rel="noopener">scp 跨机远程拷贝</a></p><h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp [参数] [原路径] [目标路径]</span><br></pre></td></tr></table></figure><h3 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h3><ol><li>-1 强制scp命令使用协议ssh1</li><li>-2 强制scp命令使用协议ssh2</li><li>-4 强制scp命令只使用IPv4寻址</li><li>-6 强制scp命令只使用IPv6寻址</li><li>-B 使用批处理模式（传输过程中不询问传输口令或短语）</li><li>-C 允许压缩。（将-C标志传递给ssh，从而打开压缩功能）</li><li>-p 留原文件的修改时间，访问时间和访问权限。</li><li>-q 不显示传输进度条。</li><li>-r 递归复制整个目录。</li><li>-v 详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。</li><li>-c cipher 以cipher将数据传输进行加密，这个选项将直接传递给ssh。</li><li>-F ssh_config 指定一个替代的ssh配置文件，此参数直接传递给ssh。</li><li>-i identity_file 从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。</li><li>-l limit 限定用户所能使用的带宽，以Kbit/s为单位。</li><li>-o ssh_option 如果习惯于使用ssh_config(5)中的参数传递方式，</li><li>-P port 注意是大写的P, port是指定数据传输用到的端口号</li><li>-S program 指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。<h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp local_file remote_username@remote_ip:remote_folder</span><br><span class="line">scp remote_username@remote_ip:remote_folder local_file</span><br><span class="line">scp remote_username@remote_ip:remote_folder remote_username@remote_ip:remote_folder</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;scp是secure copy的简写，用于在Linux下进行远程拷贝文件的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的。当你服务器硬盘变为只读 read only system时，用scp可以帮你把文件移出来。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://hexo.lilis.xin/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>WordPress获取文章所有信息</title>
    <link href="https://hexo.lilis.xin/posts/9cdcaf4d/"/>
    <id>https://hexo.lilis.xin/posts/9cdcaf4d/</id>
    <published>2018-08-20T03:39:24.000Z</published>
    <updated>2019-09-12T06:27:03.599Z</updated>
    
    <content type="html"><![CDATA[<p>首先得得知当前请求的文章ID：<br><a id="more"></a><br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get_the_ID();  <span class="comment">//会返回当前文章ID</span></span><br></pre></td></tr></table></figure><p></p><p>那么我们得知文章ID后，可以使用wordpress内置函数来获取文章的所有信息:<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get_post($id); <span class="comment">//会返回id文章的所有信息</span></span><br></pre></td></tr></table></figure><p></p><p>获取到了些什么信息，我们可以看看获取的结果意义，可以得到你想要的文章任何信息：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">post_author：（整数）文章作者的编号</span><br><span class="line"></span><br><span class="line">post_date：（字符）文章发表的日期和时间（YYYY-MM-DD HH-MM-SS）</span><br><span class="line"></span><br><span class="line">post_date_gmt：（字符）文章发表的格林尼治标准时间（GMT） （YYYY-MM-DD HH-MM-SS）</span><br><span class="line"></span><br><span class="line">post_content：（字符）文章内容</span><br><span class="line"></span><br><span class="line">post_title：（字符）文章标题</span><br><span class="line"></span><br><span class="line">post_category：（整数）文章类别的编号。注意：该值在WordPress 2.1之后的版本总为0。定义文章的类别时可使用 get_the_category（）函数。</span><br><span class="line"></span><br><span class="line">post_excerpt：（字符）文章摘要</span><br><span class="line"></span><br><span class="line">post_status：（字符）文章状态（publish|pending|draft|private|static|object|attachment|inherit|future）</span><br><span class="line"></span><br><span class="line">comment_status：（字符）评论状态（open|closed|registered_only）</span><br><span class="line"></span><br><span class="line">ping_status：（字符）pingback/trackback状态（open|closed）</span><br><span class="line"></span><br><span class="line">post_password：（字符）文章密码</span><br><span class="line"></span><br><span class="line">post_name：（字符）文章的URL嵌套</span><br><span class="line"></span><br><span class="line">to_ping：（字符）要引用的URL链接</span><br><span class="line"></span><br><span class="line">pinged：（字符）引用过的链接</span><br><span class="line"></span><br><span class="line">post_modified：（字符）文章最后修改时间（YYYY-MM-DD HH-MM-SS）</span><br><span class="line"></span><br><span class="line">post_modified_gmt：（字符）文章最后修改GMT时间（YYYY-MM-DD HH-MM-SS）</span><br><span class="line"></span><br><span class="line">post_parent：（整数）父级文章编号（供附件等）</span><br><span class="line"></span><br><span class="line">guid：（字符）文章的一个链接。注意：不能将GUID作为永久链接（虽然在2.5之前的版本中它的确被当作永久链接），也不能将它作为文章的可用链接。GUID是一种独有的标识符，只是目前恰巧成为文章的一个链接。</span><br><span class="line"></span><br><span class="line">post_type：（字符）（日志 | 页面 | 附件）</span><br><span class="line"></span><br><span class="line">post_mime_type：（字符）Mime类型（供附件等）</span><br><span class="line"></span><br><span class="line">comment_count：（整数）评论总数</span><br></pre></td></tr></table></figure><p></p><p>原文链接:<br><a href="http://www.cleey.com/blog/single/id/508.html" title="WordPress获取文章所有信息" target="_blank" rel="noopener">WordPress获取文章所有信息</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先得得知当前请求的文章ID：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="https://hexo.lilis.xin/tags/PHP/"/>
    
      <category term="WordPress" scheme="https://hexo.lilis.xin/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>centos修改Hostname</title>
    <link href="https://hexo.lilis.xin/posts/e0a8795/"/>
    <id>https://hexo.lilis.xin/posts/e0a8795/</id>
    <published>2018-08-20T03:31:34.000Z</published>
    <updated>2019-09-12T06:27:03.598Z</updated>
    
    <content type="html"><![CDATA[<p>hostname主要用于区分自己所连接的服务器<br>当自己连接在多台服务器是不至于只能看ip区分服务器<br><a id="more"></a><br>临时修改hostname:<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname lilis</span><br></pre></td></tr></table></figure><p></p><p>永久修改hostname<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改或添加</span></span><br><span class="line"> HOSTNAME=lilis</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hostname主要用于区分自己所连接的服务器&lt;br&gt;当自己连接在多台服务器是不至于只能看ip区分服务器&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://hexo.lilis.xin/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>ps 进程查看器</title>
    <link href="https://hexo.lilis.xin/posts/f1c6d624/"/>
    <id>https://hexo.lilis.xin/posts/f1c6d624/</id>
    <published>2018-08-17T09:15:39.000Z</published>
    <updated>2019-09-12T06:27:03.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ps-进程查看器"><a href="#ps-进程查看器" class="headerlink" title="ps 进程查看器"></a>ps 进程查看器</h2><p>Linux中的ps命令是Process Status的缩写。ps命令用来列出系统中当前运行的那些进程。ps命令列出的是当前那些进程的快照，就是执行ps命令的那个时刻的那些进程，如果想要动态的显示进程信息，就可以使用top命令。</p><p>要对进程进行监测和控制，首先必须要了解当前进程的情况，也就是需要查看当前进程，而 ps 命令就是最基本同时也是非常强大的进程查看命令。使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等。总之大部分信息都是可以通过执行该命令得到的。<br><a id="more"></a></p><p>ps 为我们提供了进程的一次性的查看，它所提供的查看结果并不动态连续的；如果想对进程时间监控，应该用 top linux下的任务管理器 工具。</p><p>注：kill -9 命令用于杀死进程。<br>原文地址:<br><a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/ps.html" title="ps 进程查看器" target="_blank" rel="noopener">ps 进程查看器</a></p><h3 id="linux上进程有5种状态"><a href="#linux上进程有5种状态" class="headerlink" title="linux上进程有5种状态:"></a>linux上进程有5种状态:</h3><p>运行(正在运行或在运行队列中等待)<br>中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)<br>不可中断(收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)<br>僵死(进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放)<br>停止(进程收到SIGSTOP, SIGTSTP, SIGTTIN, SIGTTOU信号后停止运行运行)<br>ps工具标识进程的5种状态码:</p><ol><li>D 不可中断 uninterruptible sleep (usually IO)</li><li>R 运行 runnable (on run queue)</li><li>S 中断 sleeping</li><li>T 停止 traced or stopped</li><li>Z 僵死 a defunct (”zombie”) process<h3 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h3></li><li>a 显示所有进程</li><li>-a 显示同一终端下的所有程序</li><li>-A 显示所有进程</li><li>c 显示进程的真实名称</li><li>-N 反向选择</li><li>-e 等于“-A”</li><li>e 显示环境变量</li><li>f 显示程序间的关系</li><li>-H 显示树状结构</li><li>r 显示当前终端的进程</li><li>T 显示当前终端的所有程序</li><li>u 指定用户的所有进程</li><li>-au 显示较详细的资讯</li><li>-aux 显示所有包含其他使用者的行程</li><li>-C&lt;命令&gt; 列出指定命令的状况</li><li>–lines&lt;行数&gt; 每页显示的行数</li><li>–width&lt;字符数&gt; 每页显示的字符数</li><li>–help 显示帮助信息</li><li>–version 显示版本显示<h3 id="输出列的含义"><a href="#输出列的含义" class="headerlink" title="输出列的含义"></a>输出列的含义</h3></li><li>F 代表这个程序的旗标 (flag)， 4 代表使用者为 super user</li><li>S 代表这个程序的状态 (STAT)，关于各 STAT 的意义将在内文介绍</li><li>UID 程序被该 UID 所拥有</li><li>PID 进程的ID</li><li>PPID 则是其上级父程序的ID</li><li>C CPU 使用的资源百分比</li><li>PRI 这个是 Priority (优先执行序) 的缩写，详细后面介绍</li><li>NI 这个是 Nice 值，在下一小节我们会持续介绍</li><li>ADDR 这个是 kernel function，指出该程序在内存的那个部分。如果是个 running的程序，一般就是 “-“</li><li>SZ 使用掉的内存大小</li><li>WCHAN 目前这个程序是否正在运作当中，若为 - 表示正在运作</li><li>TTY 登入者的终端机位置</li><li>TIME 使用掉的 CPU 时间。</li><li>CMD 所下达的指令为何<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h4 id="显示所有进程信息"><a href="#显示所有进程信息" class="headerlink" title="显示所有进程信息"></a>显示所有进程信息</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@lilis ~]# ps -A</span><br><span class="line">  PID TTY          TIME CMD</span><br><span class="line">    1 ?        00:00:02 systemd</span><br><span class="line">    2 ?        00:00:00 kthreadd</span><br><span class="line">    3 ?        00:00:00 ksoftirqd/0</span><br><span class="line">    5 ?        00:00:00 kworker/0:0H</span><br><span class="line">    7 ?        00:00:00 migration/0</span><br><span class="line">    8 ?        00:00:00 rcu_bh</span><br><span class="line">    9 ?        00:00:03 rcu_sched</span><br><span class="line">   10 ?        00:00:00 lru-add-drain</span><br></pre></td></tr></table></figure></li></ol><h4 id="显示指定用户信息"><a href="#显示指定用户信息" class="headerlink" title="显示指定用户信息"></a>显示指定用户信息</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@lilis ~]# ps -u root</span><br><span class="line">  PID TTY          TIME CMD</span><br><span class="line">    1 ?        00:00:02 systemd</span><br><span class="line">    2 ?        00:00:00 kthreadd</span><br><span class="line">    3 ?        00:00:00 ksoftirqd/0</span><br><span class="line">    5 ?        00:00:00 kworker/0:0H</span><br><span class="line">    7 ?        00:00:00 migration/0</span><br><span class="line">    8 ?        00:00:00 rcu_bh</span><br><span class="line">    9 ?        00:00:03 rcu_sched</span><br><span class="line">   10 ?        00:00:00 lru-add-drain</span><br></pre></td></tr></table></figure><h4 id="显示所有进程信息，连同命令行"><a href="#显示所有进程信息，连同命令行" class="headerlink" title="显示所有进程信息，连同命令行"></a>显示所有进程信息，连同命令行</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@lilis ~]# ps -ef</span><br><span class="line">UID        PID  PPID  C STIME TTY          TIME CMD</span><br><span class="line">root         1     0  0 Aug16 ?        00:00:02 /usr/lib/systemd/systemd --switched-root --system --deserialize 22</span><br><span class="line">root         2     0  0 Aug16 ?        00:00:00 [kthreadd]</span><br><span class="line">root         3     2  0 Aug16 ?        00:00:00 [ksoftirqd/0]</span><br><span class="line">root         5     2  0 Aug16 ?        00:00:00 [kworker/0:0H]</span><br><span class="line">root         7     2  0 Aug16 ?        00:00:00 [migration/0]</span><br><span class="line">root         8     2  0 Aug16 ?        00:00:00 [rcu_bh]</span><br><span class="line">root         9     2  0 Aug16 ?        00:00:03 [rcu_sched]</span><br><span class="line">root        10     2  0 Aug16 ?        00:00:00 [lru-add-drain]</span><br></pre></td></tr></table></figure><h4 id="ps-与grep-组合使用，查找特定进程"><a href="#ps-与grep-组合使用，查找特定进程" class="headerlink" title="ps 与grep 组合使用，查找特定进程"></a>ps 与grep 组合使用，查找特定进程</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@lilis ~]# ps -ef | grep php</span><br><span class="line">root       899     1  0 Aug16 ?        00:00:03 php-fpm: master process (/usr/local/php/php71/etc/php-fpm.conf)</span><br><span class="line">www        900   899  0 Aug16 ?        00:00:00 php-fpm: pool www</span><br><span class="line">www        901   899  0 Aug16 ?        00:00:00 php-fpm: pool www</span><br><span class="line">root       906     1  0 Aug16 ?        00:00:03 php-fpm: master process (/usr/local/php/php56/etc/php-fpm.conf)</span><br><span class="line">www        907   906  0 Aug16 ?        00:00:00 php-fpm: pool www</span><br><span class="line">www        908   906  0 Aug16 ?        00:00:00 php-fpm: pool www</span><br><span class="line">root      3801     1  0 16:59 ?        00:00:00 php-fpm: master process (/usr/local/php/php72/etc/php-fpm.conf)</span><br><span class="line">www       3803  3801  0 16:59 ?        00:00:01 php-fpm: pool www</span><br><span class="line">www       3908  3801  0 17:02 ?        00:00:01 php-fpm: pool www</span><br><span class="line">www       4137  3801  0 17:08 ?        00:00:00 php-fpm: pool www</span><br><span class="line">root      4173 18277  0 17:09 pts/0    00:00:00 grep --color=auto php</span><br></pre></td></tr></table></figure><h4 id="将与这次登入的-PID-与相关信息列示出来"><a href="#将与这次登入的-PID-与相关信息列示出来" class="headerlink" title="将与这次登入的 PID 与相关信息列示出来"></a>将与这次登入的 PID 与相关信息列示出来</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@lilis ~]# ps -l</span><br><span class="line">F S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD</span><br><span class="line">0 R     0  4334 18277  0  80   0 - 38292 -      pts/0    00:00:00 ps</span><br><span class="line">4 S     0 18277 18275  0  80   0 - 28892 do_wai pts/0    00:00:00 bash</span><br></pre></td></tr></table></figure><h4 id="列出目前所有的正在内存中的程序"><a href="#列出目前所有的正在内存中的程序" class="headerlink" title="列出目前所有的正在内存中的程序"></a>列出目前所有的正在内存中的程序</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@lilis ~]# ps aux</span><br><span class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root         1  0.0  0.2  43416  2500 ?        Ss   Aug16   0:02 /usr/lib/systemd/systemd --switched-root --system --deserialize 22</span><br><span class="line">root         2  0.0  0.0      0     0 ?        S    Aug16   0:00 [kthreadd]</span><br><span class="line">root         3  0.0  0.0      0     0 ?        S    Aug16   0:00 [ksoftirqd/0]</span><br><span class="line">root         5  0.0  0.0      0     0 ?        S&lt;   Aug16   0:00 [kworker/0:0H]</span><br><span class="line">root         7  0.0  0.0      0     0 ?        S    Aug16   0:00 [migration/0]</span><br><span class="line">root         8  0.0  0.0      0     0 ?        S    Aug16   0:00 [rcu_bh]</span><br><span class="line">root         9  0.0  0.0      0     0 ?        R    Aug16   0:03 [rcu_sched]</span><br><span class="line">root        10  0.0  0.0      0     0 ?        S&lt;   Aug16   0:00 [lru-add-drain]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ps-进程查看器&quot;&gt;&lt;a href=&quot;#ps-进程查看器&quot; class=&quot;headerlink&quot; title=&quot;ps 进程查看器&quot;&gt;&lt;/a&gt;ps 进程查看器&lt;/h2&gt;&lt;p&gt;Linux中的ps命令是Process Status的缩写。ps命令用来列出系统中当前运行的那些进程。ps命令列出的是当前那些进程的快照，就是执行ps命令的那个时刻的那些进程，如果想要动态的显示进程信息，就可以使用top命令。&lt;/p&gt;&lt;p&gt;要对进程进行监测和控制，首先必须要了解当前进程的情况，也就是需要查看当前进程，而 ps 命令就是最基本同时也是非常强大的进程查看命令。使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等。总之大部分信息都是可以通过执行该命令得到的。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
